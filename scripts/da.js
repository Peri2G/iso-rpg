"use strict";var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/*
Dynamic Avatar Drawer v1.12.0
LGPL v3
(you can use it however you want, but the library itself and
any assets you create for it has to be freely accessible. i.e. I can
pull it back into the standard library)
Copyright (c) 2016 Johnson Zhong (johnsonzhong@hotmail.ca)


### GNU LESSER GENERAL PUBLIC LICENSE

Version 3, 29 June 2007

Copyright (C) 2007 Free Software Foundation, Inc.
<http://fsf.org/>

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.

This version of the GNU Lesser General Public License incorporates the
terms and conditions of version 3 of the GNU General Public License,
supplemented by the additional permissions listed below.

#### 0. Additional Definitions.

As used herein, "this License" refers to version 3 of the GNU Lesser
General Public License, and the "GNU GPL" refers to version 3 of the
GNU General Public License.

"The Library" refers to a covered work governed by this License, other
than an Application or a Combined Work as defined below.

An "Application" is any work that makes use of an interface provided
by the Library, but which is not otherwise based on the Library.
Defining a subclass of a class defined by the Library is deemed a mode
of using an interface provided by the Library.

A "Combined Work" is a work produced by combining or linking an
Application with the Library. The particular version of the Library
with which the Combined Work was made is also called the "Linked
Version".

The "Minimal Corresponding Source" for a Combined Work means the
Corresponding Source for the Combined Work, excluding any source code
for portions of the Combined Work that, considered in isolation, are
based on the Application, and not on the Linked Version.

The "Corresponding Application Code" for a Combined Work means the
object code and/or source code for the Application, including any data
and utility programs needed for reproducing the Combined Work from the
Application, but excluding the System Libraries of the Combined Work.

#### 1. Exception to Section 3 of the GNU GPL.

You may convey a covered work under sections 3 and 4 of this License
without being bound by section 3 of the GNU GPL.

#### 2. Conveying Modified Versions.

If you modify a copy of the Library, and, in your modifications, a
facility refers to a function or data to be supplied by an Application
that uses the facility (other than as an argument passed when the
facility is invoked), then you may convey a copy of the modified
version:

-   a) under this License, provided that you make a good faith effort
    to ensure that, in the event an Application does not supply the
    function or data, the facility still operates, and performs
    whatever part of its purpose remains meaningful, or
-   b) under the GNU GPL, with none of the additional permissions of
    this License applicable to that copy.

#### 3. Object Code Incorporating Material from Library Header Files.

The object code form of an Application may incorporate material from a
header file that is part of the Library. You may convey such object
code under terms of your choice, provided that, if the incorporated
material is not limited to numerical parameters, data structure
layouts and accessors, or small macros, inline functions and templates
(ten or fewer lines in length), you do both of the following:

-   a) Give prominent notice with each copy of the object code that
    the Library is used in it and that the Library and its use are
    covered by this License.
-   b) Accompany the object code with a copy of the GNU GPL and this
    license document.

#### 4. Combined Works.

You may convey a Combined Work under terms of your choice that, taken
together, effectively do not restrict modification of the portions of
the Library contained in the Combined Work and reverse engineering for
debugging such modifications, if you also do each of the following:

-   a) Give prominent notice with each copy of the Combined Work that
    the Library is used in it and that the Library and its use are
    covered by this License.
-   b) Accompany the Combined Work with a copy of the GNU GPL and this
    license document.
-   c) For a Combined Work that displays copyright notices during
    execution, include the copyright notice for the Library among
    these notices, as well as a reference directing the user to the
    copies of the GNU GPL and this license document.
-   d) Do one of the following:
    -   0) Convey the Minimal Corresponding Source under the terms of
        this License, and the Corresponding Application Code in a form
        suitable for, and under terms that permit, the user to
        recombine or relink the Application with a modified version of
        the Linked Version to produce a modified Combined Work, in the
        manner specified by section 6 of the GNU GPL for conveying
        Corresponding Source.
    -   1) Use a suitable shared library mechanism for linking with
        the Library. A suitable mechanism is one that (a) uses at run
        time a copy of the Library already present on the user's
        computer system, and (b) will operate properly with a modified
        version of the Library that is interface-compatible with the
        Linked Version.
-   e) Provide Installation Information, but only if you would
    otherwise be required to provide such information under section 6
    of the GNU GPL, and only to the extent that such information is
    necessary to install and execute a modified version of the
    Combined Work produced by recombining or relinking the Application
    with a modified version of the Linked Version. (If you use option
    4d0, the Installation Information must accompany the Minimal
    Corresponding Source and Corresponding Application Code. If you
    use option 4d1, you must provide the Installation Information in
    the manner specified by section 6 of the GNU GPL for conveying
    Corresponding Source.)

#### 5. Combined Libraries.

You may place library facilities that are a work based on the Library
side by side in a single library together with other library
facilities that are not Applications and are not covered by this
License, and convey such a combined library under terms of your
choice, if you do both of the following:

-   a) Accompany the combined library with a copy of the same work
    based on the Library, uncombined with any other library
    facilities, conveyed under the terms of this License.
-   b) Give prominent notice with the combined library that part of it
    is a work based on the Library, and explaining where to find the
    accompanying uncombined form of the same work.

#### 6. Revised Versions of the GNU Lesser General Public License.

The Free Software Foundation may publish revised and/or new versions
of the GNU Lesser General Public License from time to time. Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.

Each version is given a distinguishing version number. If the Library
as you received it specifies that a certain numbered version of the
GNU Lesser General Public License "or any later version" applies to
it, you have the option of following the terms and conditions either
of that published version or of any later version published by the
Free Software Foundation. If the Library as you received it does not
specify a version number of the GNU Lesser General Public License, you
may choose any version of the GNU Lesser General Public License ever
published by the Free Software Foundation.

If the Library as you received it specifies that a proxy can decide
whether future versions of the GNU Lesser General Public License shall
apply, that proxy's public statement of acceptance of any version is
permanent authorization for you to choose that version for the
Library.

*//*
	2D Transformation Matrix v2.1.0
	(c) Epistemex.com 2014-2016
	License: MIT, header required.
*/function Matrix(a){var b=this;b._t=b.transform;b.a=b.d=1;b.b=b.c=b.e=b.f=0;b.context=a;if(a){a.setTransform(1,0,0,1,0,0);}}Matrix.prototype={concat:function concat(a){return this.clone()._t(a.a,a.b,a.c,a.d,a.e,a.f);},flipX:function flipX(){return this._t(-1,0,0,1,0,0);},flipY:function flipY(){return this._t(1,0,0,-1,0,0);},reflectVector:function reflectVector(c,e){var b=this.applyToPoint(0,1),a=2*(b.x*c+b.y*e);c-=a*b.x;e-=a*b.y;return{x:c,y:e};},reset:function reset(){return this.setTransform(1,0,0,1,0,0);},rotate:function rotate(a){var b=Math.cos(a),c=Math.sin(a);return this._t(b,c,-c,b,0,0);},rotateFromVector:function rotateFromVector(a,b){return this.rotate(Math.atan2(b,a));},rotateDeg:function rotateDeg(a){return this.rotate(a*0.0174532925199433);},scaleU:function scaleU(a){return this._t(a,0,0,a,0,0);},scale:function scale(a,b){return this._t(a,0,0,b,0,0);},scaleX:function scaleX(a){return this._t(a,0,0,1,0,0);},scaleY:function scaleY(a){return this._t(1,0,0,a,0,0);},shear:function shear(a,b){return this._t(1,b,a,1,0,0);},shearX:function shearX(a){return this._t(1,0,a,1,0,0);},shearY:function shearY(a){return this._t(1,a,0,1,0,0);},skew:function skew(a,b){return this.shear(Math.tan(a),Math.tan(b));},skewX:function skewX(a){return this.shearX(Math.tan(a));},skewY:function skewY(a){return this.shearY(Math.tan(a));},setTransform:function setTransform(g,h,i,j,k,l){var m=this;m.a=g;m.b=h;m.c=i;m.d=j;m.e=k;m.f=l;return m._x();},translate:function translate(a,b){return this._t(1,0,0,1,a,b);},translateX:function translateX(a){return this._t(1,0,0,1,a,0);},translateY:function translateY(a){return this._t(1,0,0,1,0,a);},transform:function transform(b,d,f,h,j,l){var m=this,a=m.a,c=m.b,e=m.c,g=m.d,i=m.e,k=m.f;m.a=a*b+e*d;m.b=c*b+g*d;m.c=a*f+e*h;m.d=c*f+g*h;m.e=a*j+e*l+i;m.f=c*j+g*l+k;return m._x();},divide:function divide(b){if(!b.isInvertible()){throw"Input matrix is not invertible";}var a=b.inverse();return this._t(a.a,a.b,a.c,a.d,a.e,a.f);},divideScalar:function divideScalar(a){var b=this;b.a/=a;b.b/=a;b.c/=a;b.d/=a;b.e/=a;b.f/=a;return b._x();},inverse:function inverse(){if(this.isIdentity()){return new Matrix();}else{if(!this.isInvertible()){throw"Matrix is not invertible.";}else{var p=this,g=p.a,h=p.b,i=p.c,j=p.d,l=p.e,n=p.f,o=new Matrix(),k=g*j-h*i;o.a=j/k;o.b=-h/k;o.c=-i/k;o.d=g/k;o.e=(i*n-j*l)/k;o.f=-(g*n-h*l)/k;return o;}}},interpolate:function interpolate(c,e,a){var d=this,b=a?new Matrix(a):new Matrix();b.a=d.a+(c.a-d.a)*e;b.b=d.b+(c.b-d.b)*e;b.c=d.c+(c.c-d.c)*e;b.d=d.d+(c.d-d.d)*e;b.e=d.e+(c.e-d.e)*e;b.f=d.f+(c.f-d.f)*e;return b._x();},interpolateAnim:function interpolateAnim(e,j,a){var d=a?new Matrix(a):new Matrix(),b=this.decompose(),c=e.decompose(),k=b.translate,g=b.scale,f=b.rotation+(c.rotation-b.rotation)*j,l=k.x+(c.translate.x-k.x)*j,n=k.y+(c.translate.y-k.y)*j,h=g.x+(c.scale.x-g.x)*j,i=g.y+(c.scale.y-g.y)*j;d.translate(l,n);d.rotate(f);d.scale(h,i);return d._x();},decompose:function decompose(w){var l=this,e=l.a,h=l.b,i=l.c,j=l.d,f=Math.acos,g=Math.atan,u=Math.sqrt,m=Math.PI,v={x:l.e,y:l.f},o=0,q={x:1,y:1},t={x:0,y:0},k=e*j-h*i;if(w){if(e){t={x:g(i/e),y:g(h/e)};q={x:e,y:k/e};}else{if(h){o=m*0.5;q={x:h,y:k/h};t.x=g(j/h);}else{q={x:i,y:j};t.x=m*0.25;}}}else{if(e||h){var n=u(e*e+h*h);o=h>0?f(e/n):-f(e/n);q={x:n,y:k/n};t.x=g((e*i+h*j)/(n*n));}else{if(i||j){var p=u(i*i+j*j);o=m*0.5-(j>0?f(-i/p):-f(i/p));q={x:k/p,y:p};t.y=g((e*i+h*j)/(p*p));}else{q={x:0,y:0};}}}return{scale:q,translate:v,rotation:o,skew:t};},determinant:function determinant(){return this.a*this.d-this.b*this.c;},applyToPoint:function applyToPoint(b,c){var a=this;return{x:b*a.a+c*a.c+a.e,y:b*a.b+c*a.d+a.f};},applyToArray:function applyToArray(e){var a=0,d,b,c=[];if(typeof e[0]==="number"){b=e.length;while(a<b){d=this.applyToPoint(e[a++],e[a++]);c.push(d.x,d.y);}}else{for(;d=e[a];a++){c.push(this.applyToPoint(d.x,d.y));}}return c;},applyToTypedArray:function applyToTypedArray(e,f){var a=0,d,b=e.length,c=f?new Float64Array(b):new Float32Array(b);while(a<b){d=this.applyToPoint(e[a],e[a+1]);c[a++]=d.x;c[a++]=d.y;}return c;},applyToContext:function applyToContext(a){var b=this;a.setTransform(b.a,b.b,b.c,b.d,b.e,b.f);return b;},isIdentity:function isIdentity(){var a=this;return a._q(a.a,1)&&a._q(a.b,0)&&a._q(a.c,0)&&a._q(a.d,1)&&a._q(a.e,0)&&a._q(a.f,0);},isInvertible:function isInvertible(){return!this._q(this.determinant(),0);},isValid:function isValid(){return!this._q(this.a*this.d,0);},clone:function clone(c){var b=this,a=new Matrix();a.a=b.a;a.b=b.b;a.c=b.c;a.d=b.d;a.e=b.e;a.f=b.f;if(!c){a.context=b.context;}return a;},isEqual:function isEqual(a){var b=this,c=b._q;return c(b.a,a.a)&&c(b.b,a.b)&&c(b.c,a.c)&&c(b.d,a.d)&&c(b.e,a.e)&&c(b.f,a.f);},toArray:function toArray(){var a=this;return[a.a,a.b,a.c,a.d,a.e,a.f];},toTypedArray:function toTypedArray(d){var b=d?new Float64Array(6):new Float32Array(6),c=this;b[0]=c.a;b[1]=c.b;b[2]=c.c;b[3]=c.d;b[4]=c.e;b[5]=c.f;return b;},toCSS:function toCSS(){return"matrix("+this.toArray()+")";},toCSS3D:function toCSS3D(){var a=this;return"matrix3d("+a.a+","+a.b+",0,0,"+a.c+","+a.d+",0,0,0,0,1,0,"+a.e+","+a.f+",0,1)";},toJSON:function toJSON(){var a=this;return'{"a":'+a.a+',"b":'+a.b+',"c":'+a.c+',"d":'+a.d+',"e":'+a.e+',"f":'+a.f+"}";},toString:function toString(){return""+this.toArray();},_q:function _q(a,b){return Math.abs(a-b)<1e-14;},_x:function _x(){var a=this;if(a.context){a.context.setTransform(a.a,a.b,a.c,a.d,a.e,a.f);}return a;}};if(typeof exports!=="undefined"){exports.Matrix=Matrix;};// namespace of Context2DTracked
(function(namespace){function Transform(){// start as the identity transformation
this.val=[[1,0,0],[0,1,0],[0,0,1]];}// class definition on the namespace (probably global)
namespace.Context2DTracked=function(target){// target is Canvas Context2D that will be wrapped and tracked
this.context=target;this.tf=[new Matrix(target)];// keep track of transformations
// tracking where the current pen is on the canvas
this.penx=0;this.peny=0;// at the beginning of the path
this.justBegun=false;this.bpenx=0;this.bpeny=0;// scaling
this.scalex=1;this.scaley=1;// translate
this.ox=0;this.oy=0;// for fine control of when to show controls
this.showcontrol=false;var deprecatedProperties=['webkitImageSmoothingEnabled'];// "inherit" methods and properties from Context
var origProps=Object.getOwnPropertyNames(target.__proto__);for(var i=0;i<origProps.length;i++){var p=origProps[i];if(deprecatedProperties.indexOf(p)>=0){continue;}if(typeof target[p]==="function"){this[p]=target[p].bind(target);}// make sure to access only 1 copy of the data
else{Object.defineProperty(this,p,{get:function(p){return target[p];}.bind(null,p),set:function(p,v){return target[p]=v;}.bind(null,p)});}}// transformation handling
this.save=function(){this.tf.push(this.tf.last().clone());target.save();};this.restore=function(){this.tf.pop();target.restore();};this.transformPoint=function(x,y){// transforms a point into context coordinates
var invtf=this.tf.last().inverse();return invtf.applyToPoint(x,y);};this.scale=function(x,y){this.tf.last().scale(x,y);// target.scale(x,y);
};this.translate=function(x,y){// this.ox += x;
// this.oy += y;
// target.translate(x,y);
this.tf.last().translate(x,y);};this.setTransform=function(a,b,c,d,e,f){this.tf.last().setTransform(a,b,c,d,e,f);};this.rotate=function(angle){// target.rotate(angle);
this.tf.last().rotate(angle);};this.movePen=function(x,y){if(this.justBegun){this.justBegun=false;this.bpenx=x;this.bpeny=y;}this.penx=x;this.peny=y;};// methods that change pen position will be overriden
this.beginPath=function(){this.justBegun=true;target.beginPath();};this.moveTo=function(x,y){this.movePen(x,y);target.moveTo(x,y);};this.lineTo=function(x,y,r){if(r||this.showcontrol){if(isNaN(r)){r=1;}this.drawCurveControl({p1:{x:this.penx,y:this.peny},p2:{x:x,y:y}},{controlLine:{color:"rgb(200,100,100)",width:r/2},point:{color:"rgb(200,50,50)",fill:"white",width:r,radius:r}});}target.lineTo(x,y);this.movePen(x,y);};this.bezierCurveTo=function(cpx1,cpy1,cpx2,cpy2,x,y,r){if(r||this.showcontrol){if(isNaN(r)){r=1;}// radius of points to draw
// with
this.drawCurveControl({p1:{x:this.penx,y:this.peny},p2:{x:x,y:y},cp1:{x:cpx1,y:cpy1},cp2:{x:cpx2,y:cpy2}},{controlLine:{color:"rgb(200,100,100)",width:r/2},point:{color:"rgb(200,50,50)",fill:"white",width:r,radius:r}});}// rest of curve
target.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,x,y);this.movePen(x,y);};this.quadraticCurveTo=function(cpx,cpy,x,y,r){if(r||this.showcontrol){if(isNaN(r)){r=1;}this.drawCurveControl({p1:{x:this.penx,y:this.peny},p2:{x:x,y:y},cp1:{x:cpx,y:cpy}},{controlLine:{color:"#C00",width:r/2},point:{color:"#C00",fill:"white",width:r,radius:r}});}// rest of curve
target.quadraticCurveTo(cpx,cpy,x,y);this.movePen(x,y);};this.arc=function(x,y,radius,startAngle,endAngle,anticlockwise){// first move to starting location
// using a bit of trig
var sx=x+Math.cos(startAngle)*radius,sy=y+Math.sin(startAngle)*radius;this.movePen(sx,sy);// draw arc
target.arc(x,y,radius,startAngle,endAngle,anticlockwise);var ex=x+Math.cos(endAngle)*radius,ey=y+Math.sin(endAngle)*radius;this.movePen(ex,ey);// bug? fills to the start of the
// path, but the continuation for
// the next part of the line is
// actually the end point
this.bpenx=ex;this.bpeny=ey;};this.ellipse=function(x,y,rx,ry,rot,sa,ea,anticlockwise){if(target.ellipse){target.ellipse.apply(target,arguments);}else{// polyfill
this.save();this.translate(x,y);this.rotate(rot);this.scale(rx,ry);this.arc(0,0,1,sa,ea,anticlockwise);this.restore();}};this.arcTo=function(x1,y1,x2,y2,radius){// Don't use this please; no
// idea how to calculate the
// ending location...
target.arcTo(x1,y1,x2,y2,radius);};// fill always draws straight
// line to point starting the
// path
this.fill=function(){this.movePen(this.bpenx,this.bpeny);target.fill.apply(target,arguments);};this.clip=function(){this.movePen(this.bpenx,this.bpeny);target.clip.apply(target,arguments);};// debugging functions
this.trace=function(){var x=this.penx,y=this.peny;console.log(Math.round(x*10)/10+this.ox,Math.round(y*10)/10+this.oy);// assume path
// has begun
target.moveTo(x-5,y);target.lineTo(x+5,y);target.moveTo(x,y+5);target.lineTo(x,y-5);target.moveTo(x,y);};this.drawCurveControl=function(point,style){target.save();// assume path
// has already
// begun
var ptprint=[point.p1];// draw control
// lines
target.strokeStyle=style.controlLine.color;target.lineWidth=style.controlLine.width;if(point.cp1){target.moveTo(point.p1.x,point.p1.y);target.lineTo(point.cp1.x,point.cp1.y);ptprint.push(point.cp1);if(point.cp2){// 2
// control
// points,
// cubic
// bezier
target.lineTo(point.cp2.x,point.cp2.y);target.lineTo(point.p2.x,point.p2.y);ptprint.push(point.cp2);}else{target.lineTo(point.p2.x,point.p2.y);}}target.stroke();ptprint.push(point.p2);// control
// points
for(var i=0;i<ptprint.length;++i){var p=ptprint[i];ptprint[i]="("+Math.round(ptprint[i].x*10)/10+", "+Math.round(ptprint[i].y*10)/10+")";target.lineWidth=style.point.width;target.strokeStyle=style.point.color;target.fillStyle=style.point.fill;target.beginPath();target.arc(p.x,p.y,style.point.radius,0,2*Math.PI,true);target.fill();target.font=style.point.radius*4+"px arial";target.fillStyle="black";// target.fillText(i + 1, p.x, p.y + style.point.radius * 5);
target.stroke();}console.log("from points",ptprint.join(" to "));target.restore();target.beginPath();// return to
// previously
// open path
target.moveTo(point.p1.x,point.p1.y);};};}).call(window,window);"use strict";/*
 exported da
 */// ---- UTILITY functions
/**
 * Main exported module. Everything lives here.
 * @module da
 */var da=function(){String.prototype.capitalizeFirstLetter=function(){return this.charAt(0).toUpperCase()+this.slice(1);};if(!Array.prototype.last){Array.prototype.last=function(){return this.length?this[this.length-1]:null;};}if(!Array.prototype.extend){Array.prototype.extend=function(b){this.push.apply(this,b);};}Array.prototype.contains=function(needle){var findNaN=needle!==needle;var indexOf;if(!findNaN&&typeof Array.prototype.indexOf==="function"){indexOf=Array.prototype.indexOf;}else{indexOf=function indexOf(needle){var i=-1,index=-1;for(i=0;i<this.length;i++){var item=this[i];if(findNaN&&item!==item||item===needle){index=i;break;}}return index;};}return indexOf.call(this,needle)>-1;};function clone(obj){if(obj){return JSON.parse(JSON.stringify(obj));}}// insert an array inside another array at a specific location
function insertArray(a1,a2,pos){return a1.splice.apply(a1,[pos,0].concat(a2));}if(!String.prototype.startsWith){String.prototype.startsWith=function(searchString,position){position=position||0;return this.substr(position,searchString.length)===searchString;};}/**
     * Extract numeric RGB values from a HTML compatible string (whitespace ignored)
     * @memberof module:da
     * @param {string} rgbString RGB string in the format "rgb(100,220,42)"
     * @returns {(object|null)} Either an object holding r,g,b properties, or null if not matched
     */function extractRGB(rgbString){var rgb=/rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/.exec(rgbString);if(rgb){return{r:parseInt(rgb[1]),g:parseInt(rgb[2]),b:parseInt(rgb[3])};}return null;}/**
     * Extract numeric HSL values from a HTML compatible string (whitespace ignored)
     * @memberof module:da
     * @param {string} hslString HSL string in the format "hsl(310,12%,25%)"
     * @returns {(object|null)} Either an object holding h,s,l properties, or null if not matched
     */function extractHSL(hslString){var hsl=/hsl\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*\)/.exec(hslString);if(hsl){return{h:parseInt(hsl[1]),s:parseInt(hsl[2]),l:parseInt(hsl[3])};}return null;}/**
     * Extract numeric RGB values from a HTML compatible hex string (whitespace ignored)
     * @memberof module:da
     * @param {string} hexString Hex string in the format "#ffaabc"
     * @returns {(object|null)} Either an object holding r,g,b properties, or null if not matched
     */function extractHex(hexString){var rgb=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hexString);if(rgb){return{r:parseInt(rgb[1],16),g:parseInt(rgb[2],16),b:parseInt(rgb[3],16)};}return null;}/**
     * Convert an RGB object to HSL object, which are more intuitive to modify.
     * Adapted from https://github.com/mjackson/
     * @param {object} rgb RGB object holding r,g,b properties (each [0,255])
     * @returns {object} HSL object holding h,s,l properties (h [0,360], s,l [0,100])
     */function RGBToHSL(rgb){var r,g,b;var _ref=[rgb.r,rgb.g,rgb.b];r=_ref[0];g=_ref[1];b=_ref[2];r/=255,g/=255,b/=255;var max=Math.max(r,g,b),min=Math.min(r,g,b);var h,s,l=(max+min)/2;if(max==min){h=s=0;// achromatic
}else{var d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);switch(max){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4;break;default:break;}h/=6;}h*=360;s*=100;l*=100;return rgb.hasOwnProperty("a")?{h:h,s:s,l:l,a:rgb.a}:{h:h,s:s,l:l};}/**
     * Adjust an existing color into a new color
     * @memberof module:da
     * @param color A color in RGB, hex, or HSL form
     * @param adjustment Object with H, S, L, and optionally A as properties
     */function adjustColor(color,adjustment){// convert everything to HSL
var hsl=null;if(typeof color==="string"){// get the first non-null result
hsl=extractHSL(color);if(hsl===null){hsl=hsl||extractRGB(color);hsl=hsl||extractHex(color);// have an RGB value
if(hsl){hsl=RGBToHSL(hsl);}}}else if(color.hasOwnProperty("h")&&color.hasOwnProperty("s")&&color.hasOwnProperty("l")){hsl=color;}else if(color.hasOwnProperty("r")&&color.hasOwnProperty("g")&&color.hasOwnProperty("b")){hsl=RGBToHSL(color);}// can't do it
if(hsl===null){return null;}hsl.h+=adjustment.h||0;hsl.s+=adjustment.s||0;hsl.l+=adjustment.l||0;if(adjustment.hasOwnProperty("a")){return"hsla("+hsl.h.toFixed(1)+","+hsl.s.toFixed(1)+"%,"+hsl.l.toFixed(1)+"%,"+adjustment.a.toFixed(2)+")";}else{return"hsl("+hsl.h.toFixed(1)+","+hsl.s.toFixed(1)+"%,"+hsl.l.toFixed(1)+"%)";}}/**
     * Clamp a number between a minimum and maximum value
     * @memberof module:da
     * @param {number} num
     * @param {number} min
     * @param {number} max
     * @returns {number} Clamped number
     */function clamp(num,min,max){return num<min?min:num>max?max:num;}/**
     * Round a number to a fixed number of decimals
     * @memberof module:da
     * @param {number} num Number to round
     * @param {number} numDecimals Number of decimals
     * @returns {number}
     */function roundToDec(num,numDecimals){return parseFloat(num.toFixed(numDecimals));}function RLE(s){// simple run length encoding for images (4 characters at a time)
var shortests=String.fromCharCode(0)+s;// try encoding multiples of 4 (repetitions could be at different intervals)
// try subpixel encoding first ()
for(var j=1;j<41;){// first character to indicate how many pixels is a pattern
var ss=String.fromCharCode(j);var c=s.slice(0,j);var repeat=1;var i=j;for(var len=s.length;i<len;i+=j){// base64 can only handle up to 255
if(c!==s.slice(i,i+j)||repeat===255){ss+=String.fromCharCode(repeat)+c;repeat=1;c=s.slice(i,i+j);}else{++repeat;}}// was still repeating a sequence at the end
if(c===s.slice(s.length-j)){ss+=String.fromCharCode(repeat)+c;}// copy over the end (number of total pixels doesn't divide 4*stride evenly)
else if(i>s.length-1){ss+=String.fromCharCode(1)+s.slice(i-j);}console.log("RLE over",j,"stride -- compressed",ss.length,"original",s.length);if(ss.length<shortests.length){shortests=ss;}// after subpixel encoding, increment by a pixel
if(j===1){j=4;}else{j+=4;}}// actually smaller to keep original string
return shortests;}function RLD(ss){// simple run length decoding
var stride=ss.charCodeAt(0);if(stride===0){return ss.slice(1);}var s="";for(var i=1,len=ss.length;i<len;i+=1+stride){s+=ss.slice(i+1,i+1+stride).repeat(ss.charCodeAt(i));}console.log("decoded length",s.length);return s;}// zigurat algorithm, from
// https://www.filosophy.org/post/35/normaldistributed_random_values_in_javascript_using_the_ziggurat_algorithm/
function Ziggurat(){var jsr=123456789;var wn=Array(128);var fn=Array(128);var kn=Array(128);function RNOR(){var hz=SHR3();var iz=hz&127;return Math.abs(hz)<kn[iz]?hz*wn[iz]:nfix(hz,iz);}this.nextGaussian=function(){return RNOR();};function nfix(hz,iz){var r=3.442619855899;var r1=1.0/r;var x;var y;while(true){x=hz*wn[iz];if(iz==0){x=-Math.log(UNI())*r1;y=-Math.log(UNI());while(y+y<x*x){x=-Math.log(UNI())*r1;y=-Math.log(UNI());}return hz>0?r+x:-r-x;}if(fn[iz]+UNI()*(fn[iz-1]-fn[iz])<Math.exp(-0.5*x*x)){return x;}hz=SHR3();iz=hz&127;if(Math.abs(hz)<kn[iz]){return hz*wn[iz];}}}function SHR3(){var jz=jsr;var jzr=jsr;jzr^=jzr<<13;jzr^=jzr>>>17;jzr^=jzr<<5;jsr=jzr;return jz+jzr|0;}function UNI(){return 0.5*(1+SHR3()/-Math.pow(2,31));}function zigset(){// seed generator based on current time
jsr^=new Date().getTime();var m1=2147483648.0;var dn=3.442619855899;var tn=dn;var vn=9.91256303526217e-3;var q=vn/Math.exp(-0.5*dn*dn);kn[0]=Math.floor(dn/q*m1);kn[1]=0;wn[0]=q/m1;wn[127]=dn/m1;fn[0]=1.0;fn[127]=Math.exp(-0.5*dn*dn);for(var i=126;i>=1;i--){dn=Math.sqrt(-2.0*Math.log(vn/dn+Math.exp(-0.5*dn*dn)));kn[i+1]=Math.floor(dn/tn*m1);tn=dn;fn[i]=Math.exp(-0.5*dn*dn);wn[i]=dn/m1;}}zigset();}// instantiate the generator
var randZig;/**
     * Get a normally distributed random number
     * @memberof module:da
     * (using the Ziggurat algorithm https://en.wikipedia.org/wiki/Ziggurat_algorithm)
     * @param {number} mean Mean of the underlying normal distribution
     * @param {number} stdev Standard deviation around mean
     * @returns {number} The random number
     */function randNormal(mean,stdev){// pseudo random approximate
// standard normal: mean 0 and stdev 1
if(!randZig){randZig=new Ziggurat();}return randZig.nextGaussian()*stdev+mean;}function testRandGenerator(n){var histogram={};// buckets with each key being an integer mapping to the number of occurances
for(var i=-100;i<101;++i){histogram[i]=0;}var v;while(n-->0){v=Math.round(randNormal(10,20));++histogram[v];}var str=[];for(i in histogram){str.push(""+i+"\t"+histogram[i]);}console.log(str.join("\n"));}function averagePoint(p1,p2){var bias=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.5;return{x:p1.x*bias+p2.x*(1-bias),y:p1.y*bias+p2.y*(1-bias)};}/**
     * Get the difference of 2 2d points p2 - p1
     * @memberof module:da
     * @param {{x:number, y:number}} p1 First point
     * @param {{x:number, y:number}} p2 Second point
     * @returns {{x: number, y: number}}
     */function diff(p1,p2){return{x:p2.x-p1.x,y:p2.y-p1.y};}/**
     * Get the magnitude of a vector
     * @memberof module:da
     * @param {number[]} arguments components of the vector
     * @returns {number}
     */function norm(){var tot=0;for(var i=0;i<arguments.length;++i){tot+=arguments[i]*arguments[i];}return Math.sqrt(tot);}/**
     * Scale the difference between 2 points relative to the first point
     * @memberof module:da
     * @param {{x:number, y:number}} p1 First point
     * @param {{x:number, y:number}} p2 Second point
     * @param {number} scale How much to scale the difference (can be greater than 1 and less than 0)
     * @returns {{x: number, y: number}}
     */function scale(p1,p2,scale){var pointDiff=diff(p1,p2);pointDiff.x*=scale;pointDiff.y*=scale;return{x:p1.x+pointDiff.x,y:p1.y+pointDiff.y};}function addVector(p1,p2){var scale=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;return{x:p1.x+p2.x*scale,y:p1.y+p2.y*scale};}function getUnitVector(vec){var magnitude=norm(vec.x,vec.y);return{x:vec.x/magnitude,y:vec.y/magnitude};}function getPerpendicularVector(vec){// rotate counterclockwise by 90 degrees
return getUnitVector({x:-vec.y,y:vec.x});}function scalePoints(center,scaleBy){for(var _len=arguments.length,points=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){points[_key-2]=arguments[_key];}for(var i=0;i<points.length;++i){var p=points[i];if(!p||p.hasOwnProperty("x")===false){continue;}var _scale=scale(center,p,scaleBy);var x=_scale.x;var y=_scale.y;p.x=x;p.y=y;if(p.hasOwnProperty("cp1")){p.cp1=scale(center,p.cp1,scaleBy);}if(p.hasOwnProperty("cp2")){p.cp2=scale(center,p.cp2,scaleBy);}}}/**
     * Rotate a set of points about a pivot
     * @memberof module:da
     * @param {object} pivot The point to rotate about
     * @param {number} rad Radians counterclockwise to rotate points
     * @param {object[]} points List of points to rotate about pivot
     */function rotatePoints(pivot,rad){var cos=Math.cos(rad),sin=Math.sin(rad);for(var _len2=arguments.length,points=Array(_len2>2?_len2-2:0),_key2=2;_key2<_len2;_key2++){points[_key2-2]=arguments[_key2];}for(var i=0;i<points.length;++i){var p=points[i];if(!p||p.hasOwnProperty("x")===false){continue;}rotateDiff(pivot,p,sin,cos);if(p.hasOwnProperty("cp1")){rotateDiff(pivot,p.cp1,sin,cos);}if(p.hasOwnProperty("cp2")){rotateDiff(pivot,p.cp2,sin,cos);}}}/**
     * Helper for rotate points to be used with cached sin and cos
     * @param pivot
     * @param point
     * @param sin
     * @param cos
     */function rotateDiff(pivot,point,sin,cos){var pointDiff=diff(pivot,point);point.x-=pointDiff.x;point.y-=pointDiff.y;pointDiff.dx=pointDiff.x*cos-pointDiff.y*sin;pointDiff.dy=pointDiff.x*sin+pointDiff.y*cos;point.x+=pointDiff.dx;point.y+=pointDiff.dy;}// topological sort from https://github.com/marcelklehr/toposort
function topologicalSort(nodes,edges){var cursor=nodes.length,sorted=new Array(cursor),visited={},i=cursor;while(i--){if(!visited[i]){visit(nodes[i],i,[]);}}return sorted;function visit(node,i,predecessors){if(predecessors.indexOf(node)>=0){throw new Error("Cyclic dependency: "+JSON.stringify(node));}if(!~nodes.indexOf(node)){throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(node));}if(visited[i]){return;}visited[i]=true;// outgoing edges
var outgoing=edges.filter(function(edge){return edge[0]===node;});if(i=outgoing.length){var preds=predecessors.concat(node);do{var child=outgoing[--i][1];visit(child,nodes.indexOf(child),preds);}while(i);}sorted[--cursor]=node;}}function simpleTopologicalSort(edges){return topologicalSort(uniqueNodes(edges),edges);}function uniqueNodes(arr){var res=[];for(var i=0,len=arr.length;i<len;i++){var edge=arr[i];if(res.indexOf(edge[0])<0){res.push(edge[0]);}if(res.indexOf(edge[1])<0){res.push(edge[1]);}}return res;}return{// object methods
clone:clone,insertArray:insertArray,// color manipulation
extractRGB:extractRGB,extractHSL:extractHSL,extractHex:extractHex,RGBToHSL:RGBToHSL,adjustColor:adjustColor,// encrypt decrypt
RLE:RLE,RLD:RLD,// PRNG
randNormal:randNormal,testRandGenerator:testRandGenerator,// Part side getting / manipulation
averagePoint:averagePoint,// math
clamp:clamp,roundToDec:roundToDec,diff:diff,norm:norm,scale:scale,addVector:addVector,getUnitVector:getUnitVector,getPerpendicularVector:getPerpendicularVector,scalePoints:scalePoints,rotatePoints:rotatePoints,topologicalSort:topologicalSort,simpleTopologicalSort:simpleTopologicalSort};}();window.da=da;/*
 global da
 */Object.assign(da,function(da){"use strict";/**
     * Canvas drawing layer order; higher value is further up
     * @memberof module:da
     * @readonly
     * @enum {number}
     */var Layer=Object.freeze({BASE:0,BACK:1,FRONT:2,SHADING_FRONT:3,ARMS:4,SHADING_ARMS:5,GENITALS:6,SHADING_GENITALS:7,BELOW_HAIR:8,SHADING_BELOW_HAIR:9,HAIR:10,SHADING_HAIR:11,EFFECTS:12,NUM_LAYERS:13});var ShadingLayers=[Layer.SHADING_FRONT,Layer.SHADING_ARMS,Layer.SHADING_GENITALS,Layer.SHADING_BELOW_HAIR,Layer.SHADING_HAIR];/**
     * Minimal distance drawing on canvas to eliminate seams
     * @type {number}
     */var seamWidth=0.0;/**
     * Get access to a canvas group DOM element, creating it if it doesn't exist
     * @memberof module:da
     * @param {(string|HTMLElement)} groupname Id of the canvas group holder, or the DOM element
     * @param {object} styleOverride Object holding canvas style overrides
     * @returns {HTMLElement} The canvas group holder HTML DOM element
     */function getCanvasGroup(groupname,styleOverride){var groupObj=groupname;if(typeof groupname==="string"){groupObj=document.getElementById(groupname);}else{groupname=groupname.id;}var styles=Object.assign({width:"500",height:"800",parent:groupObj},styleOverride);// size so surroundings can respect our boundaries
groupObj.style.width=styles.width+"px";groupObj.style.height=styles.height+"px";groupObj.style.textAlign="left";var group=[];// create various canvas layers with the same override
for(var layer=0;layer<=da.Layer.NUM_LAYERS;++layer){var canvasName=groupname+layer;group.push(da.getCanvas(canvasName,Object.assign({},styles,{"z-index":layer})));}return groupObj;}/**  Get a canvas DOM element with id=canvasName, generating it if necessary
     styleOverride is the additional/overriding css style object to apply over
     defaults
     likely, you'd want to define its location:

     styles = {
     position:"absolute",
     top:"10px",
     left:"10px",
     parent: document.getElementById("canvas_holder"),
     }
     * @memberof module:da
     */function getCanvas(canvasName,styles){// if given a canvas object, just return it
if(typeof canvasName!=="string"){return canvasName;}if(styles.hasOwnProperty("parent")===false){styles.parent=document.createElement("div");document.body.appendChild(styles.parent);styles.parent.style.width=styles.width+"px";styles.parent.style.height=styles.height+"px";}var canvas=document.getElementById(canvasName);// create canvas
if(!canvas){canvas=document.createElement("canvas");canvas.id=canvasName;// width and height have to be set on the DOM element rather than styled
canvas.width=styles.width;canvas.height=styles.height;canvas.style.position="absolute";// add the rest of the styling
for(var s in styles){if(styles.hasOwnProperty(s)===false){continue;}if(s==="width"||s==="height"){continue;}else if(styles.hasOwnProperty(s)){canvas.style[s]=styles[s];}}// ensure is first child of parent
styles.parent.insertBefore(canvas,styles.parent.firstChild);}return canvas;}/**
     * Hide a canvas group from view (but not delete it)
     * @memberof module:da
     * @param {(string|HTMLElement)} groupName Either the id of the group element or the element itself
     */function hideCanvasGroup(groupName){var group=getCanvasHandle(groupName);group.style.display="none";}/**
     * Show a canvas group from view
     * @memberof module:da
     * @param {(string|HTMLElement)} groupName Either the id of the group element or the element itself
     */function showCanvasGroup(groupName){var group=getCanvasHandle(groupName);group.style.display="block";}function getCanvasHandle(canvasName){if(typeof canvasName==="string"){return document.getElementById(canvasName);}else{return canvasName;// assume canvas element passed in
}}return{Layer:Layer,ShadingLayers:ShadingLayers,seamWidth:seamWidth,getCanvasGroup:getCanvasGroup,getCanvas:getCanvas,getCanvasHandle:getCanvasHandle,showCanvasGroup:showCanvasGroup,hideCanvasGroup:hideCanvasGroup};}(da));/*
 global da
 */"use strict";Object.assign(da,function(da){/**
     * Insert this special point in the list of points given to draw points to
     * move to the next point instead of drawing to the next point
     * @memberof module:da
     * @readonly
     * @type {Object}
     */var breakPoint=Object.freeze({break:true});/**
     * Signals for a fill path to not try to complete it by drawing a curve from end
     * point to first point as the fill has already done its job
     * move to the next point instead of drawing to the next point
     * @memberof module:da
     * @readonly
     * @type {Object}
     */var endPoint=Object.freeze({end:true});/**
     * Styling option to not show stroke or fill
     * @memberof module:da
     * @readonly
     * @type {string}
     */var none="rgba(0,0,0,0)";/**
     * Define a draw point if it doesn't exist already
     * @param {object} ex Export holding draw points
     * @param {string} drawPointName Name of the location
     * @param {object} definition Object holding x, y, cp1, and cp2
     */function fillerDefinition(ex,drawPointName){var definition=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(ex.hasOwnProperty(drawPointName)){return;}ex[drawPointName]=definition;}/**
     * Draw the path formed by the list of points
     * @memberof module:da
     * @param {Context2DTracked} ctx Context2D to render to, if it exists
     * @param {Object[]} points Ordered list of draw points, each with x and y
     */function drawPoints(ctx){for(var _len3=arguments.length,points=Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){points[_key3-1]=arguments[_key3];}// given ctx and a list of points, draw points between them based on how many control points
// are defined for each
// does not begin a path or fill or stroke (just moves pen between the points)
if(points.length<1){return;}var startPoint=points[0];// if null is passed through, just continue from last location
if(startPoint){if(startPoint===breakPoint){startPoint=points[1];}if(startPoint&&startPoint.hasOwnProperty("x")){ctx.moveTo(startPoint.x,startPoint.y);}}// for every point after
for(var i=1,len=points.length;i<len;++i){var p=points[i];// allow calls with nonexistent points so that different drawing modes can be
// consolidated
if(!p){// console.log("don't have point #", i);
continue;}if(p===breakPoint){++i;if(i<arguments.length){p=points[i];ctx.moveTo(p.x,p.y);}}else if(p.cp2&&p.cp1){ctx.bezierCurveTo(p.cp1.x,p.cp1.y,p.cp2.x,p.cp2.y,p.x,p.y,p.traceSize);}else if(p.cp1){ctx.quadraticCurveTo(p.cp1.x,p.cp1.y,p.x,p.y,p.traceSize);}else if(p.cp2){ctx.quadraticCurveTo(p.cp2.x,p.cp2.y,p.x,p.y,p.traceSize);}else if(p.hasOwnProperty("x")){ctx.lineTo(p.x,p.y);}}}/**
     * Get the drawpoints for a circle
     * @memberof module:da
     * @param {object} center Point at the center of the circle
     * @param {number} radius Radius in cm
     * @returns {object[]} List of draw points for this circle (could be passed to guiMenuItem)
     */function drawCircle(center,radius){var stretch=0.552284749831*radius;var top={x:center.x,y:center.y+radius};var right={x:center.x+radius,y:center.y};var bot={x:center.x,y:center.y-radius};var left={x:center.x-radius,y:center.y};top.cp1={x:left.x,y:left.y+stretch};top.cp2={x:top.x-stretch,y:top.y};right.cp1={x:top.x+stretch,y:top.y};right.cp2={x:right.x,y:right.y+stretch};bot.cp1={x:right.x,y:right.y-stretch};bot.cp2={x:bot.x+stretch,y:bot.y};left.cp1={x:bot.x-stretch,y:bot.y};left.cp2={x:left.x,y:left.y-stretch};// doesn't actually matter in which order you draw them
return[top,right,bot,left,top];}function drawCurl(centerPoint,width,height,bias){var rotation=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var curvature=arguments.length>5&&arguments[5]!==undefined?arguments[5]:1;// width could alternatively be a packed object
if(typeof width!=="number"){var drawParameters=width;var _height=drawParameters.height;var _bias=drawParameters.bias;var _drawParameters$rotat=drawParameters.rotation;var _rotation=_drawParameters$rotat===undefined?0:_drawParameters$rotat;var _drawParameters$curva=drawParameters.curvature;var _curvature=_drawParameters$curva===undefined?1:_drawParameters$curva;return drawCurl(centerPoint,drawParameters.width,_height,_bias,_rotation,_curvature);}var p2={x:centerPoint.x,y:centerPoint.y};var p1={x:centerPoint.x-(width*(1-bias)*Math.cos(rotation)-height*(1-bias)*Math.sin(rotation)),y:centerPoint.y+(width*(1-bias)*Math.sin(rotation)+height*(1-bias)*Math.cos(rotation))};var p3={x:centerPoint.x+(width*bias*Math.cos(-rotation)-height*bias*Math.sin(-rotation)),y:centerPoint.y+(width*bias*Math.sin(-rotation)+height*bias*Math.cos(-rotation))};var dx=width*0.2*Math.cos(rotation)-height*0.2*Math.sin(rotation);var dy=width*0.2*Math.sin(rotation)+height*0.2*Math.cos(rotation);dx*=curvature;dy*=curvature;p2.cp1=da.averageQuadratic(null,p1,p2,0.8,dy,dx);p3.cp1=da.averageQuadratic(null,p2,p3,0.2,dx,-dy);// order that they should be drawn in
return[da.breakPoint,p1,p2,p3];}function drawSpecificCurl(left,center,right){var p1=da.extractPoint(left);var p2=da.extractPoint(center);var p3=da.extractPoint(right);{var _left$t=left.t;var t=_left$t===undefined?0.5:_left$t;var _left$deflection=left.deflection;var deflection=_left$deflection===undefined?0.5:_left$deflection;p2.cp1=da.simpleQuadratic(p1,p2,t,deflection);}{var _right$t=right.t;var _t=_right$t===undefined?0.5:_right$t;var _right$deflection=right.deflection;var _deflection=_right$deflection===undefined?0.5:_right$deflection;p3.cp1=da.simpleQuadratic(p1,p2,_t,_deflection);}return[p1,p2,p3];}/**
     * Debug the curve going into a drawpoint. Use by wrapping a drawpoint with it when returning
     * to guiMenuItem.
     * @memberof module:da
     * @param {object} point
     * @param {number} radius Radius of the control points to show
     * @returns {*}
     */function tracePoint(point,radius){if(!radius){radius=1;}// add a trace to a drawpoint when giving to da.guiMenuItem function
return Object.assign({traceSize:radius},point);}function splitBezier(points,t){// split a cubic bezier based on De Casteljau, t is between [0,1]
var A=points.p1,B=points.cp1,C=points.cp2,D=points.p2;var E={x:A.x*(1-t)+B.x*t,y:A.y*(1-t)+B.y*t};var F={x:B.x*(1-t)+C.x*t,y:B.y*(1-t)+C.y*t};var G={x:C.x*(1-t)+D.x*t,y:C.y*(1-t)+D.y*t};var H={x:E.x*(1-t)+F.x*t,y:E.y*(1-t)+F.y*t};var J={x:F.x*(1-t)+G.x*t,y:F.y*(1-t)+G.y*t};var K={x:H.x*(1-t)+J.x*t,y:H.y*(1-t)+J.y*t};return{left:{p1:A,cp1:E,cp2:H,p2:K},right:{p1:K,cp1:J,cp2:G,p2:D}};}function splitQuadratic(points,t){// split a quadratic bezier based on De Casteljau, t is between [0,1]
var A=points.p1,B=points.cp1,C=points.p2;var D={x:A.x*(1-t)+B.x*t,y:A.y*(1-t)+B.y*t};var E={x:B.x*(1-t)+C.x*t,y:B.y*(1-t)+C.y*t};var F={x:D.x*(1-t)+E.x*t,y:D.y*(1-t)+E.y*t};return{left:{p1:A,cp1:D,p2:F},right:{p1:F,cp1:E,p2:C}};}function splitLinear(points,t){// split a linear line
var A=points.p1,B=points.p2;var C={x:A.x*t+B.x*(1-t),y:A.y*t+B.y*(1-t)};return{left:{p1:A,p2:C},right:{p1:C,p2:B}};}/**
     * Split the curve between two drawpoints and return all the resulting drawpoints
     * @memberof module:da
     * @param {object} startp Starting drawpoint
     * @param {object} endp Ending drawpoint and also where we look at the control points
     * @param {number} t "time" along the curve to split at. Since all curves are parameterized
     * curves, t is their parameter. Can be thought of as traversing along the curve, where 0 is
     * at the start point and 1 is at the end point. This value can go beyond [0,1].
     * @returns {{left, right}} Object having a left and right property, each with their own
     * p1 (start point), p2 (end point), and optionally cp1 and cp2 depending on what kind of
     * curve was split. Note that sp.left.p2 === sp.right.p1 always in value.
     */function splitCurve(startp,endp,t){// split either a quadratic or bezier curve depending on number of control points on
// endp
if(endp.cp2){return splitBezier({p1:da.extractPoint(startp),p2:da.extractPoint(endp),cp1:endp.cp1,cp2:endp.cp2},t);}else if(endp.hasOwnProperty("cp1")){return splitQuadratic({p1:da.extractPoint(startp),p2:da.extractPoint(endp),cp1:endp.cp1},t);}else{return splitLinear({p1:da.extractPoint(startp),p2:endp},t);}}function averageQuadratic(ctx,p1,p2,t,dx,dy,st,et){// draw a smooth quadratic curve with the control point t along the straight line from p1 to
// p2
// disturbed with dx and dy if applicable
if(typeof t!=="number"){t=0.5;}if(typeof dx!=="number"){dx=0;}if(typeof dy!=="number"){dy=0;}var cp1={x:p1.x*t+p2.x*(1-t)+dx,y:p1.y*t+p2.y*(1-t)+dy};// start time not the default value of 0
if(st){var sp=splitQuadratic({p1:p1,p2:p2,cp1:cp1},st);p1=sp.left.p2;cp1=sp.right.cp1;if(ctx){ctx.moveTo(p1.x,p1.y);}}if(et){var _sp=splitQuadratic({p1:p1,p2:p2,cp1:cp1},et);p2=_sp.left.p2;cp1=_sp.left.cp1;}if(ctx){ctx.quadraticCurveTo(cp1.x,cp1.y,p2.x,p2.y);}return cp1;}/**
     * Return the control point for a quadratic curve between two points with
     * a simple deflection parameter
     * @memberof module:da
     * @param p1
     * @param p2
     * @param t How far along the line between p1 and p2 the control point should start
     * @param deflection Which direction and how far perpendicular to the p1-p2 line
     * the control point should be
     * @returns {{x: number, y: number}}
     */function simpleQuadratic(p1,p2){var t=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.5;var deflection=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var cp1={x:p1.x*(1-t)+p2.x*t,y:p1.y*(1-t)+p2.y*t};var unitPerpendicular=da.getPerpendicularVector(da.diff(p1,p2));cp1.x+=deflection*unitPerpendicular.x;cp1.y+=deflection*unitPerpendicular.y;return cp1;}/**
     * Shift a draw point and its control points
     * @memberof module:da
     * @param {object} point
     * @param {number} dx
     * @param {number} dy
     * @returns {object}
     */function adjustPoint(point,dx,dy){if(!point){return point;}// return a point with x and y adjusted by dx and dy respectively
var movedPoint=da.clone(point);movedPoint.x+=dx;movedPoint.y+=dy;if(movedPoint.cp1){movedPoint.cp1.x+=dx;movedPoint.cp1.y+=dy;}if(movedPoint.cp2){movedPoint.cp2.x+=dx;movedPoint.cp2.y+=dy;}return movedPoint;}function shiftPoints(dx,dy){var shiftedPoints=[];for(var _len4=arguments.length,points=Array(_len4>2?_len4-2:0),_key4=2;_key4<_len4;_key4++){points[_key4-2]=arguments[_key4];}points.forEach(function(point){shiftedPoints.push(adjustPoint(point,dx,dy));});return shiftedPoints;}/**
     * Remove any extra information from a point down to just x,y
     * @memberof module:da
     */function extractPoint(point){return{x:point.x,y:point.y};}/**
     * Remove any extra information from a point and reflect across y axis
     * @memberof module:da
     */function reflectPoint(point){return{x:-point.x,y:point.y};}/**
     * conversions between canvas units (cu) to centimeters (cm) and inches (in)
     */function incu(inches){return cmcu(inches*2.54);}function cmcu(cm){return cm*2;}function cucm(cu){return cu/2;}function convertPointsToCanvasUnits(points){if(Array.isArray(points)){for(var i=0;i<points.length;++i){convertPointsToCanvasUnits(points[i]);}return;}if((typeof points==="undefined"?"undefined":_typeof(points))!=="object"){return;}// can't hold any draw points
var names=Object.getOwnPropertyNames(points);for(var n=0;n<names.length;++n){var name=names[n];if(name==="x"||name==="y"){points[name]=cmcu(points[name]);}else{convertPointsToCanvasUnits(points[name]);}}}/**
     * Set stroke and fill for given context
     * @memberof module:da
     * @param {CanvasRenderingContext2D} ctx
     * @param {Part} part Some kind of Part object
     * @param {object} ex Export from draw
     */function setStrokeAndFill(ctx,part,ex){var stroke=da.getLoadedPattern.call(part,part.stroke,ctx,ex);if(stroke==="inherit"){ctx.strokeStyle=ex.baseStroke;}else{ctx.strokeStyle=stroke;}var fill=da.getLoadedPattern.call(part,part.fill,ctx,ex);if(fill==="inherit"){ctx.fillStyle=ex.baseFill;}else{ctx.fillStyle=fill;}}/**
     * Inherit the stroke style of its parent part (must have this bound to a part)
     * @param ctx
     * @param ex
     * @returns {*}
     */function inheritStroke(ctx,ex){var myLoc=da.extractUnmodifiedLocation(this.loc);// first check if there's clothing here
var coveringClothing=ex.avatar.getClothingInLocation.call(ex.avatar,myLoc);var topClothing=null;coveringClothing.forEach(function(clothing){if(topClothing===null||clothing.clothingLayer>topClothing.clothingLayer){topClothing=clothing;}});// if covering with clothing use it, else use parent body part's colour
if(topClothing){if(typeof topClothing.stroke==="function"){return topClothing.stroke(ctx,ex);}return topClothing.stroke;}else{var parentPart=ex.avatar.getPartInLocation.call(ex.avatar,myLoc);if(parentPart){if(typeof parentPart.stroke==="function"){return parentPart.stroke(ctx,ex);}return parentPart.stroke;}return ex.baseStroke;}}function inheritFill(ctx,ex){var parentPart=ex.avatar.getPartInLocation(this.loc);if(parentPart){if(typeof parentPart.fill==="function"){return parentPart.fill(ctx,ex);}return parentPart.fill;}return ex.baseFill;}function requirePart(partName,ex){if(ex.hasOwnProperty(partName)===false){throw new Error("Trying to draw "+partName+" but it hasn't been defined yet");}}/**
     * For a bezier curve point, get a control point on the other side of the point so that the
     * curve is smooth.
     * @param {point} point Draw point along a bezier curve (must have 2nd control point)
     * @param {number} scale How much back to extend the continuing control point.
     * A value of 1 produces a symmetric curve.
     * @returns {{x, y}|{x: number, y: number}|*} Continuing control point
     */function getSmoothControlPoint(point,scale){if(point.hasOwnProperty("cp2")===false){throw new Error("point has no second control point; can't get smooth control point");}return da.scale(point,point.cp2,-scale);}return{breakPoint:breakPoint,endPoint:endPoint,none:none,fillerDefinition:fillerDefinition,drawPoints:drawPoints,drawCircle:drawCircle,drawCurl:drawCurl,drawSpecificCurl:drawSpecificCurl,tracePoint:tracePoint,splitBezier:splitBezier,splitQuadratic:splitQuadratic,splitCurve:splitCurve,adjustPoint:adjustPoint,shiftPoints:shiftPoints,averageQuadratic:averageQuadratic,simpleQuadratic:simpleQuadratic,getSmoothControlPoint:getSmoothControlPoint,extractPoint:extractPoint,reflectPoint:reflectPoint,incu:incu,cmcu:cmcu,cucm:cucm,convertPointsToCanvasUnits:convertPointsToCanvasUnits,setStrokeAndFill:setStrokeAndFill,inheritStroke:inheritStroke,inheritFill:inheritFill,requirePart:requirePart};}(da));/*
 global da
 */Object.assign(da,function(da){"use strict";/**
     * Get a default properties factory
     * @param {Object} limits Descriptors of properties, each with avg, low, high, stdev, bias
     * @param {Object} discretePool List of valid values for discrete valued properties
     * @returns {run} properties factory
     */function getDefault(limits,discretePool){function run(){var defaults={};for(var p in limits){if(limits.hasOwnProperty(p)){defaults[p]=limits[p].avg;}}if(discretePool){for(var _p in discretePool){if(discretePool.hasOwnProperty(_p)){defaults[_p]=discretePool[_p][0];}}}return defaults;}return run;}/**
     * Apply additional modifiers
     * @param sourceMods Modifiers to be modified
     * @param addMods Modifiers to add
     */function applyMods(sourceMods,addMods){for(var mod in addMods){if(addMods.hasOwnProperty(mod)){if(sourceMods.hasOwnProperty(mod)){sourceMods[mod]+=addMods[mod];}else{sourceMods[mod]=addMods[mod];}}}}/**
     * Remove modifiers
     * @param sourceMods Modifiers to be modified
     * @param addMods Modifiers to remove
     */function removeMods(sourceMods,addMods){for(var mod in addMods){if(addMods.hasOwnProperty(mod)){if(sourceMods.hasOwnProperty(mod)){sourceMods[mod]-=addMods[mod];}}}}// CREATE CHARACTER
/**
     * Retrieve female bias with global lookup fallback
     * @param {Object} propertyDescriptor Statistical description of property including avg, low, high
     * @param {string} propertyName
     * @returns {number} Female bias
     */function getBiasMod(propertyDescriptor,propertyName){// own defined property takes precidence over the globally defined one
if(propertyDescriptor.hasOwnProperty("bias")){return propertyDescriptor.bias;}if(da.femBias.hasOwnProperty(propertyName)){return da.femBias[propertyName];}// default to 1 (higher values correlated with higher femininity)
return 1;}/**
     * Randomly create a Player
     * @param {number} bias female bias - how probably their physical traits are feminine
     * @returns {Player}
     */function createRandomCharacter(bias){var stdevWeight=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(typeof bias==="string"){bias=parseFloat(bias);}// bias is a number from 0 to 1 with 1 being the most feminine bias and 0 most
// masculine bias
var pc=new da.Player();// generated with default (average) stats, perturb with bias
var dimensions=da.baseDimDesc[pc.skeleton];for(var dim in dimensions){if(dimensions.hasOwnProperty(dim)){var dimDesc=dimensions[dim];if(dimDesc.hasOwnProperty("stdev")===false){throw new Error("dimension "+dim+" has no stdev defined");}pc.basedim[dim]+=Math.round(da.randNormal(bias*da.getBiasMod(dimDesc,dim),dimDesc.stdev*stdevWeight));}}// generate numerical statistics
for(var s in da.statLimits){if(da.statLimits.hasOwnProperty(s)){var stat=da.statLimits[s];if(stat.hasOwnProperty("stdev")===false){throw new Error("stat "+s+" has no stdev defined");}pc[s]+=Math.round(da.randNormal(bias*da.getBiasMod(stat,s),stat.stdev*stdevWeight));}}// generate discrete statistics
for(var _s in da.statDiscretePool){if(da.statDiscretePool.hasOwnProperty(_s)){// uniform randomly pick a value from any of the available ones
var valuePool=da.statDiscretePool[_s];pc[_s]=valuePool[Math.floor(Math.random()*valuePool.length)];}}pc.clampStats();// names is a discrete statistic, but it's special in that different genders tend to
// have different pools of values
if(bias>0){pc.name=da.femaleNames[Math.floor(Math.random()*da.femaleNames.length)];if(bias>0.5){pc.gender="female";}}else{pc.name=da.maleNames[Math.floor(Math.random()*da.maleNames.length)];if(bias<-0.5){pc.gender="male";}}for(var m in da.modLimits){if(da.modLimits.hasOwnProperty(m)){var mod=da.modLimits[m];if(mod.hasOwnProperty("stdev")===false){throw new Error("mod "+m+" has no stdev defined");}pc.Mods[m]+=Math.round(da.randNormal(bias*da.getBiasMod(mod,m),mod.stdev*stdevWeight));}}return pc;}return{getDefault:getDefault,applyMods:applyMods,removeMods:removeMods,getBiasMod:getBiasMod,createRandomCharacter:createRandomCharacter};}(da));/*
 global da
 *//*eslint no-unused-vars: ["error", {"varsIgnorePattern": "\$[^\b]*\$"}]*/Object.assign(da,function(da){"use strict";// Utility method to allow users to easily wrap their code in the revive wrapper.
if(!JSON.reviveWrapper){Object.defineProperty(JSON,"reviveWrapper",{configurable:true,writable:true,value:function value(code,data){if(typeof code!=="string"){throw new TypeError("JSON.reviveWrapper code parameter must be a string");}return["(revive:eval)",[code,data]];}});}// Serialize data into a JSON-encoded string.
function serialize(value,space){return JSON.stringify(value,function(key,value){// _owner often has self-reference and should not be serialized
if(key==="_owner"||key==="shadingParts"){return undefined;}return value;},space);}function deserialize(text){return JSON.parse(text,function(key,val){var value=val;// Attempt to revive wrapped values.
if(Array.isArray(value)&&value.length===2&&value[0]==="(revive:eval)"){var $ReviveData$=value[1][1];value=eval(value[1][0]);// eslint-disable-line no-eval
}else if(Array.isArray(value)&&value.length===2&&value[0]==="pattern"){// revive pattern object
var _value$=value[1];var patternName=_value$.patternName;var _value$$patternSize=_value$.patternSize;var patternSize=_value$$patternSize===undefined?da.IMAGE_MAXSIZE:_value$$patternSize;value=da.getPattern(da.getPatternBaseName(patternName),patternSize);}return value;});}function extendSerializability(globalClassIdentifier){var classConstructor=eval(globalClassIdentifier);Object.defineProperties(classConstructor.prototype,{/*
             Returns a simple object encapsulating our own data properties.
             */_getData:{value:function value(){var data={};Object.keys(this).forEach(function(key){// need recursive deserialization
data[key]=this[key];},this);return data;}},/*
             Clones values from the given object to our own data properties.

             Returns a self-reference which allows `toJSON()` to be simpler.
             */_setData:{value:function value(data){return new this.constructor(data);}},/*
             Allows the object to be properly cloned from passage to passage.
             */clone:{value:function value(){return new classConstructor(this._getData);}},/*
             Allows the object to be properly restored from serializations.
             */toJSON:{value:function value(){return JSON.reviveWrapper("(new "+globalClassIdentifier+"())._setData($ReviveData$)",this._getData());}}});}function loadSerialization(){/*
         Merge the requisite properties onto instantiable classes (only).
         */var globalClassNames=["Player"];// extend body parts
for(var partClass in da.Part){if(da.Part.hasOwnProperty(partClass)===false){continue;}if(typeof da.Part[partClass]==="function"&&da.Part[partClass].prototype){var className=da.Part[partClass].name;// heuristic of constructors always having a capital letter...
if(className.length>1&&className.charAt(0)==className.charAt(0).toUpperCase()){globalClassNames.push("Part."+className);}}}// extend Clothing (and ClothingParts)
for(var clothingClass in da.Clothes){if(da.Clothes.hasOwnProperty(clothingClass)===false){continue;}if(typeof da.Clothes[clothingClass]==="function"&&da.Clothes[clothingClass].prototype){var _className=da.Clothes[clothingClass].name;// heuristic of constructors always having a capital letter...
if(_className.length>1&&_className.charAt(0)==_className.charAt(0).toUpperCase()){globalClassNames.push("Clothes."+_className);}}}// Add entries for the rest of DAD's instantiable classes here.
globalClassNames.forEach(function(className){extendSerializability("da."+className);});}return{serialize:serialize,deserialize:deserialize,loadSerialization:loadSerialization};}(da));var da=function(da){da.femaleNames="Aaliyah Aarushi Abagail Abbey Abbi Abbie Abby Abi Abia Abigail Abree Abrianna Abrielle Aby Acacia Ada Adalia Adaline Adalyn Addie Addilyn Addison Adelaide Adele Adelene Adelia Adelina Adeline Adelynn Adreanna Adriana Adrianna Adrianne Adrienne Ady Aerona Agatha Aggie Agnes Aida Aileen Ailsa Aimee Aine Ainsleigh Ainsley Aisha Aisling Aislinn Aislynn Alaina Alana Alanis Alanna Alannah Alaska Alayah Alayna Alba Albany Alberta Aleah Alecia Aleisha Alejandra Alena Alessandra Alessia Alex Alexa Alexandra Alexandria Alexia Alexis Alexus Ali Alia Alice Alicia Alina Alisa Alisha Alison Alissa Alivia Aliyah Aliza Alize Alka Allie Allison Ally Allyson Alma Alondra Alya Alycia Alyshialynn Alyson Alyssa Alyssia Amalia Amanda Amandine Amani Amara Amari Amaris Amaryllis Amaya Amber Amberly Amelia Amelie America Amethyst Amie Amina Amirah Amity Amy Amya Ana Anabel Anabelle Anahi Anais Anamaria Ananya Anastasia Andie Andrea Andromeda Angel Angela Angelia Angelica Angelina Angeline Angelique Angie Anika Anisa Anissa Anita Aniya Aniyah Anjali Ann Anna Annabel Annabella Annabelle Annabeth Annalisa Annalise Annamaria Anne Anneke Annemarie Annette Annie Annika Annmarie Anthea Antoinette Antonia Anuja Anusha Anushka Anwen Anya Aoibhe Aoibheann Aoife Aphrodite Apple April Aqua Arabella Arabelle Arden Aria Ariadne Ariana Arianna Arianne Ariel Ariella Arielle Arisha Arleen Arlene Arlette Artemis Arwen Arya Asha Ashanti Ashe Ashia Ashlee Ashleigh Ashley Ashlie Ashlyn Ashlynn Ashton Ashtyn Ashvini Asia Asma Aspen Aster Astra Astrid Athalia Athena Athene Atlanta Aubreanna Aubree Aubrey Aubriana Aubrielle Audra Audrey Audriana Audrina Augustina Aura Aurelia Aurora Autumn Ava Avaline Avalon Avery Avia Avriella Avril Aya Ayana Ayanna Ayesha Ayisha Ayla Azalea Azaria Azariah Bailey Barbara Barbie Bay Baylee Bea Beatrice Beatrix Becca Beccy Becky Belinda Bella Bellatrix Belle Benita Berenice Bernadette Bernice Bertha Beryl Bess Bessie Beth Bethan Bethanie Bethany Betsy Bettina Betty Bev Beverly Beyonce Bianca Billie Blair Blaire Blake Blakely Blanche Blaze Blessing Bliss Bloom Blossom Blythe Bobbi Bobbie Bobby Bonita Bonnie Bonquesha Braelyn Brandi Brandy Braylee Brea Breanna Bree Breeze Brenda Brenna Bria Briana Brianna Brianne Briar Bridget Bridgette Bridie Brie Briella Brielle Brigid Brigitte Briley Brinley Briony Brisa Bristol Britney Britt Brittany Brittney Brodie Brogan Bronagh Bronte Bronwen Bronwyn Brook Brooke Brooklyn Brooklynn Bryanna Brylee Bryleigh Bryn Brynlee Brynn Bryony Bunty Cadence Caila Cailin Caitlan Caitlin Caitlyn Caleigh Cali Calista Callie Calliope Callista Calypso Cambree Cambria Cameron Cami Camila Camilla Camille Campbell Camry Camryn Candace Candice Candis Candy Caoimhe Caprice Cara Carenza Carina Caris Carissa Carla Carlene Carley Carlie Carlotta Carly Carlyn Carlynn Carmel Carmela Carmen Carol Carole Carolina Caroline Carolyn Carrie Carter Carys Casey Cassandra Cassia Cassidy Cassie Cassiopeia Cat Catalina Catarina Cate Caterina Cathalina Catherine Cathleen Cathryn Cathy Catlin Catrina Catriona Cayla Cayleigh Ceanna Cece Cecelia Cecile Cecilia Cecily Celeste Celestia Celestine Celia Celina Celine Celise Ceri Cerise Cerys Chanel Chanelle Chantal Chantelle Charis Charissa Charity Charla Charlene Charlette Charley Charlie Charlize Charlotte Charmaine Chastity Chelsea Chelsey Chenai Chenille Cher Cheri Cherie Cherry Cheryl Cheyanne Cheyenne Chiara Chloe Chole Chris Chrissy Christa Christabel Christal Christen Christi Christiana Christiane Christie Christina Christine Christy Chrysanthemum Chrystal Chyanne Ciara Cicely Cici Ciel Cierra Cindy Clair Claire Clara Clarabelle Clare Clarice Claris Clarissa Clarisse Clarity Clary Claudette Claudia Claudine Clea Clemence Clementine Cleo Cleopatra Clodagh Cloe Clotilde Clover Coco Coleen Colette Colleen Connie Constance Cora Coral Coralie Coraline Cordelia Corey Cori Corina Corinne Cornelia Corra Cosette Courtney Cressida Cristal Cristina Crystal Cyndi Cynthia Dacia Dagmar Dahlia Daina Daisy Dakota Damaris Dana Danette Dani Danica Daniela Daniella Danielle Danika Daphne Dara Darby Darcey Darcie Darcy Daria Darla Darlene Dasia Davida Davina Dawn Dayle Dayna Daysha Deana Deandra Deann Deanna Deanne Deb Debbie Debby Debora Deborah Debra Dede Dee Deedee Deena Deidre Deirdre Deja Delana Delaney Delanie Delany Delia Delilah Delina Della Delores Delphine Demetria Demi Dena Denice Denise Denny Derica Desiree Dessa Destinee Destiny Diamond Diana Diane Dianna Dianne Didi Dido Dilys Dina Dinah Dionne Dior Dixie Dolly Dolores Dominique Donna Dora Doreen Doriana Dorinda Doris Dorla Dorothy Dot Dottie Drew Dulce Dusty Dympna Eabha Ebony Echo Eden Edie Edith Edlyn Edna Edwina Effie Eibhlin Eileen Eilidh Eimear Eireann Eisley Elaina Elaine Elana Eleanor Electra Elektra Elen Elena Eleonora Eliana Elicia Elida Elin Elina Elinor Elisa Elisabeth Elise Eliza Elizabeth Ella Elle Ellen Ellery Elliana Ellie Ellis Elly Elodie Elody Eloise Elora Elouise Elsa Elsie Elspeth Elva Elvina Elvira Elysia Elyza Emanuela Ember Emelda Emelia Emeline Emely Emer Emerald Emerson Emery Emi Emilee Emilia Emilie Emily Emma Emmalee Emmaline Emmalyn Emmanuelle Emmeline Emmie Emmy Ena Enid Enna Enya Erica Erika Erin Eris Ernestine Eryn Esmay Esme Esmeralda Esparanza Esperanza Estee Estelle Ester Esther Estrella Ethel Eudora Eugenie Eunice Eva Evaline Evangelina Evangeline Eve Evelin Evelina Evelyn Everly Evie Evita Ezmae Fabienne Fabrizia Faith Fallon Fanny Farah Farrah Fatima Fawn Fay Faye Felicia Felicity Fern Fernanda Ffion Fia Fifi Fion Fiona Fiora Fleur Flick Flo Flora Florence Floss Fran Frances Francesca Francine Francoise Frankie Freda Frederica Freya Frida Gabby Gabriela Gabriella Gabrielle Gail Garnet Gayle Gaynor Geena Gemma Gena Genesis Genevieve Genna Georgette Georgia Georgie Georgina Geraldine Germaine Gert Gertrude Gia Gianna Gigi Gilda Gillian Gina Ginger Ginnie Ginny Giovanna Gisela Giselle Gisselle Gladys Glenda Glenys Gloria Glynis Golda Goldie Grace Gracelyn Gracie Grainne Greta Gretchen Griselda Guadalupe Guinevere Gwen Gwendolyn Gwyneth Gwynn Habiba Hadley Hailee Hailey Haleigh Haley Halle Hallie Hanna Hannah Harley Harmony Harper Harriet Hattie Haven Hayden Haylee Hayley Hazel Hazeline Heather Heaven Heidi Helen Helena Helene Helga Helina Henrietta Hepsiba Hera Hermine Hermione Hester Hetty Hilary Hilda Hildegard Hillary Hollie Holly Honesty Honey Honor Honour Hope Hortense Hyacinth Ianthe Ida Ila Ilene Iliana Ilona Ilse Imani Imelda Immy Imogen Ina India Indie Indigo Indira Ines Ingrid Iona Ira Irena Irene Irina Iris Irma Isa Isabel Isabell Isabella Isabelle Isadora Isha Isidora Isis Isla Isobel Isolde Itzel Ivana Ivy Iyanna Izabella Izidora Izzie Izzy Jacinda Jacinta Jackie Jacqueline Jacquelyn Jada Jade Jaden Jadyn Jaelynn Jaida Jaime Jaimie Jaina Jamie Jamiya Jan Jana Janae Jancis Jane Janelle Janessa Janet Janette Jania Janice Janie Janine Janis Janiya January Jaqueline Jasmin Jasmine Jaya Jayda Jayden Jayla Jayleen Jaylene Jaylinn Jaylynn Jayne Jazlyn Jazmin Jazmine Jazz Jean Jeana Jeanette Jeanine Jeanna Jeanne Jeannette Jeannie Jeannine Jemima Jemma Jen Jena Jenelle Jenessa Jenna Jennette Jenni Jennie Jennifer Jenny Jensen Jeraldine Jeri Jerri Jeslyn Jess Jessa Jesse Jessica Jessie Jet Jewel Jill Jillian Jina Jo Joan Joann Joanna Joanne Jocelyn Jodi Jodie Jody Joelle Johanna Jojo Joleen Jolene Jolie Joni Jordan Jordana Jordyn Jorja Joseline Joselyn Josephine Josie Journey Joy Joya Joyce Juanita Jude Judith Judy Jules Julia Juliana Julianna Julianne Julie Julienne Juliet Juliette Julissa July Juna June Juniper Juno Justice Justina Justine Kacey Kadence Kaelyn Kaidence Kailey Kailyn Kaitlin Kaitlyn Kaitlynn Kalea Kaleigh Kali Kalia Kalin Kalista Kaliyah Kallie Kamala Kami Kamryn Kaori Kara Karen Kari Karin Karina Karis Karissa Karla Karlee Karly Karolina Karyn Kasey Kassandra Kassidy Kassie Kat Katara Katarina Kate Katelyn Katelynn Katerina Katharine Katherine Kathleen Kathryn Kathy Katia Katie Katlyn Katniss Katrin Katrina Katy Katya Kay Kaya Kayden Kaydence Kaye Kayla Kaylee Kayleigh Kayley Kaylie Kaylin Keana Keara Keeley Keely Keira Keisha Kelis Kelley Kelli Kellie Kelly Kelsey Kelsie Kendall Kendra Kenley Kenna Kennedy Kensey Kenzie Kera Keri Kerian Kerri Kerry Khloe Kia Kiana Kiara Kiera Kierra Kiersten Kiki Kiley Kim Kimberlee Kimberley Kimberly Kimbriella Kimmy Kinley Kinsey Kinsley Kira Kirsten Kirstin Kirsty Kit Kitty Kizzy Kloe Kora Kori Kourtney Kris Krista Kristen Kristi Kristie Kristin Kristina Kristine Kristy Krystal Kya Kyla Kylee Kyleigh Kylie Kyra Lacey Lacie Lacy Ladonna Laila Lainey Lakyn Lala Lana Laney Lara Larissa Lark Latoya Laura Laurel Lauren Lauretta Laurie Lauryn Lavana Lavender Lavinia Layla Lea Leah Leandra Leann Leanna Leanne Leda Lee Leela Leena Leia Leigh Leigha Leila Leilani Lela Lena Lenora Lenore Leona Leonie Leonora Leora Lesley Leslie Lesly Leticia Letitia Lettie Lexi Lexia Lexie Lexis Leyla Lia Liah Liana Lianne Liara Libbie Libby Liberty Lidia Liesl Lila Lilac Lilah Lili Lilian Liliana Lilita Lilith Lillia Lillian Lillie Lilly Lily Lina Linda Lindsay Lindsey Lindy Lisa Lisette Liv Livia Livvy Liz Liza Lizbeth Lizette Lizzie Lizzy Logan Lois Lola Lolita London Lora Loran Lorelei Loren Lorena Loretta Lori Lorie Lorna Lorraine Lorri Lorrie Lottie Lotus Lou Louella Louisa Louise Lourdes Luann Lucia Luciana Lucie Lucille Lucinda Lucky Lucretia Lucy Luisa Lulu Luna Lupita Luz Lydia Lyla Lynda Lyndsey Lynette Lynn Lynne Lynnette Lynsey Lyra Lyric Mabel Macey Macie Mackenzie Macy Madalyn Maddie Maddison Maddy Madeleine Madeline Madelyn Madge Madison Madisyn Madonna Madyson Mae Maeve Magda Magdalena Magdalene Maggie Maia Maira Maire Mairead Maisie Maisy Maja Makayla Makenna Makenzie Malala Maleah Malena Malia Malina Malinda Mallory Malory Mandy Manuela Mara Marcela Marcella Marcelle Marci Marcia Marcie Marcy Margaret Margarita Margaux Marge Margery Margie Margo Margot Margret Maria Mariah Mariam Marian Mariana Marianna Marianne Maribel Marie Mariela Mariella Marilyn Marina Marion Maris Marisa Marisol Marissa Maritza Marjorie Marla Marlee Marlena Marlene Marley Marnie Marsha Martha Martina Mary Maryam Maryann Marybeth Maryjane Masie Mathilda Mathilde Matilda Mattie Maude Maura Maureen Mavis Maxime Maxine May Maya Maybell Mazie Mckayla Mckenna Mckenzie Mea Meadow Meagan Meera Meg Megan Meghan Mei Mel Melanie Melina Melinda Melissa Melody Melvina Mercedes Mercy Meredith Merida Merissa Meryl Mia Michaela Michele Michelle Mika Mikaela Mikayla Mikhaela Mila Mildred Milena Miley Millicent Millie Milly Mim Mimi Mina Mindy Minerva Minnie Mira Mirabel Mirabelle Miracle Miranda Miriam Mirielle Missie Misty Mitzi Modesty Moira Mollie Molly Mona Monica Monika Monique Monroe Montana Montserrat Morag Morgan Morgana Moxie Moya Muriel Mya Myfanwy Myla Myra Myrna Myrtle Nadene Nadia Nadine Naja Nala Nana Nancy Nanette Naomi Natalia Natalie Natasha Naya Nayeli Nell Nellie Nelly Nena Nerissa Nerys Nessa Netty Nevaeh Neve Neveah Nia Niamh Nichola Nichole Nicki Nicky Nicola Nicole Nicolette Nieve Nigella Niki Nikita Nikki Nila Nina Nisha Nishka Nita Noella Noelle Noely Noemi Nola Nora Norah Noreen Norma Nova Nyla Oasis Ocean Oceana Octavia Odalis Odalys Odele Odelia Odette Olga Olive Olivia Olwen Olwyn Oona Oonagh Opal Ophelia Oprah Ora Oriana Orianna Orla Orlaith Page Paige Paisley Paloma Pam Pamela Pandora Pansy Paola Paris Patience Patrice Patricia Patsy Patti Patty Paula Paulette Paulina Pauline Payton Peace Pearl Peggy Penelope Penny Pepper Perla Perrie Persephone Petra Petunia Peyton Philippa Phillipa Philomena Phoebe Phoenix Phyllis Piper Pippa Pixie Polly Pollyanna Poppy Portia Precious Presley Preslie Primrose Princess Priscilla Priya Promise Prudence Prue Queenie Quiana Quinn Rabia Rachael Rachel Rachelle Racquel Rae Raegan Raelyn Raina Raine Ramona Ramsha Randi Rani Rania Raquel Raven Raya Rayna Rayne Reagan Reanna Reanne Rebecca Rebekah Reese Regan Regina Reilly Reina Remi Rena Renae Renata Rene Renee Renesmee Reyna Rhea Rhian Rhianna Rhiannon Rhoda Rhona Rhonda Ria Rianna Richelle Ricki Rihanna Rikki Riley Rina Rita River Riya Roanne Roberta Robin Robyn Rochelle Rocio Roisin Rolanda Ronda Roni Ronna Rosa Rosalie Rosalina Rosalind Rosalinda Rosalynn Rosamund Rosanna Rose Roseanne Rosella Roselle Rosemarie Rosemary Rosetta Rosie Rosita Roslyn Rosy Rowan Rowena Roxana Roxanne Roxie Roxy Rozlynn Ruby Rue Ruth Ruthie Ryanne Rydel Rylee Ryleigh Rylie Sabina Sabine Sable Sabrina Sade Sadhbh Sadie Saffron Safire Safiya Sage Sahara Saige Saira Sally Salma Salome Sam Samantha Samara Samia Samira Sammie Sammy Sandra Sandy Sania Saoirse Saphira Sapphire Sara Sarah Sarina Sariya Sascha Sasha Saskia Savanna Savannah Scarlet Scarlett Seanna Sebastianne Selah Selena Selene Selina Selma Senuri September Seren Serena Serenity Shaelyn Shakira Shamira Shana Shanaya Shani Shania Shannon Shantell Shari Sharon Shary Shauna Shawn Shawna Shawnette Shayla Shayna Shea Sheba Sheena Sheila Shelby Shelia Shelley Shelly Sheri Sheridan Sherri Sherrie Sherry Sheryl Shirley Shivani Shona Shonagh Shreya Shyann Shyla Sian Sidney Sienna Sierra Sigourney Silvia Simone Simran Sindy Sinead Siobhan Sissy Sky Skye Skylar Skyler Sloane Snow Sofia Sofie Sondra Sonia Sonja Sonya Sophia Sophie Sophy Sorrel Spring Stacey Staci Stacia Stacie Stacy Star Starla Stefanie Stella Steph Stephanie Sue Sugar Suki Summer Susan Susanna Susannah Susanne Susie Sutton Suzanna Suzanne Suzette Suzie Suzy Sybil Sydney Sylvia Sylvie Tabatha Tabitha Taelyn Tagan Tahlia Tailynn Tala Talia Talitha Taliyah Tallulah Tamara Tamera Tami Tamia Tamika Tammi Tammie Tammy Tamra Tamsin Tania Tanika Tanisha Tanya Tara Taryn Tasha Tasmin Tatiana Tatum Tawana Taya Tayah Tayla Taylah Tayler Taylor Teagan Teegan Tegan Teigan Tenille Teresa Teri Terri Terrie Terry Tess Tessa Thalia Thea Thelma Theodora Theresa Therese Thomasina Tia Tiana Tiara Tiegan Tiffany Tillie Tilly Tina Tisha Titania Toni Tonia Tonya Tora Tori Tracey Traci Tracie Tracy Tricia Trina Trinity Trish Trisha Trista Trixie Trixy Trudy Tula Tulip Tyra Ulrica Uma Una Ursula Val Valentina Valeria Valerie Valery Vanessa Veda Velma Venetia Venus Vera Verity Veronica Vesper Vicki Vickie Vicky Victoria Vienna Viola Violet Violetta Virginia Virginie Vivian Viviana Vivien Vivienne Wallis Wanda Waverley Wendi Wendy Whitney Wilhelmina Willa Willamina Willow Wilma Winifred Winnie Winnifred Winona Winter Wynne Wynona Xandra Xandria Xanthe Xaviera Xena Xenia Xia Ximena Xochil Xochitl Yara Yasmin Yasmina Yasmine Yazmin Yelena Yesenia Yessica Yolanda Ysabel Yula Yulissa Yvaine Yvette Yvonne Zada Zaheera Zahra Zaira Zakia Zali Zandra Zara Zaria Zaya Zayla Zelda Zelida Zelina Zena Zendaya Zia Zina Zita Ziva Zoe Zoey Zola Zora Zoya Zula Zuri Zyana".split(" ");da.maleNames="Aaron Abdul Abdullah Abe Abel Abraham Abram Abriel Ace Adair Adam Adan Addison Ade Aden Adnan Adonis Adrian Adriel Ahmad Ahmed Aidan Aiden Ainsley Ajay Al Alain Alan Alaric Alastair Albany Albert Alberto Albie Albus Alden Aldo Aldric Aldrin Alec Aled Alejandro Alen Alesandro Alex Alexander Alexis Alfie Alfonse Alfonso Alfred Alfredo Ali Alistair Allan Allen Alonzo Aloysius Alphonso Alton Alvin Amari Ambrose Amir Amit Amos Anand Anderson Andre Andreas Andres Andrew Andy Angel Angelo Angus Ansel Anson Anthony Anton Antonio Antony Apollo Aran Archer Archibald Archie Ari Arjun Arlo Arman Armando Arnie Arnold Aron Arran Arrie Art Arthur Arturo Arun Arwin Asa Asad Ash Ashby Asher Ashley Ashton Ashwin Aspen Aston Aswin Athan Atticus Aubrey Auden Audric Audwin August Augustus Austen Austin Aven Avery Avon Axel Ayaan Ayden Ayrton Bailey Barack Barclay Barnaby Barney Barrett Barron Barry Bart Bartholomew Basil Bastian Baxter Bay Baylor Bear Beau Beck Beckett Bellamy Ben Benedict Benjamin Benji Benjy Bennett Bennie Benny Benson Bentley Bently Benton Bernard Bernardo Bernie Bert Bertie Bertram Bev Bevan Bevin Bevis Bill Billy Bjorn Bladen Blain Blaine Blair Blaise Blake Blaze Blue Bob Bobby Bodie Bogdan Boris Boston Bowen Boyd Brad Braden Bradford Bradley Bradwin Brady Braeden Bram Branden Brandon Branson Brantley Braxton Bray Brayan Brayden Braydon Braylon Brayson Breck Breckin Brendan Brenden Brendon Brennan Brennon Brent Brentley Brenton Bret Brett Brevin Brevyn Brian Brice Bridie Brie Brig Brighton Brinley Brock Brod Broden Broderick Brodie Brody Brogan Bronson Brook Brooke Brooklyn Brooks Bruce Bruno Bryan Bryant Bryce Bryden Brydon Bryn Bryon Bryson Buck Buddy Burt Burton Buster Butch Byron Cadby Cade Caden Cael Caelan Caesar Cai Caiden Cain Caius Cal Cale Caleb Calhoun Callan Callen Callum Calum Calvin Cam Camden Cameron Campbell Camron Caolan Carey Carl Carlisle Carlos Carlton Carsen Carson Carsten Carter Cary Casey Cash Cason Casper Cassius Castiel Castor Cathal Cato Cavan Cayden Caydon Cayson Cecil Cedric Cesar Chad Chance Chandler Channing Charles Charley Charlie Charlton Chas Chase Chauncey Chayton Chaz Che Chesney Chester Chevy Chip Chris Christian Christopher Chuck Cian Ciaran Cillian Clancy Clarence Clark Claude Clay Clayton Clement Cletus Cliff Clifford Clifton Clint Clinton Clive Clovis Clyde Coby Cody Cohen Colby Cole Colin Collin Colm Colt Colten Colton Conan Conlan Conner Connor Conor Conrad Constantine Cooper Corbin Corey Cormac Cornelius Cory Craig Crispin Cristian Cristobal Crosby Cruz Cullen Curt Curtis Cuthbert Cyril Cyrus Dacey Daire Dakota Dale Dalen Dallas Dalon Dalton Damian Damien Damion Damon Dan Dana Dane Daniel Danny Dante Dara Daragh Darcy Daren Darian Darin Dario Darius Darnell Darragh Darrel Darrell Darren Darrin Darryl Darryn Darwin Daryl Dash Dashawn Dave David Davin Davion Davis Dawson Dax Daxon Daxter Daxton Daylen Dayton Deacon Dean Deandre Declan Deepak Delbert Delvin Demetrius Denis Dennis Denny Denver Denzel Deon Derek Derik Dermot Derrick Deshaun Deshawn Desmond Dev Devin Devlin Devon Devyn Dewayne Dewey Dexter Diarmuid Dick Dicky Diego Digby Dilan Dillon Dimitri Dinesh Dino Dion Dirk Dixon Django Dmitri Dominic Dominick Don Donal Donald Donnie Donovan Dorian Doug Dougie Douglas Doyle Drake Draven Drew Duane Dudley Duke Duncan Dustin Dwayne Dwight Dylan Eamon Earl Earnest Eason Easton Eben Ed Eddie Eddy Eden Edgar Edison Edmund Edouard Edric Edsel Edson Eduardo Edward Edwardo Edwin Efrain Efren Egan Egon Eli Elian Elias Elijah Eliot Elisha Ellington Elliot Elliott Ellis Elmer Elmo Elon Elroy Elton Elvis Elwood Elwyn Ely Emanuel Emerson Emery Emet Emil Emiliano Emilio Emlyn Emmanuel Emmerson Emmet Emmett Emory Ender Ennio Enoch Enrique Enzo Eoghan Eoin Eric Erick Erik Ernest Ernesto Ernie Errol Ervin Erwin Esteban Ethan Ethen Etienne Euan Euen Eugene Eustace Evan Evangelos Evelyn Everett Ewan Eyan Ezekiel Ezio Ezra Fabian Fabio Faisal Farley Febian Felipe Felix Fenton Ferdinand Fergal Fergus Fernand Fernando Fidel Filbert Finbar Findlay Finlay Finley Finn Finnian Finnigan Fionn Fletcher Florian Floyd Flynn Ford Forest Forrest Foster Fox Francesco Francis Francisco Frank Frankie Franklin Franklyn Fraser Fred Freddie Freddy Frederick Fredrick Fritz Fynn Gabe Gabriel Gael Gaelan Gage Gale Galen Gannon Gareth Garman Garrett Garrison Garry Garth Gary Gaston Gavin Gene Geoff Geoffrey George Geraint Gerald Gerard Gerardo Germain Gerry Gian Gibson Gideon Gil Gilbert Gilberto Giles Gino Giorgio Giovanni Glen Glenn Glyndwr Glynn Godfrey Godric Godwin Gonzalo Gordon Grady Graeme Graham Granger Grant Gray Grayson Greg Gregg Gregor Gregory Grey Greyson Griffin Grover Guido Guillermo Gunnar Gunner Gus Gustav Gustavo Guy Gwain Haden Haiden Hal Hamilton Hamish Han Hank Hans Harlan Harley Harold Harris Harrison Harry Harvey Hassan Hayden Hayes Heath Hector Hendrik Hendrix Henley Henri Henry Herbert Herbie Herman Heston Hezekiah Hilary Holden Homer Horace Horatio Howard Hubert Huck Hudson Huey Hugh Hugo Humberto Humphrey Hunter Huw Huxley Hywel Iain Ian Ianto Ibrahim Ichabod Idris Ieuan Ieystn Iggy Ignacio Igor Ike Imran Indiana Inigo Ira Irvin Irving Irwin Isaac Isaiah Isaias Ishaan Ishmael Isiah Isidore Ismael Israel Issac Ivan Ivor Jace Jack Jackie Jackson Jacob Jacoby Jacques Jad Jaden Jadon Jagger Jago Jai Jaiden Jaime Jak Jake Jakob Jalen Jamal James Jameson Jamie Jamison Jan Jared Jaret Jariel Jarod Jaron Jarrett Jarrod Jarvis Jase Jason Jasper Javid Javier Javon Jax Jaxon Jaxson Jay Jayce Jayden Jaydon Jaylen Jaylin Jaylon Jayson Jeb Jebediah Jed Jedediah Jediah Jedidiah Jeff Jefferson Jeffery Jeffrey Jeffry Jem Jensen Jenson Jerald Jeremiah Jeremy Jericho Jermaine Jerome Jerrion Jerrold Jerry Jersey Jesse Jessie Jesus Jet Jethro Jett Jevan Jim Jimmie Jimmy Joachim Joaquin Jock Jody Joe Joel Joey Johan Johann John Johnathan Johnathon Johnnie Johnny Jon Jonah Jonas Jonathan Jonathon Jonty Jordan Jordon Jordy Jorge Jose Joseph Josh Joshua Josiah Joss Josue Jovan Juan Judah Judas Judd Jude Julian Julio Julius Justice Justin Kade Kaden Kai Kaiden Kaine Kale Kaleb Kalem Kameron Kane Karl Karson Karsten Kash Kason Kasper Kayden Kayle Kaylen Kayson Kean Keanu Keaton Kedrick Keegan Keenan Keith Kelby Kellan Kellen Kellin Kelly Kelvin Ken Kenan Kendall Kendrick Kennedy Kenneth Kenny Kent Kenton Keon Kerry Kevin Khalid Khalil Kian Kiefer Kieran Kieron Killian Kim Kingsley Kingston Kip Kiran Kirby Kirk Kit Klaus Klay Knox Kobe Koby Kody Kolby Konnor Kris Krish Kristian Kristoff Kristopher Kurt Kurtis Kyan Kye Kylar Kyle Kylen Kyler Kyran Kyrin Kyron Lacey Lachlan Lake Lamar Lamont Lance Lancelot Landen Landon Landyn Lane Langdon Langston Larry Lars Laurence Laurie Lawrence Lawson Layne Layton Leaf Leandro Lebron Ledger Lee Leif Leigh Leighton Leland Lemuel Len Lennie Lennon Lennox Lenny Leo Leon Leonard Leonardo Leonel Leopold Leroy Les Leslie Lester Leuan Lev Leven Levi Levy Lewis Lex Leyton Liam Lief Lincoln Linden Lindon Link Linley Linus Lionel Lisandro Llewelyn Lloyd Lochlan Logan Loki London Lonnie Lorcan Loren Lorenzo Loris Lou Louie Louis Lowell Luca Lucas Lucian Luciano Luigi Luis Lukas Luke Luther Lyle Lyndon Lynn Lysander Mack Maddox Magnus Maison Malachi Malakai Malcolm Malik Malloy Manny Manuel Marc Marcel Marcelo Marco Marcos Marcus Marik Mario Marion Mark Marley Marlon Marquis Marshall Martin Marty Martyn Marvin Mason Massimo Mat Mateo Mathew Matt Matthew Matthias Maurice Mauricio Maverick Max Maxim Maximilian Maximus Maxwell Mckenzie Mehdi Mehtab Mekhi Mel Melvin Memphis Merick Mervin Mervyn Mica Micah Michael Micheal Mick Mickey Miguel Mike Mikey Milan Miles Miller Milo Milton Misha Mitch Mitchell Mitt Moe Mohamed Mohammad Mohammed Moises Monte Montgomery Monty Mordecai Morgan Morris Moses Muhammad Murphy Murray Myles Mylo Myron Nash Nasir Nate Nath Nathan Nathanael Nathaniel Neal Ned Neel Nehemiah Neil Nelson Nesbit Nestor Neville Nevin Newton Niall Nicholas Nick Nickolas Nicky Nico Nicolas Nigel Nihal Nik Niklaus Niko Nikolai Nikolas Nile Nils Noah Noam Noe Noel Nolan Norbert Norman Norris Norton Nyle Nyles Oakes Oakley Oberon Octavio Oisin Olaf Oli Oliver Ollie Olly Omar Oran Orion Orlando Orson Oscar Osvaldo Oswald Otis Otto Owain Owen Ozzie Ozzy Pablo Paco Paddy Padraig Palmer Paolo Parker Pascal Pat Patrick Paul Paxton Payton Pearce Pedro Percy Perry Petar Pete Peter Peyton Phebian Phil Philip Philippe Phillip Phineas Phoenix Pierce Piers Pip Porter Poul Prakash Preston Prince Princeton Quentin Quincy Quinlan Quinn Quinton Quintrell Rafael Rafferty Raheem Rahul Raiden Raj Rajesh Ralph Ram Rameel Ramon Ramsey Randal Randall Randolph Randy Raoul Raphael Rashad Rashan Rashid Raul Ravi Ray Raydon Raylan Raymond Reece Reed Reef Reese Reg Reggie Reginald Rehan Reid Reilly Remco Remington Remy Ren Rene Reuben Rex Reynaldo Reza Rhett Rhydian Rhys Rian Ricardo Rich Richard Richie Rick Rickey Rickie Ricky Rico Rider Rigby Rik Riker Riley Rio Riordan River Roan Rob Robbie Robby Robert Roberto Robin Rocco Rock Rocky Rod Roddy Roderick Rodger Rodney Rodolfo Rodrigo Rogelio Roger Rohan Roland Rolando Roman Romeo Ron Ronald Ronan Ronnie Ronny Roosevelt Rory Roscoe Ross Rowan Roy Royce Ruairi Ruben Rubin Rudolph Rudy Rufus Rupert Russ Russell Rusty Ryan Ryder Ryker Rylan Ryland Ryle Ryley Sacha Said Salman Salvador Salvatore Sam Samir Sammy Samson Samuel Sandeep Sandy Sanjay Santiago Sasha Saul Sawyer Scot Scott Scottie Scotty Seamus Sean Seb Sebastian Sebastien Sebestian Sergio Seth Shadrach Shane Shannon Shaun Shawn Shay Shayne Shea Sheldon Shelton Sherlock Sherman Sherwin Shiloh Sid Sidney Silas Simeon Simon Sky Skylar Skyler Slade Sol Solomon Sonny Soren Spencer Spike Stacey Stacy Stan Stanley Stefan Stephan Stephen Sterling Steve Steven Stevie Stewart Stone Storm Struan Stuart Sufyan Sullivan Sven Sylvester Tadhg Talon Tam Tane Tanner Tariq Tarquin Tate Taye Taylor Teague Ted Teddy Teo Terence Terrance Terrell Terrence Terry Tevin Tex Thad Thaddeus Theo Theodore Theon Theophilus Thom Thomas Thor Tiago Tiberius Tiernan Tiger Tim Timmy Timothy Tito Titus Tobias Tobin Toby Tod Todd Tom Tomas Tommie Tommy Tony Torin Toryn Trace Tracey Tracy Travis Tray Tremaine Trent Trenton Trevon Trevor Trey Treyden Tristan Tristen Triston Troy Truman Tucker Turner Ty Tylan Tyler Tyrell Tyren Tyrese Tyrone Tyson Ulrich Ulysses Umar Uriah Uriel Usama Valentin Valentine Valentino Van Vance Vasco Vaughn Vernon Vic Victor Vidal Vihan Vijay Vikram Vince Vincent Vinnie Virgil Vishal Vivian Vlad Vladimir Wade Walker Wallace Wally Walter Warren Waylon Wayne Wendell Wes Wesley Westin Weston Wilbert Wilbur Wiley Wilfred Wilhelm Will Willam Willard Willem William Willie Willis Wilson Winston Wolf Wolfgang Woody Wyatt Xander Xavier Xerxes Yahir Yardley Yehudi Yestin York Yuri Yusuf Yves Zac Zach Zachariah Zachary Zachery Zack Zackary Zackery Zaiden Zain Zaine Zak Zander Zane Zayden Zayn Zayne Zeb Zebulon Zed Zeke Zeph Ziggy Zion Zohar Zoltan Zuriel Zylen".split(" ");return da;}(da||{});/*
 global da
 *//**
 * Where common materials go, where each can act as style overrides, usually
 * by having a fill and stroke property or method
 * @namespace Materials
 * @memberof module:da
 */da.Materials=function(){"use strict";var brownFur={stroke:"#663300",fill:"#ac7339",// fur parts can be tucked under
coverConceal:["this"]};var sheerFabric={stroke:"#000",fill:"rgba(0,0,0,0.8)"};return{brownFur:brownFur,sheerFabric:sheerFabric};}();/*
 global da
 */Object.assign(da,function(){var IMAGE_MAXSIZE=100;// canvas used for patterns
var patternCanvas=document.createElement("canvas");patternCanvas.width=IMAGE_MAXSIZE;patternCanvas.height=IMAGE_MAXSIZE;var patternCtx=patternCanvas.getContext("2d");// canvas used for scaling images
var imageCanvas=document.createElement("canvas");/**
     * Cache of loaded patterns, lazily created as needed by getPattern.
     * Each one is either a function that returns either a color, gradient, pattern (all are statically cached),
     * or a function that returns either a color, gradient, or pattern (dynamically cached since the parameters depend
     * on draw exports).
     */var cachedPatterns={};/**
     * Patterns to load as soon as we want to draw. Populated by getPattern as necessary.
     * @type {Promise[]}
     */var patternLoadingQueue=[];/**
     * patternName -> pattern production function map
     * Populated by calling addPattern, and queried by getPattern if pattern hasn't been cached yet
     */var producePattern={};/**
     * List names of available patterns to gettable by getPattern
     * @returns {string[]}
     */function listAvailablePatterns(){var patterns=[];for(var pat in producePattern){if(producePattern.hasOwnProperty(pat)){patterns.push(pat);}}return patterns;}function getPatternFullName(patternName,patternSize){return patternName+"."+patternSize;}function getPatternBaseName(patternName){var splitPoint=patternName.indexOf(".");if(splitPoint<0){return patternName;}return patternName.substr(0,splitPoint);}/**
     * Get a fill or stroke pattern. When used inside draw, guaranteed to supply a usable pattern.
     * Used outside of draw could result in unfulfilled promises.
     * @param {string} patternName Name of the pattern
     * @param {number} patternSize How large the image canvas should be for this pattern
     * @returns {Array} pattern method
     */function getPattern(patternName){var patternSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:IMAGE_MAXSIZE;console.log("getting pattern "+patternName);// cache along with the size to prevent reloads
var fullName=getPatternFullName(patternName,patternSize);if(cachedPatterns.hasOwnProperty(fullName)){return cachedPatterns[fullName];}if(producePattern.hasOwnProperty(patternName)===false){throw new Error("Trying to get pattern that hasn't been added yet: "+patternName);}// create the promise
patternLoadingQueue.push(loadPattern(patternName,producePattern[patternName],patternSize));// return wrapper around delayed call
return["pattern",{patternName:fullName,patternSize:patternSize}];}function getLoadedPattern(pattern,ctx,ex){if(Array.isArray(pattern)&&pattern[0]==="pattern"){var source=cachedPatterns[pattern[1].patternName];// need dynamic production
if(typeof source==="function"){var data=Object.assign({ctx:ctx,ex:ex},pattern[1]);return source(data);}return source;}else if(typeof pattern==="function"){return pattern.call(this,ctx,ex);}return pattern;}function addPattern(patternName,patternSource){"use strict";if(producePattern[patternName]){return;}producePattern[patternName]=patternSource;}/**
     * Load pattern from some source method (either function or an image path) asynchronously
     * @param {string} patternName
     * @param {(string|function)} patternSource
     * @param {number} patternSize How large the image canvas should be for this pattern
     * @returns {Promise} Promise to produce this pattern (and cache it)
     */function loadPattern(patternName,patternSource,patternSize){"use strict";// depending on what kind of pattern was put in, we have different promises to fulfill
var fullName=getPatternFullName(patternName,patternSize);/**
         * Custom method of creating the pattern, such as anything requiring ctx
         */if(typeof patternSource==="function"){/**
             * We heuristically decide whether pattern can be cached or has to be dynamic
             * by looking at the number of parameters the function accepts.
             * If it's <= 1 parameters, we asssume it takes ctx only and can be cached
             * Else we assume it needs ex or some other parameters
             */if(patternSource.length<=1){return new Promise(function(resolve){cachedPatterns[fullName]=patternSource(patternCtx);resolve();});}else{return new Promise(function(resolve){cachedPatterns[fullName]=patternSource;resolve();});}}else{// load image for the first time and cache it
return new Promise(function(resolve,reject){var image=new Image();image.onload=function(){if(image.width<patternSize){cachedPatterns[fullName]=patternCtx.createPattern(image,"repeat");}else{var scale=image.width/patternSize;var height=Math.round(image.height/scale);imageCanvas.width=patternSize;imageCanvas.height=height;var imageCtx=imageCanvas.getContext("2d");imageCtx.drawImage(image,0,0,image.width,image.height,0,0,patternSize,height);cachedPatterns[fullName]=patternCtx.createPattern(imageCanvas,"repeat");}resolve();};image.onerror=function(){console.log(Error("failed to load "+patternSource));reject();};image.src=patternSource;});}}return{IMAGE_MAXSIZE:IMAGE_MAXSIZE,patternLoadingQueue:patternLoadingQueue,addPattern:addPattern,listAvailablePatterns:listAvailablePatterns,getPattern:getPattern,getLoadedPattern:getLoadedPattern,getPatternBaseName:getPatternBaseName};}());/*
 global da
 */da.Skeleton=function(){return{human:{}};}();/*
 global da
 */Object.assign(da,function(da){"use strict";var ShadingPart=function(){function ShadingPart(){_classCallCheck(this,ShadingPart);for(var _len5=arguments.length,data=Array(_len5),_key5=0;_key5<_len5;_key5++){data[_key5]=arguments[_key5];}Object.assign.apply(Object,[this,ShadingPart.defaultProperties].concat(data));}_createClass(ShadingPart,[{key:"fill",value:function fill(){return"hsl(0,15%,80%)";}},{key:"getLineWidth",value:function getLineWidth(){return 0;}}]);return ShadingPart;}();Object.assign(ShadingPart.prototype,{layer:da.Layer.FRONT});var shine="hsla(0,100%,100%,0.2)";return{ShadingPart:ShadingPart,shine:shine};}(da));/*
 global da
 *//**
 * All parts should go in this namespace
 * @namespace Part
 * @memberof module:da
 */da.Part=function(da){"use strict";/**
     * Base class for all body parts
     * @memberof module:da
     */var BodyPart=function(){function BodyPart(){_classCallCheck(this,BodyPart);for(var _len6=arguments.length,data=Array(_len6),_key6=0;_key6<_len6;_key6++){data[_key6]=arguments[_key6];}Object.assign.apply(Object,[this,BodyPart.defaultProperties].concat(data));}/**
         * Set the stroke pattern for this part
         * @returns {string}
         */_createClass(BodyPart,[{key:"stroke",value:function stroke(){return"inherit";}/**
         * Set the fill pattern for this part
         * @returns {string}
         */},{key:"fill",value:function fill(){return"inherit";}/**
         * Set how thick the stroke line should be
         * @returns {number}
         */},{key:"getLineWidth",value:function getLineWidth(){return 0.8;}/**
         * Calculate drawpoints associated with this part and return it in the sequence to be drawn.
         * @this {object} Calculated dimensions of the player owning the part
         * @param {object} ex Exports from draw that should hold draw points calculated up to now;
         * additional draw points defined by this part should be defined on ex
         * @param {object} mods Combined modifiers of the part and the Player owning the part
         * @param {boolean} calculate
         * @param {module:da.BodyPart} part The body part itself
         * @return {object[]} List of draw points (or convertible to draw point objects)
         */},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate,part){/*eslint no-unused-vars: ["off", { "args": "all" }]*/}}]);return BodyPart;}();/**
     * The default properties of all body parts; add to this object to add additional default properties
     * @property {(string|null)} loc Location of the part, prepend with + to mean allow other
     * parts to also occupy this location, - to mean restrict any other part from being here
     * @property {module:da.Layer} layer Drawing layer,
     * @property {boolean} reflect Whether this part should be drawn on the other side as well
     * @property {string[]} coverConceal Whether this part should not be drawn if there are clothes
     * covering its location
     * @property {boolean} uncoverable Whether it's possible to wear anything over this part
     * (mutually exclusive with converconceal)
     * @property {string[]} aboveParts List of "{part group} {location}" strings that specify
     * which parts of which part groups this part should be drawn above. For example, having
     * "decorativeParts torso" will ensure this part gets drawn above any parts in that location.
     * Specifying only a location will mean to be above any part in that location regardless of group.
     * @property {string[]} belowParts Opposite to aboveParts.
     */Object.assign(BodyPart.prototype,{loc:null,parentPart:null,layer:da.Layer.BASE,reflect:false,coverConceal:[],uncoverable:false,aboveParts:[],belowParts:[]});/**
     * Right side of the body for anything taking side
     * @readonly
     * @type {number}
     */var RIGHT=0;/**
     * Left side of the body for anything taking side
     * @readonly
     * @type {number}
     */var LEFT=1;/**
     * Give me a base body part and a side it's supposed to be on
     * I'll return to you a body part specific to that side
     * @memberof module:da.Part
     * @param {BodyPart} Part Prototype to instantiate with
     * @param {...object} userData Overriding data
     * @returns {BodyPart}
     */function create(Part){for(var _len7=arguments.length,userData=Array(_len7>1?_len7-1:0),_key7=1;_key7<_len7;_key7++){userData[_key7-1]=arguments[_key7];}var data=Object.assign.apply(Object,[{}].concat(userData));var part=new Part(data);var side=data&&data.hasOwnProperty("side")?data.side:null;// override if part location specifies side
if(side===null){side=extractSideLocation(extractUnmodifiedLocation(part.loc));}// direct override
if(part.forcedSide!==undefined){side=part.forcedSide;}var sideString=getSideLocation(side);// rename for more specificity
if(sideString==="right"||sideString==="left"){var baseLocation=extractUnmodifiedLocation(part.loc);var locationModifiers=extractLocationModifier(part.loc);part.loc=locationModifiers+sideString+" "+baseLocation;if(part.parentPart){part.parentPart=sideString+" "+part.parentPart;}}// configure side to be a standard format
part.side=getSideValue(side);return part;}/**
     * Get a side string in a well defined format
     * @param side A side string
     * @returns {(string|null)} Either the side string or null if unrecognized
     */function getSideLocation(side){if(side==="right"||side==="left"){return side;}if(side===da.Part.LEFT){return"left";}if(side===da.Part.RIGHT){return"right";}return null;}/**
     * Extract the side component from a location string
     * @memberof module:da
     * @param {string} partLoc Location string of a part
     * @returns {(string|null)} Either the side string or null if no side indicated
     */function extractSideLocation(partLoc){// should be first word separated by whitespace
if(partLoc.indexOf(" ")<0){return null;}return partLoc.substr(0,partLoc.indexOf(" "));}/**
     * Extract the base component from a location string
     * @memberof module:da
     * @param {string} partLoc Location string of a part
     * @returns {string} The base component
     */function extractBaseLocation(partLoc){// last word separated by whitespace
if(partLoc.indexOf(" ")<0){return partLoc;}return partLoc.substr(partLoc.lastIndexOf(" ")+1);}/**
     * Extract the underlying location (side + base) of a location after stripping it of
     * potential modifier characters, which are prepended (use + for non-restrictive, - for exclusive)
     * @memberof module:da
     * @param {string} partLoc location name of part
     */function extractUnmodifiedLocation(partLoc){for(var c=0;c<partLoc.length;++c){switch(partLoc[c]){case"+":case"-":break;default:return partLoc.substr(c);}}}/**
     * Extract modifier characters (+ for non-restrictive, - for exclusive)
     * @memberof module:da
     * @param {string} partLoc Location name of part
     * @returns {string} Modifier characters for this location
     */function extractLocationModifier(partLoc){var modifiers="";for(var c=0;c<partLoc.length;++c){switch(partLoc[c]){case"+":case"-":modifiers+=partLoc[c];break;default:break;}}return modifiers;}/**
     * Check whether two parts conflict
     * @param {Part} partA
     * @param {Part} partB
     * @returns {boolean} True if the two parts have conflicting locations
     */function partConflict(partA,partB){if(partA.side!==partB.side){return false;}// else on same side
if(Object.getPrototypeOf(partA)===Object.getPrototypeOf(partB)){return true;}// allow any parts at location (so even if same location would still be OK)
if(partA.loc.charAt(0)==="+"||partB.loc.charAt(0)==="+"){return false;}// else return if their locations conflict
return partA.loc===partB.loc;}function getChildLocation(parentLoc,child){var parentSide=extractSideLocation(parentLoc);var childLoc=child;// could potentially not have a side (centered)
if(parentSide!==null){childLoc=parentSide+" "+childLoc;}var childSide=getSideValue(parentSide);// could get overriden if side explicitely set
if(extractSideLocation(childLoc)){childSide=getSideValue(extractSideLocation(childLoc));}return{childSide:childSide,childLoc:childLoc};}function getSideValue(side){if(side==="left"||side===da.Part.LEFT){return da.Part.LEFT;// could alternatively already be given in numeric terms
}else{return da.Part.RIGHT;}}// exports
Object.assign(da,{BodyPart:BodyPart,getSideLocation:getSideLocation,getSideValue:getSideValue,extractSideLocation:extractSideLocation,extractBaseLocation:extractBaseLocation,extractUnmodifiedLocation:extractUnmodifiedLocation,extractLocationModifier:extractLocationModifier,partConflict:partConflict,getChildLocation:getChildLocation});return{LEFT:LEFT,RIGHT:RIGHT,create:create};}(da);/*
 global da
 */Object.assign(da,function(da){"use strict";/**
     * Base class for non-combat parts for show
     * @memberof module:da
     */var DecorativePart=function(){function DecorativePart(){_classCallCheck(this,DecorativePart);for(var _len8=arguments.length,data=Array(_len8),_key8=0;_key8<_len8;_key8++){data[_key8]=arguments[_key8];}Object.assign.apply(Object,[this,DecorativePart.defaultProperties].concat(data));}_createClass(DecorativePart,[{key:"stroke",value:function stroke(){return"inherit";}},{key:"fill",value:function fill(){return"inherit";}// how thick the stroke line should be
},{key:"getLineWidth",value:function getLineWidth(){return 1.5;}}]);return DecorativePart;}();DecorativePart.defaultProperties={loc:null,layer:da.Layer.BASE,reflect:false,coverConceal:[],uncoverable:false};return{DecorativePart:DecorativePart};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Head=function(_da$BodyPart){_inherits(Head,_da$BodyPart);function Head(){var _ref2;_classCallCheck(this,Head);for(var _len9=arguments.length,data=Array(_len9),_key9=0;_key9<_len9;_key9++){data[_key9]=arguments[_key9];}return _possibleConstructorReturn(this,(_ref2=Head.__proto__||Object.getPrototypeOf(Head)).call.apply(_ref2,[this,Head.defaultProperties].concat(data)));}return Head;}(da.BodyPart);Object.assign(Head.prototype,{loc:"head",forcedSide:null,// can't have head without neck
parentPart:"neck",layer:da.Layer.BELOW_HAIR,// want reflection to be drawn
reflect:true});var BrowShading=function(_da$ShadingPart){_inherits(BrowShading,_da$ShadingPart);function BrowShading(){var _ref3;_classCallCheck(this,BrowShading);for(var _len10=arguments.length,data=Array(_len10),_key10=0;_key10<_len10;_key10++){data[_key10]=arguments[_key10];}return _possibleConstructorReturn(this,(_ref3=BrowShading.__proto__||Object.getPrototypeOf(BrowShading)).call.apply(_ref3,[this,BrowShading.defaultProperties].concat(data)));}_createClass(BrowShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var inner=da.extractPoint(ex.brow.inbot);var sp=da.splitCurve(ex.brow.outbot,ex.brow.inbot,0.5);var out=sp.left.p2;inner.cp1=sp.right.cp1;inner.cp2=sp.right.cp2;var bot=da.extractPoint(ex.nose.top);bot.cp1=da.simpleQuadratic(inner,bot,0.5,-1);out.cp1={x:bot.x+0.4,y:bot.y-0.3};out.cp2={x:out.x+0.5,y:out.y+1};return[out,inner,bot,out];}}]);return BrowShading;}(da.ShadingPart);BrowShading.defaultProperties={loc:"+head",layer:da.Layer.HAIR};var HeadHumanShading=function(_da$ShadingPart2){_inherits(HeadHumanShading,_da$ShadingPart2);function HeadHumanShading(){var _ref4;_classCallCheck(this,HeadHumanShading);for(var _len11=arguments.length,data=Array(_len11),_key11=0;_key11<_len11;_key11++){data[_key11]=arguments[_key11];}return _possibleConstructorReturn(this,(_ref4=HeadHumanShading.__proto__||Object.getPrototypeOf(HeadHumanShading)).call.apply(_ref4,[this,HeadHumanShading.defaultProperties].concat(data)));}_createClass(HeadHumanShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var _calcHeadShading=calcHeadShading(ex,this.faceWidth);var top=_calcHeadShading.top;var skullSide=_calcHeadShading.skullSide;var skullBot=_calcHeadShading.skullBot;var chinOut=_calcHeadShading.chinOut;var chinBot=_calcHeadShading.chinBot;top.cp1={x:chinBot.x+this.faceWidth*0.3,y:chinBot.y};top.cp2={x:top.x+this.faceWidth*0.4,y:top.y};return[top,skullSide,skullBot,chinOut,chinBot,top];}}]);return HeadHumanShading;}(da.ShadingPart);HeadHumanShading.defaultProperties={loc:"+head",layer:da.Layer.HAIR};function calcHeadShading(ex,faceWidth){var sp=da.splitCurve(ex.skull,ex.skull.side,0.4);var top=sp.left.p2;var skullSide=sp.right.p2;skullSide.cp1=sp.right.cp1;skullSide.cp2=sp.right.cp2;skullSide=da.adjustPoint(skullSide,-faceWidth*0.05,0);var skullBot=da.adjustPoint(ex.skull.bot,-faceWidth*0.04,0);// const jaw = da.adjustPoint(ex.jaw, -w * 0.04, 0);
var chinOut=ex.chin.out?da.adjustPoint(ex.chin.out,-faceWidth*0.025,0):{};sp=da.splitCurve(ex.chin.out,ex.chin.bot,0.8);var chinBot=sp.left.p2;return{top:top,skullSide:skullSide,skullBot:skullBot,chinOut:chinOut,chinBot:chinBot};}// head will export skull, ear.top, ear.bot, jaw, chin.out, chin.bot
var HeadHuman=function(_Head){_inherits(HeadHuman,_Head);function HeadHuman(){var _ref5;_classCallCheck(this,HeadHuman);for(var _len12=arguments.length,data=Array(_len12),_key12=0;_key12<_len12;_key12++){data[_key12]=arguments[_key12];}return _possibleConstructorReturn(this,(_ref5=HeadHuman.__proto__||Object.getPrototypeOf(HeadHuman)).call.apply(_ref5,[this,HeadHuman.defaultProperties].concat(data)));}_createClass(HeadHuman,[{key:"getLineWidth",value:function getLineWidth(avatar){return da.clamp(1.7-avatar.dim.faceFem*0.05,0.7,1.5);}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var h=this.height;var skull=ex.skull={x:0,y:h};ex.ear={};skull.side={x:this.faceWidth*0.097-this.faceFem*0.01,y:ex.skull.y-this.faceLength*0.035,cp1:{x:this.faceWidth*0.045,y:h},cp2:{x:this.faceWidth*0.1-1,y:h-2}};skull.bot={x:skull.side.x-this.faceFem*0.0135,y:skull.side.y-5*this.faceLength/220};// always directly below the bottom of the ear, but distance to it changes
ex.jaw={// x: skull.bot.x - (0.7 - this.faceFem * 0.02) + mods.jawJut * 0.1,
x:skull.bot.x-da.clamp(1.5-this.faceFem*0.05-mods.jawJut*0.1,0,this.faceWidth*0.2),y:skull.bot.y-da.clamp(this.faceLength*0.025-this.faceFem*0.2,0,this.faceLength*0.03)};ex.chin={};// we define bottom of the chin because sometimes chin.out is just a slice of the
// bezier
// to it
ex.chin.bot={x:0,y:ex.skull.y-this.faceLength*0.1+this.faceFem*0.035,cp1:{x:ex.jaw.x-da.clamp(1.5-this.faceFem*0.02,0.5,2),y:ex.jaw.y-da.clamp(1+this.faceFem*0.05+mods.cheekFullness*0.1,0,this.faceLength*0.025)}};ex.chin.bot.cp2={x:this.chinWidth*0.1-da.clamp(this.faceFem*0.22,0,3),y:ex.chin.bot.y-1+da.clamp(this.faceFem*0.035,0,2)};var s=da.splitCurve(ex.jaw,ex.chin.bot,0.78);ex.chin.out=s.right.p1;ex.chin.out.cp1=s.left.cp1;ex.chin.out.cp2=s.left.cp2;ex.chin.bot.cp1=s.right.cp1;ex.chin.bot.cp2=s.right.cp2;if(this.faceFem<13){ex.chin.out.cp1=da.simpleQuadratic(ex.jaw,ex.chin.out,0.5,this.faceFem*0.1);}}return[ex.skull,ex.skull.side,ex.skull.bot,ex.jaw,ex.chin.out,ex.chin.bot];}}]);return HeadHuman;}(Head);HeadHuman.defaultProperties={shadingParts:[HeadHumanShading]};return{Head:Head,HeadHuman:HeadHuman,HeadHumanShading:HeadHumanShading,calcHeadShading:calcHeadShading};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var ChinShading=function(_da$ShadingPart3){_inherits(ChinShading,_da$ShadingPart3);function ChinShading(){var _ref6;_classCallCheck(this,ChinShading);for(var _len13=arguments.length,data=Array(_len13),_key13=0;_key13<_len13;_key13++){data[_key13]=arguments[_key13];}return _possibleConstructorReturn(this,(_ref6=ChinShading.__proto__||Object.getPrototypeOf(ChinShading)).call.apply(_ref6,[this,ChinShading.defaultProperties].concat(data)));}_createClass(ChinShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var _da$shiftPoints=da.shiftPoints(0,-2,ex.skull.side,ex.skull.bot,ex.jaw,ex.chin.out,ex.chin.bot);var _da$shiftPoints2=_slicedToArray(_da$shiftPoints,5);var skullSide=_da$shiftPoints2[0];var skullBot=_da$shiftPoints2[1];var jaw=_da$shiftPoints2[2];var chinOut=_da$shiftPoints2[3];var chinBot=_da$shiftPoints2[4];var leftChinOut=da.reflectPoint(chinOut);leftChinOut.cp1=da.reflectPoint(chinBot.cp2);leftChinOut.cp2=da.reflectPoint(chinBot.cp1);var leftJaw=da.reflectPoint(jaw);leftJaw.cp1=da.reflectPoint(chinOut.cp2);leftJaw.cp2=da.reflectPoint(chinOut.cp1);return da.shiftPoints.apply(da,[1.3,0].concat(_toConsumableArray(da.shiftPoints(1.8,0,skullSide,skullBot,jaw,chinOut,chinBot)),[leftChinOut,leftJaw]));}}]);return ChinShading;}(da.ShadingPart);ChinShading.defaultProperties={loc:"+neck",layer:da.Layer.GENITALS};var NeckShading=function(_da$ShadingPart4){_inherits(NeckShading,_da$ShadingPart4);function NeckShading(){var _ref7;_classCallCheck(this,NeckShading);for(var _len14=arguments.length,data=Array(_len14),_key14=0;_key14<_len14;_key14++){data[_key14]=arguments[_key14];}return _possibleConstructorReturn(this,(_ref7=NeckShading.__proto__||Object.getPrototypeOf(NeckShading)).call.apply(_ref7,[this,NeckShading.defaultProperties].concat(data)));}_createClass(NeckShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var top={x:0,y:ex.neck.top.y};var bot={x:ex.neck.cusp.x,y:ex.neck.cusp.y-3};bot.cp1=da.simpleQuadratic(top,bot,0.3,3);var out={x:ex.neck.top.x+1,y:ex.neck.top.y};return[top,bot,out,top];}}]);return NeckShading;}(da.ShadingPart);NeckShading.defaultProperties={loc:"+neck",layer:da.Layer.GENITALS};var Neck=function(_da$BodyPart2){_inherits(Neck,_da$BodyPart2);function Neck(){var _ref8;_classCallCheck(this,Neck);for(var _len15=arguments.length,data=Array(_len15),_key15=0;_key15<_len15;_key15++){data[_key15]=arguments[_key15];}return _possibleConstructorReturn(this,(_ref8=Neck.__proto__||Object.getPrototypeOf(Neck)).call.apply(_ref8,[this,Neck.defaultProperties].concat(data)));}return Neck;}(da.BodyPart);Object.assign(Neck.prototype,{loc:"neck",forcedSide:null,layer:da.Layer.FRONT,reflect:true,shadingParts:[ChinShading,NeckShading]});// neck will export neck.nape, neck.top, neck.cusp, trapezius.top, collarbone
var NeckHuman=function(_Neck){_inherits(NeckHuman,_Neck);function NeckHuman(){var _ref9;_classCallCheck(this,NeckHuman);for(var _len16=arguments.length,data=Array(_len16),_key16=0;_key16<_len16;_key16++){data[_key16]=arguments[_key16];}return _possibleConstructorReturn(this,(_ref9=NeckHuman.__proto__||Object.getPrototypeOf(NeckHuman)).call.apply(_ref9,[this,NeckHuman.defaultProperties].concat(data)));}_createClass(NeckHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var neck=ex.neck={};neck.nape={x:0,y:ex.skull.y-this.faceLength*0.068};// width depends on musculature
neck.top={x:this.neckWidth*0.1+this.upperMuscle*0.05-this.faceFem*0.01,y:neck.nape.y};neck.cusp={x:neck.top.x+0.2,y:neck.top.y-this.neckLength*0.1};if(this.upperMuscle>12){var s=da.splitCurve(neck.top,neck.cusp,(this.upperMuscle-12)/40);ex.trapezius=s.right.p1;}else{ex.trapezius=da.clone(neck.cusp);}ex.collarbone={x:neck.cusp.x+this.shoulderWidth*0.1+this.upperMuscle*0.01,y:neck.cusp.y-this.torsoLength*0.105+this.upperMuscle*0.05};if(this.upperMuscle>12){ex.collarbone.x+=(this.upperMuscle-12)*0.1;// curve of the trapezius
ex.collarbone.cp1=da.averageQuadratic(null,ex.trapezius,ex.collarbone,0.7,this.upperMuscle*0.02,this.upperMuscle*0.02);}else{ex.collarbone.cp1=da.averageQuadratic(null,neck.cusp,ex.collarbone,0.3,(12-this.upperMuscle)*-0.05,(12-this.upperMuscle)*-0.05);}}return[ex.neck.nape,ex.neck.top,ex.neck.cusp,ex.trapezius,ex.collarbone];}}]);return NeckHuman;}(Neck);return{Neck:Neck,NeckHuman:NeckHuman,ChinShading:ChinShading};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var LeftArmShading=function(_da$ShadingPart5){_inherits(LeftArmShading,_da$ShadingPart5);function LeftArmShading(){var _ref10;_classCallCheck(this,LeftArmShading);for(var _len17=arguments.length,data=Array(_len17),_key17=0;_key17<_len17;_key17++){data[_key17]=arguments[_key17];}return _possibleConstructorReturn(this,(_ref10=LeftArmShading.__proto__||Object.getPrototypeOf(LeftArmShading)).call.apply(_ref10,[this,LeftArmShading.defaultProperties].concat(data)));}_createClass(LeftArmShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods){var _da$shiftPoints3=da.shiftPoints(this.armThickness*0.07,0,ex.elbow.in,ex.armpit);var _da$shiftPoints4=_slicedToArray(_da$shiftPoints3,2);var elbow=_da$shiftPoints4[0];var armpit=_da$shiftPoints4[1];var wrist=da.extractPoint(ex.wrist.in);var perp=da.getPerpendicularVector(da.diff(ex.armpit,wrist));wrist.cp1=da.addVector(armpit,perp,-10-da.clamp(mods.armRotation*0.5,0,100));wrist.cp2=da.addVector(wrist,perp,-8-da.clamp(mods.armRotation*0.5,0,100));da.rotatePoints(armpit,-0.5,wrist.cp1);var inTop=void 0;if(ex.breast){inTop=da.extractPoint(ex.breast.top);inTop.cp1=da.simpleQuadratic(armpit,inTop,0.5,-4);}else{inTop=da.extractPoint(ex.armpit);}return[wrist,elbow,armpit,inTop,wrist];}}]);return LeftArmShading;}(da.ShadingPart);LeftArmShading.defaultProperties={loc:"left arm",layer:da.Layer.ARMS};var RightArmShading=function(_da$ShadingPart6){_inherits(RightArmShading,_da$ShadingPart6);function RightArmShading(){var _ref11;_classCallCheck(this,RightArmShading);for(var _len18=arguments.length,data=Array(_len18),_key18=0;_key18<_len18;_key18++){data[_key18]=arguments[_key18];}return _possibleConstructorReturn(this,(_ref11=RightArmShading.__proto__||Object.getPrototypeOf(RightArmShading)).call.apply(_ref11,[this,RightArmShading.defaultProperties].concat(data)));}_createClass(RightArmShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods){var _da$shiftPoints5=da.shiftPoints(-this.armThickness*0.05,0,ex.deltoids,ex.shoulder,ex.elbow.out);var _da$shiftPoints6=_slicedToArray(_da$shiftPoints5,3);var deltoids=_da$shiftPoints6[0];var shoulder=_da$shiftPoints6[1];var elbow=_da$shiftPoints6[2];var wrist=da.extractPoint(ex.wrist.out);var collarbone=da.extractPoint(ex.collarbone);wrist.cp1={x:elbow.x,y:elbow.y};wrist.cp2={x:wrist.x-2,y:wrist.y};collarbone.cp1={x:ex.wrist.out.x+8-da.clamp(mods.armRotation*0.3,-100,0)+this.upperMuscle,y:ex.wrist.out.y};collarbone.cp2={x:ex.collarbone.x+20-da.clamp(mods.armRotation*0.3,-100,0)+this.upperMuscle+this.armThickness,y:ex.collarbone.y};return[collarbone,deltoids,shoulder,elbow,wrist,collarbone];}}]);return RightArmShading;}(da.ShadingPart);RightArmShading.defaultProperties={loc:"right arm",layer:da.Layer.ARMS};var Arm=function(_da$BodyPart3){_inherits(Arm,_da$BodyPart3);function Arm(){var _ref12;_classCallCheck(this,Arm);for(var _len19=arguments.length,data=Array(_len19),_key19=0;_key19<_len19;_key19++){data[_key19]=arguments[_key19];}return _possibleConstructorReturn(this,(_ref12=Arm.__proto__||Object.getPrototypeOf(Arm)).call.apply(_ref12,[this,Arm.defaultProperties].concat(data)));}return Arm;}(da.BodyPart);Arm.defaultProperties={loc:"arm",layer:da.Layer.ARMS,childParts:["hand"],aboveParts:["leg","torso"],shadingParts:[LeftArmShading,RightArmShading]};var ArmHuman=function(_Arm){_inherits(ArmHuman,_Arm);function ArmHuman(){var _ref13;_classCallCheck(this,ArmHuman);for(var _len20=arguments.length,data=Array(_len20),_key20=0;_key20<_len20;_key20++){data[_key20]=arguments[_key20];}return _possibleConstructorReturn(this,(_ref13=ArmHuman.__proto__||Object.getPrototypeOf(ArmHuman)).call.apply(_ref13,[this,ArmHuman.defaultProperties].concat(data)));}_createClass(ArmHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var wrist=ex.wrist={};// where most arm calculations should be based off of
var armpit=ex.armpit={x:ex.collarbone.x-this.upperMuscle*0.03,y:ex.collarbone.y-this.torsoLength*0.27-this.upperMuscle*0.1};var shoulder=ex.shoulder={x:ex.collarbone.x+this.upperMuscle*0.2+this.armThickness*0.1,y:ex.collarbone.y-10-this.upperMuscle*0.1};shoulder.cp1={x:shoulder.x,y:ex.collarbone.y-3};shoulder.cp2={x:shoulder.x-0.5+this.upperMuscle*0.02,y:shoulder.y+4};var elbow=ex.elbow={};elbow.out={x:armpit.x+5+this.upperMuscle*0.17+this.armThickness*0.05,y:shoulder.y-this.armLength*0.45};wrist.out={x:armpit.x+10+this.upperMuscle*0.01+this.armThickness*0.035,y:elbow.out.y-this.armLength*0.50,cp1:{x:elbow.out.x,y:elbow.out.y-2}};wrist.out.cp2={x:wrist.out.x-0.5,y:wrist.out.y+3};// hand gets drawn here -----
wrist.in={x:armpit.x+9,y:wrist.out.y-1};elbow.in={x:elbow.out.x-3-this.upperMuscle*0.07-this.armThickness*0.05,y:elbow.out.y+2,cp1:{x:wrist.in.x-1,y:wrist.in.y+7}};// lower arm curve
elbow.in.cp2={x:elbow.in.x+0.5,y:elbow.in.y-7};// upper arm curve
ex.armpit.cp1={x:elbow.in.x-0.5,y:elbow.in.y+2};ex.armpit.cp2={x:ex.armpit.x,y:ex.armpit.y-2};if(this.upperMuscle>10){var bulk=this.upperMuscle-10;var deltoids=ex.deltoids={x:shoulder.x-bulk*0.12,y:shoulder.y-bulk*0.2};deltoids.cp1=da.extractPoint(shoulder.cp1);deltoids.cp2=da.extractPoint(shoulder.cp2);deltoids.cp1.x+=bulk*0.03;deltoids.cp2.x+=bulk*0.05;var sp=da.splitCurve(ex.collarbone,ex.deltoids,0.85);// remove curve
shoulder=ex.shoulder=sp.right.p1;shoulder.cp1=sp.right.cp2;shoulder.cp2=sp.right.cp1;// add triceps
elbow.out.cp1={x:shoulder.x+bulk*0.08,y:shoulder.y-bulk*0.1};elbow.out.cp2={x:elbow.out.x,y:elbow.out.y+bulk*0.07};// biceps
armpit.cp1.x-=bulk*0.15;armpit.cp1.y+=bulk*0.1;armpit.cp2.x-=bulk*0.02;armpit.cp2.y-=bulk*0.1;// forearm
elbow.in.cp2.x-=bulk*0.15;elbow.in.cp2.y-=bulk*0.05;elbow.in.cp1.y+=bulk*0.1;wrist.out.cp1.x+=bulk*0.1;wrist.out.cp1.y-=bulk*0.1;wrist.out.cp2.x+=bulk*0.1;wrist.out.cp2.y+=bulk*0.1;wrist.in.x-=bulk*0.03;}// rotate arms
da.rotatePoints(elbow.in,mods.armRotation*Math.PI/180,elbow.in,elbow.out,wrist.in,wrist.out);elbow.in.x-=Math.abs(mods.armRotation)*0.02;elbow.in.y-=mods.armRotation*0.01;if(mods.armRotation<-20){var inwardRotation=-20-mods.armRotation;elbow.in.x-=inwardRotation*0.05;elbow.in.y-=inwardRotation*0.17;}}return[ex.collarbone,ex.deltoids,ex.shoulder,ex.elbow.out,ex.wrist.out,// ex.wrist.out,
{child:"hand"},ex.wrist.in,ex.elbow.in,ex.armpit];}}]);return ArmHuman;}(Arm);ArmHuman.defaultProperties={};return{Arm:Arm,LeftArmShading:LeftArmShading,RightArmShading:RightArmShading,ArmHuman:ArmHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Hand=function(_da$BodyPart4){_inherits(Hand,_da$BodyPart4);function Hand(){var _ref14;_classCallCheck(this,Hand);for(var _len21=arguments.length,data=Array(_len21),_key21=0;_key21<_len21;_key21++){data[_key21]=arguments[_key21];}return _possibleConstructorReturn(this,(_ref14=Hand.__proto__||Object.getPrototypeOf(Hand)).call.apply(_ref14,[this,Hand.defaultProperties].concat(data)));}return Hand;}(da.BodyPart);Hand.defaultProperties={loc:"hand",layer:da.Layer.ARMS};// hand exports hand.knuckle, hand.tip, hand.palm, thumb.tip, thumb.out
var HandHuman=function(_Hand){_inherits(HandHuman,_Hand);function HandHuman(){var _ref15;_classCallCheck(this,HandHuman);for(var _len22=arguments.length,data=Array(_len22),_key22=0;_key22<_len22;_key22++){data[_key22]=arguments[_key22];}return _possibleConstructorReturn(this,(_ref15=HandHuman.__proto__||Object.getPrototypeOf(HandHuman)).call.apply(_ref15,[this,HandHuman.defaultProperties].concat(data)));}_createClass(HandHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){da.requirePart("wrist",ex);if(calculate){var hand=ex.hand={};var thumb=ex.thumb={};// anchor point where all drawing derives from
var anchor=ex.wrist.out;var size=this.handSize*0.1+this.upperMuscle*0.04;hand.knuckle={x:anchor.x+size*0.15,y:anchor.y-size*0.6};hand.tip={x:anchor.x+size*0.1,y:hand.knuckle.y-2-size*0.6};hand.tip.cp1=da.averageQuadratic(null,hand.knuckle,hand.tip,0.7,1,-0.2);hand.palm={x:anchor.x*0.65+ex.wrist.in.x*0.35,y:hand.knuckle.y-size*0.1,cp1:{x:hand.tip.x-0.5-size*0.15,//1.5 - size * 0.05,
y:hand.tip.y+size*0.1}};hand.palm.cp2={x:hand.palm.x+1+size*0.2,y:hand.palm.y-1-size*0.2};thumb.tip={x:hand.palm.x-size*0.03,y:hand.palm.y-1-size*0.25,cp1:{x:hand.palm.x-size*0.1,y:hand.palm.y-size*0.1}};thumb.tip.cp2={x:thumb.tip.x+size*0.1,y:thumb.tip.y+size*0.1};thumb.out={x:ex.wrist.in.x+0.1,y:ex.wrist.in.y-size*0.2,cp1:{x:thumb.tip.x-size*0.15,y:thumb.tip.y+size*0.2}};thumb.out.cp2={x:thumb.out.x-size*0.05,y:thumb.out.y-size*0.2};// continued with arm rotation
// rotate arms
da.rotatePoints(anchor,(mods.armRotation+mods.handRotation)*Math.PI/180,hand.knuckle,hand.tip,hand.palm,thumb.tip,thumb.out);// ball up into fist
if(this.upperMuscle>12){var bulk=this.upperMuscle-12;hand.knuckle.y-=bulk*0.05;thumb.tip=da.adjustPoint(thumb.tip,-bulk*0.03,bulk*0.05);hand.tip.y+=bulk*0.05;thumb.out.cp1.x-=bulk*0.05;thumb.out.cp2.x-=bulk*0.02;da.rotatePoints(hand.knuckle,-bulk*0.035,hand.tip,hand.palm);var sp=da.splitCurve(hand.knuckle,hand.tip,0.6);hand.fist=sp.left.p2;hand.fist.cp1=sp.left.cp1;hand.tip.cp1=sp.right.cp1;da.rotatePoints(hand.fist,-bulk*0.05,hand.tip,hand.palm.cp1,hand.palm.cp2);hand.palm.x-=bulk*0.07;if(this.upperMuscle>25){hand.tip=da.extractPoint(thumb.tip);hand.palm=da.extractPoint(hand.palm);thumb.out=da.extractPoint(thumb.out);thumb.knuckle=da.averagePoint(thumb.tip,thumb.out);thumb.knuckle.x-=bulk*0.06;}da.rotatePoints(anchor,-bulk*0.01,hand.tip,hand.first,hand.palm,thumb.tip,thumb.knuckle);}}return[ex.wrist.out,ex.hand.knuckle,ex.hand.fist,ex.hand.tip,ex.hand.palm,ex.thumb.tip,ex.thumb.knuckle,ex.thumb.out,ex.wrist.in];}}]);return HandHuman;}(Hand);HandHuman.defaultProperties={};return{Hand:Hand,HandHuman:HandHuman};}(da));/*
 global da
 */"use strict";Object.assign(da.Part,function(da){var TorsoShading=function(_da$ShadingPart7){_inherits(TorsoShading,_da$ShadingPart7);function TorsoShading(){var _ref16;_classCallCheck(this,TorsoShading);for(var _len23=arguments.length,data=Array(_len23),_key23=0;_key23<_len23;_key23++){data[_key23]=arguments[_key23];}return _possibleConstructorReturn(this,(_ref16=TorsoShading.__proto__||Object.getPrototypeOf(TorsoShading)).call.apply(_ref16,[this,TorsoShading.defaultProperties].concat(data)));}_createClass(TorsoShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var armpit=da.adjustPoint(ex.armpit,-2-this.shoulderWidth*0.03,-5);var waist=da.adjustPoint(ex.waist,-1-this.waistWidth*0.03,-4);var hip=da.adjustPoint(ex.hip,-3-this.hipWidth*0.04,0);hip.cp1=da.adjustPoint(hip.cp1,this.hipWidth*0.02,0);var outBot={x:ex.hip.x+1,y:ex.hip.y};var outMid={x:ex.waist.x+1,y:ex.waist.y};var outTop={x:ex.armpit.x+1,y:ex.armpit.y};armpit.cp1=da.simpleQuadratic(outTop,armpit,0.5,-4);return[armpit,waist,hip,outBot,outMid,outTop,armpit];}}]);return TorsoShading;}(da.ShadingPart);TorsoShading.defaultProperties={loc:"+torso",layer:da.Layer.FRONT};var Torso=function(_da$BodyPart5){_inherits(Torso,_da$BodyPart5);function Torso(){var _ref17;_classCallCheck(this,Torso);for(var _len24=arguments.length,data=Array(_len24),_key24=0;_key24<_len24;_key24++){data[_key24]=arguments[_key24];}return _possibleConstructorReturn(this,(_ref17=Torso.__proto__||Object.getPrototypeOf(Torso)).call.apply(_ref17,[this,Torso.defaultProperties].concat(data)));}return Torso;}(da.BodyPart);Torso.defaultProperties={loc:"torso",forcedSide:null,reflect:true,layer:da.Layer.FRONT,shadingParts:[TorsoShading]};var TorsoHuman=function(_Torso){_inherits(TorsoHuman,_Torso);function TorsoHuman(){var _ref18;_classCallCheck(this,TorsoHuman);for(var _len25=arguments.length,data=Array(_len25),_key25=0;_key25<_len25;_key25++){data[_key25]=arguments[_key25];}return _possibleConstructorReturn(this,(_ref18=TorsoHuman.__proto__||Object.getPrototypeOf(TorsoHuman)).call.apply(_ref18,[this,TorsoHuman.defaultProperties].concat(data)));}_createClass(TorsoHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){// remaining height...
da.fillerDefinition(ex,"armpit",{x:ex.collarbone.x-this.upperMuscle*0.03,y:ex.collarbone.y-12-this.upperMuscle*0.1});if(ex.hasOwnProperty("elbow")){var sp=da.splitCurve(ex.elbow.in,ex.armpit,da.clamp(1.2-this.upperMuscle/40,0.6,1));ex.lat=sp.right.p1;ex.lat.cp1=sp.right.cp2;ex.lat.cp2=sp.right.cp1;}else{da.fillerDefinition(ex,"lat",{x:ex.armpit.x+0.5,y:ex.armpit.y-3});}var shoulderCausedTorsoWidth=(this.shoulderWidth-80)*0.1;ex.waist={x:this.waistWidth*0.1+shoulderCausedTorsoWidth*0.7,y:ex.armpit.y-this.torsoLength*0.33,cp1:{x:ex.armpit.x,y:ex.armpit.y-5}};ex.waist.cp2={x:ex.waist.x,y:ex.waist.y+this.waistWidth*0.01+shoulderCausedTorsoWidth*0.1};ex.hip={x:this.hipWidth*0.1+shoulderCausedTorsoWidth*0.5,y:ex.waist.y-this.torsoLength*0.32,cp1:{x:ex.waist.x,y:ex.waist.y-this.torsoLength*0.2}};ex.hip.cp2={x:ex.hip.x-this.buttFullness*0.03-this.legFem*0.05,y:ex.hip.y+4+this.buttFullness*0.015};ex.pelvis={x:0,y:ex.hip.y-this.torsoLength*0.05};}// normal, can be closed by leg
if(ex.hasOwnProperty("knee")){return[ex.armpit,ex.lat,ex.waist,ex.hip,da.endPoint];}else{return[ex.armpit,ex.lat,ex.waist,ex.hip,ex.groin];}}}]);return TorsoHuman;}(Torso);return{Torso:Torso,TorsoHuman:TorsoHuman,TorsoShading:TorsoShading};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var RightLegShading=function(_da$ShadingPart8){_inherits(RightLegShading,_da$ShadingPart8);function RightLegShading(){var _ref19;_classCallCheck(this,RightLegShading);for(var _len26=arguments.length,data=Array(_len26),_key26=0;_key26<_len26;_key26++){data[_key26]=arguments[_key26];}return _possibleConstructorReturn(this,(_ref19=RightLegShading.__proto__||Object.getPrototypeOf(RightLegShading)).call.apply(_ref19,[this,RightLegShading.defaultProperties].concat(data)));}_createClass(RightLegShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var hip=da.adjustPoint(ex.hip,-3-this.hipWidth*0.04,0);var thighOut=da.adjustPoint(ex.thigh.out,-7-this.legFullness*0.2,0);// drawing the kneecap
var kneeOut=da.averagePoint(ex.knee.out,ex.knee.in);kneeOut.cp1=da.getSmoothControlPoint(thighOut,1);kneeOut.cp2={x:kneeOut.x+5,y:kneeOut.y};var sp=da.splitCurve(thighOut,kneeOut,0.5);var kneeCap=sp.left.p2;kneeCap.cp1=sp.left.cp1;kneeCap.cp2=sp.left.cp2;kneeOut.cp1={x:kneeCap.x,y:kneeCap.y-3};var kneeBot={x:kneeOut.x*0.7+ex.knee.out.x*0.3,y:kneeOut.y-2};kneeBot.cp1={x:kneeOut.x-2,y:kneeOut.y-2};var calfOut=da.adjustPoint(ex.calf.out,-6-this.legFullness*0.1,0);calfOut.cp1={x:kneeBot.x+1,y:kneeBot.y-5};var ankleOut=da.adjustPoint(ex.ankle.out,-2,3);ankleOut.cp1=da.getSmoothControlPoint(calfOut,1);var outBot={x:ex.ankle.out.x+20,y:ex.ankle.out.y};var outTop={x:ex.hip.x+20,y:ex.hip.y};return[hip,thighOut,kneeCap,kneeOut,kneeBot,calfOut,ankleOut,da.extractPoint(ex.ankle.out),outBot,outTop,hip];}}]);return RightLegShading;}(da.ShadingPart);RightLegShading.defaultProperties={loc:"right leg",layer:da.Layer.FRONT};var LeftLegShading=function(_da$ShadingPart9){_inherits(LeftLegShading,_da$ShadingPart9);function LeftLegShading(){var _ref20;_classCallCheck(this,LeftLegShading);for(var _len27=arguments.length,data=Array(_len27),_key27=0;_key27<_len27;_key27++){data[_key27]=arguments[_key27];}return _possibleConstructorReturn(this,(_ref20=LeftLegShading.__proto__||Object.getPrototypeOf(LeftLegShading)).call.apply(_ref20,[this,LeftLegShading.defaultProperties].concat(data)));}_createClass(LeftLegShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){// const hip = da.connectEndPoints(ex.thigh.top, ex.hip);
// const foldDepth = da.clamp(this.legFem / 55 - this.lowerMuscle / 150 - 0.1, 0, 1);
// const sp = da.splitCurve(ex.thigh.top, hip, foldDepth);
// ex.thigh.fold = sp.left.p2;
// ex.thigh.fold.cp1 = sp.left.cp1;
var ankleIn=da.adjustPoint(ex.ankle.in,3,2);var calfIn=da.adjustPoint(ex.calf.in,10-this.legFem*0.15,0);calfIn.cp1.x-=5;// give hint of kneecap
var kneeBot={x:ex.knee.in.x*0.7+ex.knee.out.x*0.3,y:ex.knee.in.y-3};kneeBot.cp1=da.getSmoothControlPoint(calfIn,1);kneeBot.cp2={x:kneeBot.x+5,y:kneeBot.y-2};var kneeTop=da.adjustPoint(ex.knee.intop,3,2);kneeTop.cp1={x:kneeBot.x-3,y:kneeBot.y+3};kneeTop.cp2={x:kneeTop.x-1,y:kneeTop.y-2};var sp=da.splitCurve(ex.thigh.top,ex.thigh.fold,0.8);var thighTop=sp.left.p2;thighTop.cp1=da.simpleQuadratic(kneeTop,thighTop,0.5,2);var inMid={x:ex.knee.in.x-2,y:ex.knee.in.y};inMid.cp1=da.simpleQuadratic(thighTop,inMid,0.35,-8-this.legFullness*0.3-this.legFem*0.1);var ankleBot=da.extractPoint(ex.ankle.in);ankleBot.cp1={x:ex.calf.in.x-3,y:ex.calf.in.y};return[ankleBot,ankleIn,calfIn,kneeBot,kneeTop,thighTop,inMid,ankleBot];}}]);return LeftLegShading;}(da.ShadingPart);LeftLegShading.defaultProperties={loc:"left leg",layer:da.Layer.FRONT};var Leg=function(_da$BodyPart6){_inherits(Leg,_da$BodyPart6);function Leg(){var _ref21;_classCallCheck(this,Leg);for(var _len28=arguments.length,data=Array(_len28),_key28=0;_key28<_len28;_key28++){data[_key28]=arguments[_key28];}return _possibleConstructorReturn(this,(_ref21=Leg.__proto__||Object.getPrototypeOf(Leg)).call.apply(_ref21,[this,Leg.defaultProperties].concat(data)));}return Leg;}(da.BodyPart);Leg.defaultProperties={loc:"leg",layer:da.Layer.FRONT,childParts:["feet"],shadingParts:[RightLegShading,LeftLegShading]};var LegHuman=function(_Leg){_inherits(LegHuman,_Leg);function LegHuman(){var _ref22;_classCallCheck(this,LegHuman);for(var _len29=arguments.length,data=Array(_len29),_key29=0;_key29<_len29;_key29++){data[_key29]=arguments[_key29];}return _possibleConstructorReturn(this,(_ref22=LegHuman.__proto__||Object.getPrototypeOf(LegHuman)).call.apply(_ref22,[this,LegHuman.defaultProperties].concat(data)));}_createClass(LegHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var scale=this.legLength*0.01;var knee=ex.knee={};knee.out={x:12-da.clamp(this.legFem*0.3,0,9)+this.hipWidth*0.04+this.legFullness*0.03,y:this.legLength*0.5,cp1:{x:ex.hip.x+this.legFem*0.1+this.buttFullness*0.15+this.legFullness*0.1-this.lowerMuscle*0.05,y:ex.hip.y-7-this.legFem*0.1-this.buttFullness*0.1-this.legFullness*0.1}};knee.out.cp2={x:knee.out.x+4+this.legFem*0.1-this.lowerMuscle*0.05,y:knee.out.y+this.legLength*0.25};// different stance with calfs being more prominant
var bulk=this.lowerMuscle-10;var stanceMusculature=this.legFem<25&&bulk>0;if(stanceMusculature){knee.out.cp1.x+=bulk*0.05;knee.out.cp1.y-=bulk*0.05;knee.out.cp2.x+=bulk*0.2;knee.out.cp2.y+=bulk*0.5;ex.hip.cp2.x+=bulk*0.03;}var sp=da.splitCurve(ex.hip,knee.out,0.55);var thigh=ex.thigh=ex.thigh||{};thigh.out=sp.left.p2;thigh.out.cp1=sp.left.cp1;thigh.out.cp2=sp.left.cp2;// reassign other draw points
knee.out.cp1=sp.right.cp1;knee.out.cp2=sp.right.cp2;ex.ankle=ex.ankle||{};ex.ankle.out={x:knee.out.x-0.5-this.legFullness*0.05,y:8};var calf=ex.calf=ex.calf||{};calf.out={x:knee.out.x+(da.clamp(this.legFem*0.1,0,3)+da.clamp(this.legFullness*0.005,0,3))*scale,y:knee.out.y-this.legLength*0.20+this.lowerMuscle*0.1,cp1:{x:knee.out.x,y:knee.out.y-this.legLength*0.1+da.clamp(this.legFem*0.05,0,6)}};calf.out.cp2={x:calf.out.x,y:calf.out.y+this.legLength*0.10};ex.ankle.out.cp1={x:calf.out.x,y:calf.out.y-this.legLength*0.12};ex.ankle.out.cp2={x:ex.ankle.out.x-1,y:ex.ankle.out.y+5};// feet ------------
ex.ankle.in={x:ex.ankle.out.x-5+this.legFem*0.02,y:ex.ankle.out.y+0.5};calf.in={x:calf.out.x-9+this.legFem*0.015-this.legFullness*0.05,y:calf.out.y-this.legFem*0.1};var stanceMasculinity=15-this.legFem;if(stanceMasculinity>0){calf.in.x-=stanceMasculinity*0.02;}else{calf.in.x+=this.legFem*0.02;}calf.in.cp1={x:ex.ankle.in.x+0.5,y:ex.ankle.in.y+(1.3-this.legFem*0.03)*this.legLength*0.1};calf.in.cp2={x:calf.in.x+this.legFem*0.02,y:calf.in.y+(this.legFem*0.01-1)*this.legLength*0.1};if(stanceMasculinity>0){calf.in.cp2.x+=stanceMasculinity*0.01;}knee.in={x:knee.out.x-8-this.legFullness*0.05,y:knee.out.y};knee.in.cp1=da.getSmoothControlPoint(calf.in,0.7);knee.intop={x:knee.in.x+0.2-this.legFem*0.01,y:knee.in.y+3};if(stanceMusculature){knee.in.x-=bulk*0.04;knee.intop.x-=bulk*0.04;}knee.in.cp2={x:knee.in.x,y:knee.in.y-this.legLength*0.09};thigh.top={x:1.6,y:ex.hip.y-this.legLength*0.15,cp1:{x:knee.in.x,y:knee.in.y+this.legLength*0.07}};thigh.top.cp2={x:2-this.buttFullness*0.03-this.legFem*0.04,y:thigh.top.y-this.legLength*0.12};// different stance with calfs being more prominant
if(stanceMusculature){// bulk up calf
knee.in.cp2.x-=bulk*0.01;knee.in.cp2.y+=bulk*0.05;knee.in.cp1.x-=bulk*0.1;calf.in.x-=bulk*0.1;calf.in.y+=bulk*0.1;calf.in.cp2.x-=bulk*0.1;calf.out.x+=bulk*0.05;calf.out.cp2.x+=bulk*0.05;calf.out.cp1.x+=bulk*0.02;calf.out.cp1.y+=bulk*0.1;// tighten up inner thigh
thigh.top.cp2.x-=bulk*0.08;thigh.top.cp2.y-=bulk*0.08;thigh.top.cp1.y+=bulk*0.2;}// split into inner thigh
sp=da.splitCurve(knee.in,thigh.top,0.55);thigh.in=sp.left.p2;thigh.in.cp1=sp.left.cp1;thigh.in.cp2=sp.left.cp2;// reassign other draw points
thigh.top.cp1=sp.right.cp1;thigh.top.cp2=sp.right.cp2;}return[da.extractPoint(ex.hip),ex.thigh.out,ex.knee.out,ex.calf.out,ex.ankle.out,{child:"feet"},ex.ankle.in,ex.calf.in,ex.knee.in,ex.knee.intop,ex.thigh.in,ex.thigh.top];}}]);return LegHuman;}(Leg);LegHuman.defaultProperties={};return{Leg:Leg,LeftLegShading:LeftLegShading,RightLegShading:RightLegShading,LegHuman:LegHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";// classic mixin pattern
var Feet=function(_da$BodyPart7){_inherits(Feet,_da$BodyPart7);function Feet(){var _ref23;_classCallCheck(this,Feet);for(var _len30=arguments.length,data=Array(_len30),_key30=0;_key30<_len30;_key30++){data[_key30]=arguments[_key30];}return _possibleConstructorReturn(this,(_ref23=Feet.__proto__||Object.getPrototypeOf(Feet)).call.apply(_ref23,[this,Feet.defaultProperties].concat(data)));}return Feet;}(da.BodyPart);Feet.defaultProperties={loc:"feet",layer:da.Layer.FRONT};var FeetHuman=function(_Feet){_inherits(FeetHuman,_Feet);function FeetHuman(){var _ref24;_classCallCheck(this,FeetHuman);for(var _len31=arguments.length,data=Array(_len31),_key31=0;_key31<_len31;_key31++){data[_key31]=arguments[_key31];}return _possibleConstructorReturn(this,(_ref24=FeetHuman.__proto__||Object.getPrototypeOf(FeetHuman)).call.apply(_ref24,[this,FeetHuman.defaultProperties].concat(data)));}_createClass(FeetHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){// expects ankle.out to exist
ex.ankle.outbot={x:ex.ankle.out.x+0.2,y:ex.ankle.out.y-2.5};ex.ankle.outbot.cp1=da.averageQuadratic(null,ex.ankle.out,ex.ankle.outbot,0.5,0.5,0.5);var toe=ex.toe=ex.toe||{};toe.center={x:ex.ankle.out.x*0.5+ex.ankle.in.x*0.5,y:1+this.legFem*0.02-mods.feetLength*0.1};toe.out={x:toe.center.x+4-this.legFem*0.04+mods.feetWidth*0.1,y:toe.center.y,cp1:{x:ex.ankle.outbot.x,y:ex.ankle.outbot.y}};toe.out.cp2={x:toe.out.x+this.legFem*0.02,y:toe.out.y+1};toe.in={x:toe.center.x-3.3-this.legFem*0.02-mods.feetWidth*0.1,y:toe.out.y-2-mods.feetLength*0.1};toe.in.cp1={x:toe.out.x+1,y:toe.out.y-1-mods.feetBias*0.1*(toe.out.y-toe.in.y)};toe.in.cp2={x:toe.in.x+2.5,y:toe.in.y-0.5-this.legFem*0.02};ex.ankle.inbot={x:toe.center.x-4+this.legFem*0.03,y:ex.ankle.outbot.y-0.5+this.legFem*0.03,cp1:{x:toe.in.x-1.5,y:toe.in.y+1.5}};ex.ankle.inbot.cp2={x:ex.ankle.inbot.x+1,y:ex.ankle.inbot.y-2};// define for leg
ex.ankle.in.cp1=da.averageQuadratic(null,ex.ankle.inbot,ex.ankle.in,0.3,-0.5,0.5);}return[ex.ankle.outbot,ex.toe.out,ex.toe.in,ex.ankle.inbot];}}]);return FeetHuman;}(Feet);FeetHuman.defaultProperties={};var HoofHorse=function(_Feet2){_inherits(HoofHorse,_Feet2);function HoofHorse(){var _ref25;_classCallCheck(this,HoofHorse);for(var _len32=arguments.length,data=Array(_len32),_key32=0;_key32<_len32;_key32++){data[_key32]=arguments[_key32];}return _possibleConstructorReturn(this,(_ref25=HoofHorse.__proto__||Object.getPrototypeOf(HoofHorse)).call.apply(_ref25,[this,HoofHorse.defaultProperties].concat(data)));}_createClass(HoofHorse,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){// expects ankle.out to exist
ex.ankle.outbot={x:ex.ankle.out.x+0.2,y:ex.ankle.out.y-2.5};ex.ankle.outbot.cp1=da.averageQuadratic(null,ex.ankle.out,ex.ankle.outbot,0.5,0.5,0.5);ex.toe=ex.toe||{};ex.toe.out={x:ex.ankle.outbot.x+3-this.legFem*0.07,y:1+this.legFem*0.02,cp1:{x:ex.ankle.outbot.x,y:ex.ankle.outbot.y}};ex.toe.out.cp2={x:ex.toe.out.x+this.legFem*0.02,y:ex.toe.out.y+1};ex.toe.in={x:ex.toe.out.x-7+this.legFem*0.05,y:ex.toe.out.y-2,cp1:{x:ex.toe.out.x+1,y:ex.toe.out.y-1}};ex.toe.in.cp2={x:ex.toe.in.x+2.5,y:ex.toe.in.y-0.5-this.legFem*0.02};ex.ankle.inbot={x:ex.toe.in.x-0.5+this.legFem*0.02,y:ex.ankle.outbot.y-0.5+this.legFem*0.03,cp1:{x:ex.toe.in.x-1.5,y:ex.toe.in.y+1.5}};ex.ankle.inbot.cp2={x:ex.ankle.inbot.x+1,y:ex.ankle.inbot.y-2};// define for leg
ex.ankle.in.cp1=da.averageQuadratic(null,ex.ankle.inbot,ex.ankle.in,0.3,-0.5,0.5);}return[ex.ankle.outbot,ex.toe.out,ex.toe.in,ex.ankle.inbot];}}]);return HoofHorse;}(Feet);HoofHorse.defaultProperties={uncoverable:true};return{Feet:Feet,FeetHuman:FeetHuman,HoofHorse:HoofHorse};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var GroinShading=function(_da$ShadingPart10){_inherits(GroinShading,_da$ShadingPart10);function GroinShading(){var _ref26;_classCallCheck(this,GroinShading);for(var _len33=arguments.length,data=Array(_len33),_key33=0;_key33<_len33;_key33++){data[_key33]=arguments[_key33];}return _possibleConstructorReturn(this,(_ref26=GroinShading.__proto__||Object.getPrototypeOf(GroinShading)).call.apply(_ref26,[this,GroinShading.defaultProperties].concat(data)));}_createClass(GroinShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var sp=da.splitCurve(ex.thigh.top,ex.thigh.fold,0.2);var right=sp.left.p2;var groin=da.extractPoint(ex.groin);groin.cp1=da.simpleQuadratic(right,groin,0.5,2);sp=da.splitCurve(ex.thigh.top,ex.thigh.fold,0.8);var left=da.reflectPoint(sp.left.p2);left.cp1=da.reflectPoint(sp.left.cp1);if(sp.left.cp2){left.cp2=da.reflectPoint(sp.left.cp2);}var thighTop=da.reflectPoint(ex.thigh.top);right.cp1=da.simpleQuadratic(left,right,0.7,-4);return[right,groin,thighTop,left,right];}}]);return GroinShading;}(da.ShadingPart);GroinShading.defaultProperties={loc:"groin",layer:da.Layer.FRONT};var Groin=function(_da$BodyPart8){_inherits(Groin,_da$BodyPart8);function Groin(){var _ref27;_classCallCheck(this,Groin);for(var _len34=arguments.length,data=Array(_len34),_key34=0;_key34<_len34;_key34++){data[_key34]=arguments[_key34];}return _possibleConstructorReturn(this,(_ref27=Groin.__proto__||Object.getPrototypeOf(Groin)).call.apply(_ref27,[this,Groin.defaultProperties].concat(data)));}return Groin;}(da.BodyPart);Object.assign(Groin.prototype,{loc:"groin",forcedSide:null,reflect:true,layer:da.Layer.FRONT,belowParts:["parts torso"],shadingParts:[GroinShading]});var GroinHuman=function(_Groin){_inherits(GroinHuman,_Groin);function GroinHuman(){var _ref28;_classCallCheck(this,GroinHuman);for(var _len35=arguments.length,data=Array(_len35),_key35=0;_key35<_len35;_key35++){data[_key35]=arguments[_key35];}return _possibleConstructorReturn(this,(_ref28=GroinHuman.__proto__||Object.getPrototypeOf(GroinHuman)).call.apply(_ref28,[this,GroinHuman.defaultProperties].concat(data)));}_createClass(GroinHuman,[{key:"getLineWidth",value:function getLineWidth(){return 0;}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){// remaining height...
var torsoLength=this.height*0.85-this.legLength;da.fillerDefinition(ex,"thigh");da.fillerDefinition(ex.thigh,"top",{x:1.6,y:ex.hip.y-this.legLength*0.15});ex.groin={x:0,y:ex.thigh.top.y-torsoLength*0.015};ex.groin.top={x:ex.thigh.top.x+5,y:ex.thigh.top.y+1.1};}// covered by something else, don't show
return[ex.groin.top,ex.groin,{fillOnly:[ex.neck.nape,ex.groin.top]}];}}]);return GroinHuman;}(Groin);GroinHuman.defaultProperties={};return{Groin:Groin,GroinShading:GroinShading,GroinHuman:GroinHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Butt=function(_da$BodyPart9){_inherits(Butt,_da$BodyPart9);function Butt(){var _ref29;_classCallCheck(this,Butt);for(var _len36=arguments.length,data=Array(_len36),_key36=0;_key36<_len36;_key36++){data[_key36]=arguments[_key36];}return _possibleConstructorReturn(this,(_ref29=Butt.__proto__||Object.getPrototypeOf(Butt)).call.apply(_ref29,[this,Butt.defaultProperties].concat(data)));}return Butt;}(da.BodyPart);Butt.defaultProperties={loc:"butt",reflect:true,layer:da.Layer.BACK};var ButtHuman=function(_Butt){_inherits(ButtHuman,_Butt);function ButtHuman(){var _ref30;_classCallCheck(this,ButtHuman);for(var _len37=arguments.length,data=Array(_len37),_key37=0;_key37<_len37;_key37++){data[_key37]=arguments[_key37];}return _possibleConstructorReturn(this,(_ref30=ButtHuman.__proto__||Object.getPrototypeOf(ButtHuman)).call.apply(_ref30,[this,ButtHuman.defaultProperties].concat(data)));}_createClass(ButtHuman,[{key:"getLineWidth",value:function getLineWidth(avatar){return da.clamp(0.5+avatar.dim.buttFullness*0.05,0.5,1.5);}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){ex.butt={};ex.butt.in={x:0.5,y:ex.groin.y-this.buttFullness*0.01};if(!ex.thigh.out){return[];}ex.butt.out={x:ex.thigh.out.x-2,y:ex.butt.in.y+1};ex.butt.out.cp1={x:ex.butt.in.x*0.7+ex.butt.out.x*0.3-this.buttFullness*0.10,y:ex.butt.in.y-this.buttFullness*0.35};ex.butt.out.cp2={x:ex.butt.in.x*0.3+ex.butt.out.x*0.7+this.buttFullness*0.12,y:ex.butt.out.y-2-this.buttFullness*0.2};ex.butt.in.cp1={x:ex.butt.out.cp2.x,y:ex.butt.out.y+this.buttFullness*0.2};ex.butt.in.cp2={x:ex.butt.in.x,y:ex.butt.in.y+3+this.buttFullness*0.2};}return[ex.butt.in,ex.butt.out,ex.butt.in];}}]);return ButtHuman;}(Butt);ButtHuman.defaultProperties={};return{Butt:Butt,ButtHuman:ButtHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var LeftBreastShading=function(_da$ShadingPart11){_inherits(LeftBreastShading,_da$ShadingPart11);function LeftBreastShading(){var _ref31;_classCallCheck(this,LeftBreastShading);for(var _len38=arguments.length,data=Array(_len38),_key38=0;_key38<_len38;_key38++){data[_key38]=arguments[_key38];}return _possibleConstructorReturn(this,(_ref31=LeftBreastShading.__proto__||Object.getPrototypeOf(LeftBreastShading)).call.apply(_ref31,[this,LeftBreastShading.defaultProperties].concat(data)));}_createClass(LeftBreastShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){if(ex.hasOwnProperty("breast")===false){return[];}var top={x:ex.breast.cleavage.x+0.5,y:ex.breast.cleavage.y+this.breastSize*0.6};var bot=da.extractPoint(ex.breast.bot);var _da$shiftPoints7=da.shiftPoints(0,-1,ex.breast.in,ex.breast.cleavage);var _da$shiftPoints8=_slicedToArray(_da$shiftPoints7,2);var inner=_da$shiftPoints8[0];var cleavage=_da$shiftPoints8[1];// inner to top
top.cp1=da.simpleQuadratic(cleavage,top,0.5,1.2);bot.cp1={x:top.x+5+this.breastSize*0.25,y:top.y-this.breastSize*0.1};bot.cp2={x:bot.x,y:bot.y+this.breastSize*0.2};return[bot,inner,cleavage,top,bot];}}]);return LeftBreastShading;}(da.ShadingPart);LeftBreastShading.defaultProperties={loc:"chest",layer:da.Layer.GENITALS,forcedSide:da.Part.LEFT};var RightBreastShading=function(_da$ShadingPart12){_inherits(RightBreastShading,_da$ShadingPart12);function RightBreastShading(){var _ref32;_classCallCheck(this,RightBreastShading);for(var _len39=arguments.length,data=Array(_len39),_key39=0;_key39<_len39;_key39++){data[_key39]=arguments[_key39];}return _possibleConstructorReturn(this,(_ref32=RightBreastShading.__proto__||Object.getPrototypeOf(RightBreastShading)).call.apply(_ref32,[this,RightBreastShading.defaultProperties].concat(data)));}_createClass(RightBreastShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){if(ex.hasOwnProperty("breast")===false){return[];}var top=da.extractPoint(ex.breast.top);var bot=da.extractPoint(ex.breast.bot);var _da$shiftPoints9=da.shiftPoints(-this.breastSize*0.25,0,ex.breast.tip,ex.breast.bot.cp1,ex.breast.bot.cp2);var _da$shiftPoints10=_slicedToArray(_da$shiftPoints9,3);var tip=_da$shiftPoints10[0];var cp1=_da$shiftPoints10[1];var cp2=_da$shiftPoints10[2];bot.cp1=cp1;bot.cp2=cp2;top.cp1={x:bot.x+5+this.breastSize*0.32,y:bot.y-7};top.cp2={x:top.x+10+this.breastSize*0.2,y:top.y-5-this.breastSize*0.6};return[top,tip,bot,top];}}]);return RightBreastShading;}(da.ShadingPart);RightBreastShading.defaultProperties={loc:"chest",layer:da.Layer.GENITALS,forcedSide:da.Part.RIGHT};var Chest=function(_da$BodyPart10){_inherits(Chest,_da$BodyPart10);function Chest(){var _ref33;_classCallCheck(this,Chest);for(var _len40=arguments.length,data=Array(_len40),_key40=0;_key40<_len40;_key40++){data[_key40]=arguments[_key40];}return _possibleConstructorReturn(this,(_ref33=Chest.__proto__||Object.getPrototypeOf(Chest)).call.apply(_ref33,[this,Chest.defaultProperties].concat(data)));}return Chest;}(da.BodyPart);Chest.defaultProperties={loc:"chest",reflect:true,layer:da.Layer.GENITALS,aboveParts:["parts torso","decorativeParts torso","arm"]};var ChestHuman=function(_Chest){_inherits(ChestHuman,_Chest);function ChestHuman(){var _ref34;_classCallCheck(this,ChestHuman);for(var _len41=arguments.length,data=Array(_len41),_key41=0;_key41<_len41;_key41++){data[_key41]=arguments[_key41];}return _possibleConstructorReturn(this,(_ref34=ChestHuman.__proto__||Object.getPrototypeOf(ChestHuman)).call.apply(_ref34,[this,ChestHuman.defaultProperties].concat(data)));}_createClass(ChestHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(this.breastSize<0){return[];}var breastFullThreshold=10;if(calculate){var breast=ex.breast={};var breastFullness=this.breastSize-breastFullThreshold;breast.top={x:ex.armpit.x-2.2+this.breastSize*0.02,y:ex.armpit.y+0.5+this.height*0.023-this.breastSize*0.05};if(this.breastSize<breastFullThreshold){breast.top.x+=breastFullness*0.1;}// scales with greater fullness
var breastDroopiness=Math.pow(breastFullness,2)*0.006;breast.center={x:ex.armpit.x-3+breastFullness*0.02+breastDroopiness*0.02,y:breast.top.y-6-breastFullness*0.03-breastDroopiness};// until breast becomes full, increasing breast size simply makes it fuller
// rather than increasing its size
breastFullness=Math.max(0,breastFullness);breast.tip={x:breast.center.x+3.3+breastFullness*0.07+mods.breastPerkiness*0.04,y:breast.center.y+mods.breastPerkiness*0.07,cp1:{x:breast.top.x+2+breastFullness*0.07-breastDroopiness*0.5,y:breast.top.y-3+da.clamp(mods.breastPerkiness*0.1,-4,4)-breastDroopiness*0.7}};breast.tip.cp2={x:breast.tip.x-breastDroopiness*0.1,y:breast.tip.y+2+breastFullness*0.07+mods.breastPerkiness*0.1};breast.bot={x:breast.center.x-1.5+breastFullness*0.01,y:breast.center.y-3.8-breastFullness*0.08-breastDroopiness*0.05};breast.bot.cp1=da.getSmoothControlPoint(breast.tip,da.clamp(0.6+breastDroopiness*0.05,0,1));breast.bot.cp2={x:breast.bot.x+3.5+breastFullness*0.05,y:breast.bot.y};// only start showing up when breastSize > 15
breast.cleavage={x:0.5,y:breast.tip.y};breast.cleavage.cp1=da.getSmoothControlPoint(breast.bot,1);breast.cleavage.cp2={x:breast.cleavage.x,y:breast.cleavage.y-2.5-breastFullness*0.05};var _sp2=da.splitCurve(breast.bot,breast.cleavage,da.clamp((breastFullness+5)/30,0,1));breast.in=_sp2.left.p2;breast.in.cp1=_sp2.left.cp1;breast.in.cp2=_sp2.left.cp2;breast.cleavage.cp1=_sp2.right.cp1;breast.cleavage.cp2=_sp2.right.cp2;}var sp=da.splitCurve(ex.breast.top,ex.breast.tip,da.clamp(1-this.breastSize/breastFullThreshold,0,1));var top=sp.right.p1;ex.breast.tip.cp1=sp.right.cp1;ex.breast.tip.cp2=sp.right.cp2;ex.breast.top=top;return[da.breakPoint,// ex.breast.top,
top,ex.breast.tip,ex.breast.bot,ex.breast.in,{fillOnly:[ex.breast.cleavage]}];}}]);return ChestHuman;}(Chest);ChestHuman.defaultProperties={shadingParts:[LeftBreastShading,RightBreastShading]};var NipplesHuman=function(_Chest2){_inherits(NipplesHuman,_Chest2);function NipplesHuman(){var _ref35;_classCallCheck(this,NipplesHuman);for(var _len42=arguments.length,data=Array(_len42),_key42=0;_key42<_len42;_key42++){data[_key42]=arguments[_key42];}return _possibleConstructorReturn(this,(_ref35=NipplesHuman.__proto__||Object.getPrototypeOf(NipplesHuman)).call.apply(_ref35,[this,NipplesHuman.defaultProperties].concat(data)));}_createClass(NipplesHuman,[{key:"strokeClip",value:function strokeClip(){}},{key:"stroke",value:function stroke(ignore,ex){return ex.baseLipColor;}},{key:"getLineWidth",value:function getLineWidth(avatar){return avatar.dim.breastSize*0.05+avatar.dim.areolaSize*0.1;}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){ex.chest=ex.chest||{};if(calculate){if(ex.breast){ex.chest.nipples={x:ex.breast.center.x-1.5+this.breastSize*0.03,y:ex.breast.tip.y-this.breastSize*0.03+mods.breastPerkiness*0.1};// draw relative to armpit
}else{ex.chest.nipples={x:ex.armpit.x-5-this.upperMuscle*0.08,y:ex.armpit.y-3};}}return[da.breakPoint,ex.chest.nipples];}}]);return NipplesHuman;}(Chest);NipplesHuman.defaultProperties={fill:da.none,loc:"chest",aboveParts:["parts chest","decorativeParts chest"]};return{Chest:Chest,ChestHuman:ChestHuman,LeftBreastShading:LeftBreastShading,RightBreastShading:RightBreastShading,NipplesHuman:NipplesHuman};}(da));/*
 global da
 */Object.assign(da,function(da){"use strict";/**
     * Base class for parts that are on the face (head)
     * @memberof module:da
     */var FacePart=function(){function FacePart(){_classCallCheck(this,FacePart);for(var _len43=arguments.length,data=Array(_len43),_key43=0;_key43<_len43;_key43++){data[_key43]=arguments[_key43];}Object.assign.apply(Object,[this,FacePart.defaultProperties].concat(data));}_createClass(FacePart,[{key:"stroke",value:function stroke(){return"inherit";}},{key:"fill",value:function fill(){return"inherit";}// how thick the stroke line should be
},{key:"getLineWidth",value:function getLineWidth(){return 1.5;}}]);return FacePart;}();FacePart.defaultProperties={layer:da.Layer.BELOW_HAIR,reflect:false,coverConceal:[],uncoverable:false};return{FacePart:FacePart};}(da));/*
 global da
 */"use strict";Object.assign(da.Part,function(da){var Nose=function(_da$FacePart){_inherits(Nose,_da$FacePart);function Nose(){var _ref36;_classCallCheck(this,Nose);for(var _len44=arguments.length,data=Array(_len44),_key44=0;_key44<_len44;_key44++){data[_key44]=arguments[_key44];}return _possibleConstructorReturn(this,(_ref36=Nose.__proto__||Object.getPrototypeOf(Nose)).call.apply(_ref36,[this,Nose.defaultProperties].concat(data)));}return Nose;}(da.FacePart);Nose.defaultProperties={loc:"nose",stroke:da.none};var NoseHumanShading=function(_da$ShadingPart13){_inherits(NoseHumanShading,_da$ShadingPart13);function NoseHumanShading(){var _ref37;_classCallCheck(this,NoseHumanShading);for(var _len45=arguments.length,data=Array(_len45),_key45=0;_key45<_len45;_key45++){data[_key45]=arguments[_key45];}return _possibleConstructorReturn(this,(_ref37=NoseHumanShading.__proto__||Object.getPrototypeOf(NoseHumanShading)).call.apply(_ref37,[this,NoseHumanShading.defaultProperties].concat(data)));}_createClass(NoseHumanShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods){var nose=ex.nose;var top=nose.top;var bot=nose.bot;// draw from top to bottom and then bottom to top
// bot.cp1 = da.simpleQuadratic(top, bot, 0.8, 0.3);
bot.cp1={x:top.x,y:top.y-mods.noseLength*0.05};bot.cp2={x:bot.x+0.6+mods.noseRoundness*0.1,y:bot.y+mods.noseLength*0.02};var out=da.adjustPoint(nose.out,0,0);out.cp1=da.simpleQuadratic(bot,out,0.5,mods.nostrilSize*0.1);var nostrilRatio=da.clamp(mods.nostrilSize*0.01-mods.noseRidgeHeight*0.02,0,0.3);var mid={x:bot.x*nostrilRatio+out.x*(1-nostrilRatio),y:bot.y+1+mods.nostrilSize*0.05};mid.cp1={x:out.x+mods.nostrilSize*0.02,y:out.y+mods.nostrilSize*0.05};mid.cp2={x:mid.x+0.6,y:mid.y-0.3};top.cp1=da.getSmoothControlPoint(mid,mods.nostrilSize*0.1);top.cp2={x:da.clamp(top.x+0.1+mods.noseWidth*0.06+mods.noseRidgeHeight*0.1-mods.noseRoundness*0.1,0,100),y:top.y+0.2};return[top,bot,out,mid,top];}}]);return NoseHumanShading;}(da.ShadingPart);NoseHumanShading.defaultProperties={loc:"+nose",layer:da.Layer.BELOW_HAIR};var NoseHuman=function(_Nose){_inherits(NoseHuman,_Nose);function NoseHuman(){var _ref38;_classCallCheck(this,NoseHuman);for(var _len46=arguments.length,data=Array(_len46),_key46=0;_key46<_len46;_key46++){data[_key46]=arguments[_key46];}return _possibleConstructorReturn(this,(_ref38=NoseHuman.__proto__||Object.getPrototypeOf(NoseHuman)).call.apply(_ref38,[this,NoseHuman.defaultProperties].concat(data)));}_createClass(NoseHuman,[{key:"fill",value:function fill(ignore,ex){return ex.baseStroke;}},{key:"clipFill",value:function clipFill(){}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var nose=ex.nose={};var h=this.faceLength*0.1;// nostrils
nose.center={x:0,y:ex.skull.y-h*0.65+mods.noseHeight*0.1+this.faceFem*0.02};nose.in={x:nose.center.x+mods.noseWidth*0.037-this.faceFem*0.007+mods.nostrilSize*0.01,y:nose.center.y-0.3};nose.out={x:nose.center.x+mods.noseWidth*0.043-this.faceFem*0.017+0.25+mods.nostrilSize*0.08,y:nose.center.y+0.3};var nostrilVisibility=da.clamp(0.5-this.faceFem*0.005,0,0.4);nose.out.cp1=da.simpleQuadratic(nose.in,nose.out,0.5,nostrilVisibility);nose.in.cp1=da.simpleQuadratic(nose.out,nose.in,0.5,nostrilVisibility);// normally reflect for the other nostril
nose.left={};nose.left.in=da.reflectPoint(nose.in);nose.left.out=da.reflectPoint(nose.out);nose.left.in.cp1=da.reflectPoint(nose.in.cp1);nose.left.out.cp1=da.reflectPoint(nose.out.cp1);// nose bridge
nose.top={x:nose.center.x+mods.noseWidth*0.01+da.clamp(mods.noseRoundness*0.01,0,5),y:nose.center.y+(mods.noseLength*0.1-mods.noseRoundness*0.1)*h*0.045};nose.bot={x:nose.top.x,y:nose.center.y+0.3};}return[da.breakPoint,ex.nose.in,ex.nose.out,ex.nose.in,da.breakPoint,ex.nose.left.in,ex.nose.left.out,ex.nose.left.in,da.endPoint];}}]);return NoseHuman;}(Nose);NoseHuman.defaultProperties={shadingParts:[NoseHumanShading]};return{Nose:Nose,NoseHuman:NoseHuman,NoseHumanShading:NoseHumanShading};}(da));/*
 global da
 *//**
 * Created by Johnson on 2016-08-11.
 */Object.assign(da.Part,function(da){"use strict";var LipShading=function(_da$ShadingPart14){_inherits(LipShading,_da$ShadingPart14);function LipShading(){var _ref39;_classCallCheck(this,LipShading);for(var _len47=arguments.length,data=Array(_len47),_key47=0;_key47<_len47;_key47++){data[_key47]=arguments[_key47];}return _possibleConstructorReturn(this,(_ref39=LipShading.__proto__||Object.getPrototypeOf(LipShading)).call.apply(_ref39,[this,LipShading.defaultProperties].concat(data)));}_createClass(LipShading,[{key:"fill",value:function fill(){return"hsl(0,0%,85%)";}},{key:"calcDrawPoints",value:function calcDrawPoints(ex){var center=da.clone(ex.lips.bot.top);return[da.breakPoint,center,ex.lips.out.lower,ex.lips.bot,center,da.endPoint];}}]);return LipShading;}(da.ShadingPart);LipShading.defaultProperties={loc:"+lips",reflect:true,layer:da.Layer.BELOW_HAIR,aboveParts:["faceParts lips"]};var Lips=function(_da$FacePart2){_inherits(Lips,_da$FacePart2);function Lips(){var _ref40;_classCallCheck(this,Lips);for(var _len48=arguments.length,data=Array(_len48),_key48=0;_key48<_len48;_key48++){data[_key48]=arguments[_key48];}return _possibleConstructorReturn(this,(_ref40=Lips.__proto__||Object.getPrototypeOf(Lips)).call.apply(_ref40,[this,Lips.defaultProperties].concat(data)));}return Lips;}(da.FacePart);Lips.defaultProperties={loc:"lips",reflect:true,aboveParts:["mouth"],shadingParts:[LipShading]};var LipsHuman=function(_Lips){_inherits(LipsHuman,_Lips);function LipsHuman(){var _ref41;_classCallCheck(this,LipsHuman);for(var _len49=arguments.length,data=Array(_len49),_key49=0;_key49<_len49;_key49++){data[_key49]=arguments[_key49];}return _possibleConstructorReturn(this,(_ref41=LipsHuman.__proto__||Object.getPrototypeOf(LipsHuman)).call.apply(_ref41,[this,LipsHuman.defaultProperties].concat(data)));}_createClass(LipsHuman,[{key:"fill",value:function fill(ignore,ex){return ex.baseLipColor;}},{key:"clipFill",value:function clipFill(){}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var h=this.faceLength*0.1;var faceMasculinity=40-this.faceFem;// height that parting offsets the bottom lips
var topPartingHeight=mods.lipParting*0.007;var botPartingHeight=-mods.lipParting*0.015;var lips=ex.lips={};lips.center={x:-0.1,y:ex.skull.y-h*0.78+mods.lipHeight*0.1+this.faceFem*0.018};lips.top={x:lips.center.x,y:lips.center.y+da.clamp(this.lipSize*0.015+this.faceFem*0.005+mods.lipTopSize*0.01,0,3)+topPartingHeight};// tip of the Cupid's bow
lips.tip={x:da.clamp(0.7-this.faceFem*0.003+mods.lipCupidsBow*0.01+mods.lipTopCurve*0.005,0,5)*this.lipSize/20,y:lips.top.y+mods.lipTopSize*0.005+this.faceFem*0.003+this.lipSize*0.01};lips.tip.cp1=da.simpleQuadratic(lips.top,lips.tip,0.5,mods.lipTopCurve*0.005);// outer corner
lips.out={x:1+this.lipSize*0.08+mods.lipWidth*0.005+faceMasculinity*0.01,y:lips.center.y+mods.lipCurl*0.02};lips.out.cp1=da.simpleQuadratic(lips.tip,lips.out,0.3,da.clamp(mods.lipTopCurve*0.01,-0.2,2));// bottom of lips
lips.bot={x:0,y:lips.center.y-0.3-this.lipSize*0.02-this.faceFem*0.008-mods.lipBotSize*0.004+botPartingHeight};lips.bot.cp1=da.simpleQuadratic(lips.out,lips.bot,0.5,this.lipSize*0.02+this.faceFem*0.003+mods.lipBotSize*0.003-botPartingHeight*0.5);lips.bot.cp1.y-=mods.lipCurl*0.01;var biasHeightOffset=-0.1-mods.lipBias*0.006;// top of the bot lips
lips.bot.top={x:lips.center.x,y:lips.center.y+botPartingHeight+biasHeightOffset};// bot of the top lips
lips.top.bot={x:lips.center.x,y:lips.center.y+topPartingHeight*1.2+biasHeightOffset};// lower lips
lips.out.lower=da.extractPoint(lips.out);lips.out.lower.cp1=da.simpleQuadratic(lips.bot.top,lips.out.lower,0.3,mods.lipBias*0.02-mods.lipParting*0.005);// inner corner of the lips, along the curve from bot.top to out
var sp=da.splitCurve(lips.bot.top,lips.out.lower,0.6+mods.lipParting/400);lips.out.in=sp.left.p2;lips.out.in.cp1=sp.left.cp1;// curve up to the top of the bottom lips
lips.top.bot.cp1=da.simpleQuadratic(lips.out.in,lips.top.bot,0.7,-mods.lipParting*0.005);}return[da.breakPoint,ex.lips.top,ex.lips.tip,ex.lips.out,ex.lips.bot,ex.lips.bot.top,ex.lips.out.in,ex.lips.top.bot,ex.lips.top,da.endPoint];}}]);return LipsHuman;}(Lips);LipsHuman.defaultProperties={stroke:da.none};return{Lips:Lips,LipsHuman:LipsHuman,LipShading:LipShading};}(da));/*
 global da
 *//**
 * Created by Johnson on 2016-08-11.
 */Object.assign(da.Part,function(da){"use strict";var Eyes=function(_da$FacePart3){_inherits(Eyes,_da$FacePart3);function Eyes(){var _ref42;_classCallCheck(this,Eyes);for(var _len50=arguments.length,data=Array(_len50),_key50=0;_key50<_len50;_key50++){data[_key50]=arguments[_key50];}return _possibleConstructorReturn(this,(_ref42=Eyes.__proto__||Object.getPrototypeOf(Eyes)).call.apply(_ref42,[this,Eyes.defaultProperties].concat(data)));}return Eyes;}(da.FacePart);Eyes.defaultProperties={loc:"eyes",aboveParts:["parts head"]};var EyesHuman=function(_Eyes){_inherits(EyesHuman,_Eyes);function EyesHuman(){var _ref43;_classCallCheck(this,EyesHuman);for(var _len51=arguments.length,data=Array(_len51),_key51=0;_key51<_len51;_key51++){data[_key51]=arguments[_key51];}return _possibleConstructorReturn(this,(_ref43=EyesHuman.__proto__||Object.getPrototypeOf(EyesHuman)).call.apply(_ref43,[this,EyesHuman.defaultProperties].concat(data)));}_createClass(EyesHuman,[{key:"stroke",value:function stroke(ignore,ex){return ex.eyelidColor;}},{key:"fill",value:function fill(){return"white";}},{key:"getLineWidth",value:function getLineWidth(){return 0.7;}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var h=this.faceLength*0.1;ex.eyes={};ex.eyes.center={x:this.faceWidth*0.04469-mods.eyeCloseness*0.01+this.eyeSize*0.005+mods.eyeWidth*0.04,y:ex.skull.y-h*0.42+mods.eyeHeight*0.1};ex.eyes.in={x:ex.eyes.center.x-1.7-this.eyeSize*0.005-mods.eyeWidth*0.04,y:ex.eyes.center.y-0.5};ex.eyes.out={x:ex.eyes.in.x+3.5+this.eyeSize*0.015+mods.eyeWidth*0.1,y:ex.eyes.in.y+0.3};var w=ex.eyes.out.x-ex.eyes.in.x;ex.eyes.top={x:ex.eyes.in.x+w*0.4+this.faceFem*0.008+mods.eyeBias*0.1,// x: ex.eyes.in.x + w * 0.5 + mods.eyeBias * 0.1,
y:ex.eyes.in.y+1+this.eyeSize*0.015+mods.eyeTopSize*0.1,cp1:{x:ex.eyes.in.x+w*0.1,y:ex.eyes.in.y+da.clamp(0.9-this.faceFem*0.015,0.4,2)+this.eyeSize*0.01}};ex.eyes.top.cp2={x:ex.eyes.top.x-w*0.2-mods.eyeTopSize*0.05,y:ex.eyes.top.y};ex.eyes.out.cp1={x:ex.eyes.top.x+w*0.2,y:ex.eyes.top.y};ex.eyes.out.cp2={x:ex.eyes.out.x-w*0.1+this.eyeSize*0.01,y:ex.eyes.out.y+0.5+this.eyeSize*0.01};// returning back to the center
ex.eyes.in.cp1={x:ex.eyes.out.x-w*0.3,y:ex.eyes.out.y-0.7-this.eyeSize*0.02-mods.eyeBotSize*0.1};ex.eyes.in.cp2={x:ex.eyes.in.x+w*0.2,y:ex.eyes.in.y};da.rotatePoints(ex.eyes.center,mods.eyeTilt*Math.PI/180,ex.eyes.top,ex.eyes.out,ex.eyes.in);}return[ex.eyes.in,ex.eyes.top,ex.eyes.out,ex.eyes.in];}}]);return EyesHuman;}(Eyes);EyesHuman.defaultProperties={};return{Eyes:Eyes,EyesHuman:EyesHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Iris=function(_da$FacePart4){_inherits(Iris,_da$FacePart4);function Iris(){var _ref44;_classCallCheck(this,Iris);for(var _len52=arguments.length,data=Array(_len52),_key52=0;_key52<_len52;_key52++){data[_key52]=arguments[_key52];}return _possibleConstructorReturn(this,(_ref44=Iris.__proto__||Object.getPrototypeOf(Iris)).call.apply(_ref44,[this,Iris.defaultProperties].concat(data)));}return Iris;}(da.FacePart);Iris.defaultProperties={loc:"iris",aboveParts:["eyes"]};var IrisHuman=function(_Iris){_inherits(IrisHuman,_Iris);function IrisHuman(){var _ref45;_classCallCheck(this,IrisHuman);for(var _len53=arguments.length,data=Array(_len53),_key53=0;_key53<_len53;_key53++){data[_key53]=arguments[_key53];}return _possibleConstructorReturn(this,(_ref45=IrisHuman.__proto__||Object.getPrototypeOf(IrisHuman)).call.apply(_ref45,[this,IrisHuman.defaultProperties].concat(data)));}_createClass(IrisHuman,[{key:"stroke",value:function stroke(){return"#000";}},{key:"fill",value:function fill(ignore,ex){var h=30+ex.avatar.Mods.irisHue;var s=50+ex.avatar.Mods.irisSaturation;var l=40+ex.avatar.Mods.irisLightness;return"hsl("+h+","+s+"%,"+l+"%)";}},{key:"getLineWidth",value:function getLineWidth(avatar){return avatar.Mods.limbalRingSize*0.01;}},{key:"clipStroke",value:function clipStroke(ex){return this.clipFill(ex);}},{key:"clipFill",value:function clipFill(ex){return[ex.eyes.in,ex.eyes.top,ex.eyes.out,ex.eyes.in];}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){ex.eyes.iris=da.adjustPoint(ex.eyes.center,0,mods.irisHeight*0.1);}return[da.breakPoint].concat(_toConsumableArray(da.drawCircle(ex.eyes.iris,mods.irisSize*0.1)));}}]);return IrisHuman;}(Iris);IrisHuman.defaultProperties={};return{Iris:Iris,IrisHuman:IrisHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Pupil=function(_da$FacePart5){_inherits(Pupil,_da$FacePart5);function Pupil(){var _ref46;_classCallCheck(this,Pupil);for(var _len54=arguments.length,data=Array(_len54),_key54=0;_key54<_len54;_key54++){data[_key54]=arguments[_key54];}return _possibleConstructorReturn(this,(_ref46=Pupil.__proto__||Object.getPrototypeOf(Pupil)).call.apply(_ref46,[this,Pupil.defaultProperties].concat(data)));}return Pupil;}(da.FacePart);Pupil.defaultProperties={loc:"pupil",aboveParts:["iris"]};var PupilHuman=function(_Pupil){_inherits(PupilHuman,_Pupil);function PupilHuman(){var _ref47;_classCallCheck(this,PupilHuman);for(var _len55=arguments.length,data=Array(_len55),_key55=0;_key55<_len55;_key55++){data[_key55]=arguments[_key55];}return _possibleConstructorReturn(this,(_ref47=PupilHuman.__proto__||Object.getPrototypeOf(PupilHuman)).call.apply(_ref47,[this,PupilHuman.defaultProperties].concat(data)));}_createClass(PupilHuman,[{key:"clipStroke",value:function clipStroke(ex){return[ex.eyes.in,ex.eyes.top,ex.eyes.out,ex.eyes.in];}},{key:"getLineWidth",value:function getLineWidth(avatar){return avatar.Mods.pupilSize*0.1;}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods){return[da.breakPoint,ex.eyes.iris];}}]);return PupilHuman;}(Pupil);PupilHuman.defaultProperties={stroke:"#000"};return{Pupil:Pupil,PupilHuman:PupilHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Eyelid=function(_da$FacePart6){_inherits(Eyelid,_da$FacePart6);function Eyelid(){var _ref48;_classCallCheck(this,Eyelid);for(var _len56=arguments.length,data=Array(_len56),_key56=0;_key56<_len56;_key56++){data[_key56]=arguments[_key56];}return _possibleConstructorReturn(this,(_ref48=Eyelid.__proto__||Object.getPrototypeOf(Eyelid)).call.apply(_ref48,[this,Eyelid.defaultProperties].concat(data)));}return Eyelid;}(da.FacePart);Eyelid.defaultProperties={loc:"eyelid",aboveParts:["eyes","iris","pupil"]};var EyelidHuman=function(_Eyelid){_inherits(EyelidHuman,_Eyelid);function EyelidHuman(){var _ref49;_classCallCheck(this,EyelidHuman);for(var _len57=arguments.length,data=Array(_len57),_key57=0;_key57<_len57;_key57++){data[_key57]=arguments[_key57];}return _possibleConstructorReturn(this,(_ref49=EyelidHuman.__proto__||Object.getPrototypeOf(EyelidHuman)).call.apply(_ref49,[this,EyelidHuman.defaultProperties].concat(data)));}_createClass(EyelidHuman,[{key:"fill",value:function fill(ignore,ex){return ex.eyelidColor;}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){ex.eyelid={};var top=da.adjustPoint(ex.eyes.top,mods.eyelidBias*0.1,-0.3+mods.eyelidHeight*0.1);var out=da.adjustPoint(ex.eyes.out,mods.eyelidBias*0.1,-0.3+mods.eyelidHeight*0.1);ex.eyelid.top={x:top.x,y:top.y};ex.eyelid.top.cp1=out.cp2;ex.eyelid.top.cp2=out.cp1;ex.eyelid.in=da.extractPoint(ex.eyes.in);// need to invert since originally the point is from eyes.in to eyes.top
ex.eyelid.in.cp1=top.cp2;ex.eyelid.in.cp2=top.cp1;if(mods.eyelidHeight>5){ex.eyelid.in.cp1.x-=mods.eyelidHeight*0.02;ex.eyelid.in.cp2.x-=mods.eyelidHeight*0.02;}}return[ex.eyes.in,ex.eyes.top,ex.eyes.out,ex.eyelid.top,ex.eyelid.in];}}]);return EyelidHuman;}(Eyelid);EyelidHuman.defaultProperties={stroke:da.none};return{Eyelid:Eyelid,EyelidHuman:EyelidHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Brow=function(_da$FacePart7){_inherits(Brow,_da$FacePart7);function Brow(){var _ref50;_classCallCheck(this,Brow);for(var _len58=arguments.length,data=Array(_len58),_key58=0;_key58<_len58;_key58++){data[_key58]=arguments[_key58];}return _possibleConstructorReturn(this,(_ref50=Brow.__proto__||Object.getPrototypeOf(Brow)).call.apply(_ref50,[this,Brow.defaultProperties].concat(data)));}return Brow;}(da.FacePart);Brow.defaultProperties={loc:"brow",aboveParts:["parts head","faceParts eyelid"]};var BrowHuman=function(_Brow){_inherits(BrowHuman,_Brow);function BrowHuman(){var _ref51;_classCallCheck(this,BrowHuman);for(var _len59=arguments.length,data=Array(_len59),_key59=0;_key59<_len59;_key59++){data[_key59]=arguments[_key59];}return _possibleConstructorReturn(this,(_ref51=BrowHuman.__proto__||Object.getPrototypeOf(BrowHuman)).call.apply(_ref51,[this,BrowHuman.defaultProperties].concat(data)));}_createClass(BrowHuman,[{key:"fill",value:function fill(ignore,ex){return da.adjustColor(ex.hairFill,{l:-5,s:-5});}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var brow=ex.brow={};var naturalHeight=0.7+this.faceFem*0.01;brow.inbot={x:ex.eyes.center.x-2+mods.browCloseness*0.1,y:ex.eyes.center.y+naturalHeight-0.5+mods.browHeight*0.1};var thickness=mods.browThickness*0.1-this.faceFem*0.005;brow.intop={x:brow.inbot.x+mods.browSharpness*0.1,y:brow.inbot.y+da.clamp(0.95+thickness,0,5)};brow.intop.cp1=da.simpleQuadratic(brow.inbot,brow.intop,0.5,0.5);brow.outbot={x:ex.eyes.center.x+2.5+mods.browLength*0.1,y:ex.eyes.center.y+naturalHeight+mods.browHeight*0.1};brow.outtop={x:brow.outbot.x+mods.browOutBias*0.1,y:brow.outbot.y+da.clamp(0.7+thickness+mods.browOutBias*0.05,0,5)};brow.outtop.cp1=da.simpleQuadratic(brow.intop,brow.outtop,0.4,mods.browTopCurl*0.1);if(mods.browOutBias>-5){brow.outbot.cp1=da.simpleQuadratic(brow.outtop,brow.outbot,0.5,0.5);}brow.inbot.cp1=da.simpleQuadratic(brow.outbot,brow.intop,0.6,-mods.browBotCurl*0.1);// apply tilt
da.rotatePoints(brow.inbot,mods.browTilt*Math.PI/180,brow.inbot,brow.intop,brow.outtop,brow.outbot);}return[ex.brow.inbot,ex.brow.intop,ex.brow.outtop,ex.brow.outbot,ex.brow.inbot];}}]);return BrowHuman;}(Brow);BrowHuman.defaultProperties={stroke:da.none};return{Brow:Brow,BrowHuman:BrowHuman};}(da));/*
 global da
 *//**
 * Created by Johnson on 2016-08-11.
 */Object.assign(da.Part,function(da){"use strict";var Mouth=function(_da$FacePart8){_inherits(Mouth,_da$FacePart8);function Mouth(){var _ref52;_classCallCheck(this,Mouth);for(var _len60=arguments.length,data=Array(_len60),_key60=0;_key60<_len60;_key60++){data[_key60]=arguments[_key60];}return _possibleConstructorReturn(this,(_ref52=Mouth.__proto__||Object.getPrototypeOf(Mouth)).call.apply(_ref52,[this,Mouth.defaultProperties].concat(data)));}return Mouth;}(da.FacePart);Mouth.defaultProperties={loc:"mouth",reflect:true,aboveParts:["parts head"]};var MouthHuman=function(_Mouth){_inherits(MouthHuman,_Mouth);function MouthHuman(){var _ref53;_classCallCheck(this,MouthHuman);for(var _len61=arguments.length,data=Array(_len61),_key61=0;_key61<_len61;_key61++){data[_key61]=arguments[_key61];}return _possibleConstructorReturn(this,(_ref53=MouthHuman.__proto__||Object.getPrototypeOf(MouthHuman)).call.apply(_ref53,[this,MouthHuman.defaultProperties].concat(data)));}_createClass(MouthHuman,[{key:"fill",value:function fill(ignore,ex){return da.adjustColor(ex.baseLipColor,{s:-20,l:-10});}},{key:"clipFill",value:function clipFill(){}},{key:"calcDrawPoints",value:function calcDrawPoints(ex){return[da.breakPoint,ex.lips.top,ex.lips.out,ex.lips.bot,ex.lips.top,da.endPoint];}}]);return MouthHuman;}(Mouth);MouthHuman.defaultProperties={stroke:da.none};return{Mouth:Mouth,MouthHuman:MouthHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Ears=function(_da$FacePart9){_inherits(Ears,_da$FacePart9);function Ears(){var _ref54;_classCallCheck(this,Ears);for(var _len62=arguments.length,data=Array(_len62),_key62=0;_key62<_len62;_key62++){data[_key62]=arguments[_key62];}return _possibleConstructorReturn(this,(_ref54=Ears.__proto__||Object.getPrototypeOf(Ears)).call.apply(_ref54,[this,Ears.defaultProperties].concat(data)));}_createClass(Ears,[{key:"clipFill",value:function clipFill(){}},{key:"clipStroke",value:function clipStroke(){}},{key:"getLineWidth",value:function getLineWidth(avatar){return da.clamp(1.7-avatar.dim.faceFem*0.05,0.7,1.5);}}]);return Ears;}(da.FacePart);Ears.defaultProperties={loc:"ears",layer:da.Layer.BELOW_HAIR,belowParts:["parts head"],reflect:true};var EarsHuman=function(_Ears){_inherits(EarsHuman,_Ears);function EarsHuman(){var _ref55;_classCallCheck(this,EarsHuman);for(var _len63=arguments.length,data=Array(_len63),_key63=0;_key63<_len63;_key63++){data[_key63]=arguments[_key63];}return _possibleConstructorReturn(this,(_ref55=EarsHuman.__proto__||Object.getPrototypeOf(EarsHuman)).call.apply(_ref55,[this,EarsHuman.defaultProperties].concat(data)));}_createClass(EarsHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var ear=ex.ear={};ear.top=da.extractPoint(ex.skull.side);ear.bot=da.extractPoint(ex.skull.bot);ear.mid={x:ear.top.x+0.6,y:ear.top.y*0.4+ear.bot.y*0.6};ear.mid.cp1={x:ear.top.x+1.5,y:ear.top.y+0.5};ear.mid.cp2={x:ear.mid.x+0.5,y:ear.mid.y+0.9};ear.bot.cp1={x:ear.mid.x,y:ear.mid.y-0.7};ear.bot.cp2={x:ear.bot.x+0.6,y:ear.bot.y-0.1};}return[ex.ear.top,ex.ear.mid,ex.ear.bot];}}]);return EarsHuman;}(Ears);EarsHuman.defaultProperties={};var EarsElf=function(_Ears2){_inherits(EarsElf,_Ears2);function EarsElf(){var _ref56;_classCallCheck(this,EarsElf);for(var _len64=arguments.length,data=Array(_len64),_key64=0;_key64<_len64;_key64++){data[_key64]=arguments[_key64];}return _possibleConstructorReturn(this,(_ref56=EarsElf.__proto__||Object.getPrototypeOf(EarsElf)).call.apply(_ref56,[this,EarsElf.defaultProperties].concat(data)));}_createClass(EarsElf,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var ear=ex.ear={};ear.top=da.extractPoint(ex.skull.side);var sp=da.splitCurve(ex.skull.side,ex.skull.bot,0.3);ear.bot=sp.left.p2;ear.mid={x:ear.top.x+6+mods.earlobeLength,y:ear.top.y+0.5};ear.mid.cp1=da.simpleQuadratic(ear.top,ear.mid,0.30,1);ear.bot.cp1={x:ear.mid.x-2,y:ear.mid.y-2};ear.bot.cp2={x:ear.bot.x+2,y:ear.bot.y+4};}return[ex.ear.top,ex.ear.mid,ex.ear.bot];}}]);return EarsElf;}(Ears);EarsElf.defaultProperties={};return{Ears:Ears,EarsHuman:EarsHuman,EarsElf:EarsElf};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Vagina=function(_da$BodyPart11){_inherits(Vagina,_da$BodyPart11);function Vagina(){var _ref57;_classCallCheck(this,Vagina);for(var _len65=arguments.length,data=Array(_len65),_key65=0;_key65<_len65;_key65++){data[_key65]=arguments[_key65];}return _possibleConstructorReturn(this,(_ref57=Vagina.__proto__||Object.getPrototypeOf(Vagina)).call.apply(_ref57,[this,Vagina.defaultProperties].concat(data)));}return Vagina;}(da.BodyPart);Object.assign(Vagina.prototype,{loc:"vagina",forcedSide:null,layer:da.Layer.FRONT,aboveParts:["parts groin"],belowParts:["leg","clothingParts groin"]});var VaginaHuman=function(_Vagina){_inherits(VaginaHuman,_Vagina);function VaginaHuman(){var _ref58;_classCallCheck(this,VaginaHuman);for(var _len66=arguments.length,data=Array(_len66),_key66=0;_key66<_len66;_key66++){data[_key66]=arguments[_key66];}return _possibleConstructorReturn(this,(_ref58=VaginaHuman.__proto__||Object.getPrototypeOf(VaginaHuman)).call.apply(_ref58,[this,VaginaHuman.defaultProperties].concat(data)));}_createClass(VaginaHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){ex.vagina={};ex.coverGroin=true;ex.vagina.top={x:ex.groin.x,// viewed at an angle, so length is reduced
y:ex.groin.y+this.vaginaSize*0.022+mods.labiaFullness*0.005};ex.vagina.side=da.extractPoint(ex.thigh.top);ex.vagina.side.y+=0.5+(mods.labiaFullness*0.1+this.vaginaSize*0.005);ex.vagina.side.x+=mods.labiaFullness*0.02+this.vaginaSize*0.002;ex.vagina.top.cp1={x:ex.vagina.side.x,y:ex.vagina.side.y-0.8-(mods.labiaFullness*0.1+this.vaginaSize*0.005)};ex.vagina.top.cp2={x:ex.vagina.top.x,y:ex.vagina.top.y-this.vaginaSize*0.032};}return[ex.vagina.side,ex.vagina.top];}}]);return VaginaHuman;}(Vagina);VaginaHuman.defaultProperties={reflect:true};return{Vagina:Vagina,VaginaHuman:VaginaHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Testicles=function(_da$BodyPart12){_inherits(Testicles,_da$BodyPart12);function Testicles(){var _ref59;_classCallCheck(this,Testicles);for(var _len67=arguments.length,data=Array(_len67),_key67=0;_key67<_len67;_key67++){data[_key67]=arguments[_key67];}return _possibleConstructorReturn(this,(_ref59=Testicles.__proto__||Object.getPrototypeOf(Testicles)).call.apply(_ref59,[this,Testicles.defaultProperties].concat(data)));}return Testicles;}(da.BodyPart);Testicles.defaultProperties={loc:"testicles",layer:da.Layer.GENITALS};var TesticlesHuman=function(_Testicles){_inherits(TesticlesHuman,_Testicles);function TesticlesHuman(){var _ref60;_classCallCheck(this,TesticlesHuman);for(var _len68=arguments.length,data=Array(_len68),_key68=0;_key68<_len68;_key68++){data[_key68]=arguments[_key68];}return _possibleConstructorReturn(this,(_ref60=TesticlesHuman.__proto__||Object.getPrototypeOf(TesticlesHuman)).call.apply(_ref60,[this,TesticlesHuman.defaultProperties].concat(data)));}_createClass(TesticlesHuman,[{key:"getLineWidth",value:function getLineWidth(avatar){return da.clamp(avatar.getDim("testicleSize")/60,0.5,2);}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate,part){if(calculate){var testicles=ex.testicles={};// can be held back by clothing
if(this.testicleSize<50){part.coverConceal=["groin"];}testicles.center={x:0,y:ex.groin.y+3};testicles.top={x:testicles.center.x+1.5+this.testicleSize*0.003,y:testicles.center.y+this.testicleSize*0.006};testicles.side={x:testicles.center.x+this.testicleSize*0.06,y:testicles.center.y-this.testicleSize*0.1};testicles.bot={x:testicles.center.x,y:testicles.side.y-this.testicleSize*0.02};testicles.side.cp1={x:testicles.top.x,y:testicles.top.y-this.testicleSize*0.04};testicles.side.cp2={x:testicles.side.x+this.testicleSize*0.01,y:testicles.side.y+this.testicleSize*0.05};testicles.bot.cp1=da.simpleQuadratic(testicles.side,testicles.bot,0.5,this.testicleSize*0.05);testicles.center.cp1=da.simpleQuadratic(testicles.bot,testicles.center,0.3,this.testicleSize*0.01);}return this.testicleSize>20?[ex.testicles.top,ex.testicles.side,ex.testicles.bot,da.adjustPoint(ex.testicles.center,0,-4)]:[];}}]);return TesticlesHuman;}(Testicles);TesticlesHuman.defaultProperties={reflect:true};return{Testicles:Testicles,TesticlesHuman:TesticlesHuman};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Penis=function(_da$BodyPart13){_inherits(Penis,_da$BodyPart13);function Penis(){var _ref61;_classCallCheck(this,Penis);for(var _len69=arguments.length,data=Array(_len69),_key69=0;_key69<_len69;_key69++){data[_key69]=arguments[_key69];}return _possibleConstructorReturn(this,(_ref61=Penis.__proto__||Object.getPrototypeOf(Penis)).call.apply(_ref61,[this,Penis.defaultProperties].concat(data)));}_createClass(Penis,[{key:"getLineWidth",value:function getLineWidth(avatar){return da.clamp(avatar.getDim("penisSize")/100,0.8,1.5);}}]);return Penis;}(da.BodyPart);Penis.defaultProperties={loc:"penis",layer:da.Layer.GENITALS,coverConceal:["groin","left leg"]};var PenisHuman=function(_Penis){_inherits(PenisHuman,_Penis);function PenisHuman(){var _ref62;_classCallCheck(this,PenisHuman);for(var _len70=arguments.length,data=Array(_len70),_key70=0;_key70<_len70;_key70++){data[_key70]=arguments[_key70];}return _possibleConstructorReturn(this,(_ref62=PenisHuman.__proto__||Object.getPrototypeOf(PenisHuman)).call.apply(_ref62,[this,PenisHuman.defaultProperties].concat(data)));}_createClass(PenisHuman,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(calculate){var penis=ex.penis={};penis.center={x:0,y:ex.groin.y+3};penis.top={x:penis.center.x+1+mods.penisThickness*0.01+this.penisSize*0.005,y:penis.center.y+this.penisSize*0.006};penis.bot={x:penis.top.x-da.clamp(0.5-mods.penisThickness*0.01-this.penisSize*0.0001,0,5),y:penis.top.y-this.penisSize*0.1};penis.tip={x:penis.center.x,y:penis.bot.y-1-this.penisSize*0.01};penis.bot.cp1=da.simpleQuadratic(penis.top,penis.bot,0.4,da.clamp(0.5+mods.penisThickness*0.01-this.penisSize*0.002,0,3));penis.tip.cp1={x:penis.bot.x+this.penisSize*0.004,y:penis.bot.y-this.penisSize*0.005};penis.tip.cp2={x:penis.tip.x+1,y:penis.tip.y+0.2};}var reflectedBot=da.reflectPoint(ex.penis.bot);var reflectedTop=da.reflectPoint(ex.penis.top);reflectedBot.cp1=da.reflectPoint(ex.penis.tip.cp2);reflectedBot.cp2=da.reflectPoint(ex.penis.tip.cp1);reflectedTop.cp1=da.reflectPoint(ex.penis.bot.cp1);return this.penisSize>10?[ex.penis.top,ex.penis.bot,ex.penis.tip,reflectedBot,reflectedTop]:[];}}]);return PenisHuman;}(Penis);PenisHuman.defaultProperties={};var PenisHead=function(_da$DecorativePart){_inherits(PenisHead,_da$DecorativePart);function PenisHead(){var _ref63;_classCallCheck(this,PenisHead);for(var _len71=arguments.length,data=Array(_len71),_key71=0;_key71<_len71;_key71++){data[_key71]=arguments[_key71];}return _possibleConstructorReturn(this,(_ref63=PenisHead.__proto__||Object.getPrototypeOf(PenisHead)).call.apply(_ref63,[this,PenisHead.defaultProperties].concat(data)));}_createClass(PenisHead,[{key:"getLineWidth",value:function getLineWidth(avatar){return da.clamp(avatar.getDim("penisSize")/100,0.8,1.5);}}]);return PenisHead;}(da.DecorativePart);PenisHead.defaultProperties={loc:"penis",layer:da.Layer.GENITALS,coverConceal:["groin","left leg"]};var PenisHeadHuman=function(_PenisHead){_inherits(PenisHeadHuman,_PenisHead);function PenisHeadHuman(){var _ref64;_classCallCheck(this,PenisHeadHuman);for(var _len72=arguments.length,data=Array(_len72),_key72=0;_key72<_len72;_key72++){data[_key72]=arguments[_key72];}return _possibleConstructorReturn(this,(_ref64=PenisHeadHuman.__proto__||Object.getPrototypeOf(PenisHeadHuman)).call.apply(_ref64,[this,PenisHeadHuman.defaultProperties].concat(data)));}_createClass(PenisHeadHuman,[{key:"fill",value:function fill(ignore,ex){return da.adjustColor(ex.baseStroke,{l:-5,s:-5});}},{key:"stroke",value:function stroke(ignore,ex){return da.adjustColor(ex.baseStroke,{l:-5,s:-3});}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,mods,calculate){if(mods.arousal<50){return[];}da.requirePart("penis",ex);if(calculate){ex.penis.tiptop={x:ex.penis.center.x,y:ex.penis.bot.y+this.penisSize*0.003};}var bot=da.extractPoint(ex.penis.bot);bot.cp1=da.simpleQuadratic(ex.penis.tiptop,bot,0.5,0.5);var reflectedBot=da.reflectPoint(ex.penis.bot);reflectedBot.cp1=da.reflectPoint(ex.penis.tip.cp2);reflectedBot.cp2=da.reflectPoint(ex.penis.tip.cp1);ex.penis.tiptop.cp1=da.simpleQuadratic(reflectedBot,ex.penis.tiptop,0.5,0.5);return[ex.penis.tiptop,bot,ex.penis.tip,reflectedBot,ex.penis.tiptop];}}]);return PenisHeadHuman;}(PenisHead);PenisHeadHuman.defaultProperties={};return{Penis:Penis,PenisHuman:PenisHuman,PenisHead:PenisHead,PenisHeadHuman:PenisHeadHuman};}(da));/*
 global da
 *//**
 * Where all hairs go
 * @namespace Hair
 * @memberof module:da
 */da.Hair=function(da){"use strict";/**
     * Create a HairPart instance
     * @memberof module:da.Hair
     * @param {module:da.HairPart} Part Prototype of hair part
     * @param {object} data Overriding data for this particular part
     * @returns {module:da.HairPart} Instantiated hair part
     */function create(Part){for(var _len73=arguments.length,data=Array(_len73>1?_len73-1:0),_key73=1;_key73<_len73;_key73++){data[_key73-1]=arguments[_key73];}var part=new(Function.prototype.bind.apply(Part,[null].concat(data)))();// could potentially provided override in data
if(part.hasOwnProperty("side")===false){part.side=da.getSideValue(null);}return part;}/**
     * Base class for all hair parts; should go in a Player's hairParts
     * @memberof module:da
     */var HairPart=function(){function HairPart(){_classCallCheck(this,HairPart);for(var _len74=arguments.length,data=Array(_len74),_key74=0;_key74<_len74;_key74++){data[_key74]=arguments[_key74];}Object.assign.apply(Object,[this,HairPart.defaultProperties].concat(data));}_createClass(HairPart,[{key:"stroke",value:function stroke(ignore,ex){return ex.hairStroke;}},{key:"fill",value:function fill(ignore,ex){return ex.hairFill;}},{key:"getLineWidth",value:function getLineWidth(){return 1.5;}}]);return HairPart;}();Object.assign(HairPart.prototype,{layer:da.Layer.HAIR,reflect:false,coverConceal:[],uncoverable:false});var hairBack=Object.freeze({loc:"back hair",layer:da.Layer.BACK,belowParts:["parts groin"]});var hairMedium=Object.freeze({loc:"medium hair",layer:da.Layer.GENITALS,aboveParts:["chest","neck"]});var hairFront=Object.freeze({loc:"front hair",layer:da.Layer.HAIR});Object.assign(da,{HairPart:HairPart});return{create:create,hairFront:hairFront,hairMedium:hairMedium,hairBack:hairBack};}(da);/*
 global da
 */Object.assign(da.Hair,function(da){"use strict";var AsianBunBack=function(_da$HairPart){_inherits(AsianBunBack,_da$HairPart);function AsianBunBack(){var _ref65;_classCallCheck(this,AsianBunBack);for(var _len75=arguments.length,data=Array(_len75),_key75=0;_key75<_len75;_key75++){data[_key75]=arguments[_key75];}return _possibleConstructorReturn(this,(_ref65=AsianBunBack.__proto__||Object.getPrototypeOf(AsianBunBack)).call.apply(_ref65,[this,da.Hair.hairBack,AsianBunBack.defaultProperties].concat(data)));}// hair has special draw methods
_createClass(AsianBunBack,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex,ignore,extraColors){var hl=this.hairLength;function drawBackBuns(){var center=da.adjustPoint(ex.neck.top,1,-1);ctx.beginPath();ctx.ellipse(center.x,center.y,hl*0.08,hl*0.06,0.25*Math.PI,0,2*Math.PI);ctx.fill();ctx.stroke();}drawBackBuns();// ctx.save();
ctx.scale(-1,1);drawBackBuns();ctx.scale(-1,1);// ctx.restore();
hl=this.hairLength;// bun
if(hl>10){// chopsticks?
var center={x:0,y:ex.skull.y+3};var back={x:center.x+hl*0.13,y:center.y+hl*0.05};var front={x:center.x+hl*0.1,y:center.y+hl*0.1};ctx.save();ctx.beginPath();ctx.strokeStyle=extraColors.hairAccessoryColor;da.drawPoints(ctx,center,back);ctx.stroke();ctx.restore();ctx.beginPath();ctx.ellipse(center.x,center.y,hl*0.1,hl*0.06,0,0,2*Math.PI);ctx.fill();ctx.stroke();ctx.beginPath();ctx.save();ctx.strokeStyle=extraColors.hairAccessoryColor;da.drawPoints(ctx,da.adjustPoint(center,1+hl*0.02,1+hl*0.02),front);ctx.stroke();ctx.restore();}}}]);return AsianBunBack;}(da.HairPart);AsianBunBack.defaultProperties={};var LargeSideBangShading=function(_da$ShadingPart15){_inherits(LargeSideBangShading,_da$ShadingPart15);function LargeSideBangShading(){var _ref66;_classCallCheck(this,LargeSideBangShading);for(var _len76=arguments.length,data=Array(_len76),_key76=0;_key76<_len76;_key76++){data[_key76]=arguments[_key76];}return _possibleConstructorReturn(this,(_ref66=LargeSideBangShading.__proto__||Object.getPrototypeOf(LargeSideBangShading)).call.apply(_ref66,[this,LargeSideBangShading.defaultProperties].concat(data)));}_createClass(LargeSideBangShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,ignore1,ignore2,avatar){var hl=da.clamp(avatar.dim.hairLength,0,50);var _calcLargeSideBang$ca=calcLargeSideBang.call(this,ex,hl);var tip=_calcLargeSideBang$ca.tip;var bot=_calcLargeSideBang$ca.bot;var _da$shiftPoints11=da.shiftPoints(-hl*0.03,-hl*0.04,tip.cp1,tip.cp2);var _da$shiftPoints12=_slicedToArray(_da$shiftPoints11,2);var a=_da$shiftPoints12[0];var b=_da$shiftPoints12[1];var _da$shiftPoints13=da.shiftPoints(hl*0.06,hl*0.05,tip.cp1,tip.cp2);var _da$shiftPoints14=_slicedToArray(_da$shiftPoints13,2);var c=_da$shiftPoints14[0];var d=_da$shiftPoints14[1];bot.cp1=d;bot.cp2=c;tip.cp1=a;tip.cp2=b;return[bot,tip,bot];}}]);return LargeSideBangShading;}(da.ShadingPart);LargeSideBangShading.defaultProperties={loc:"+head",layer:da.Layer.HAIR,forcedSide:da.Part.LEFT};var AsianBunFront=function(_da$HairPart2){_inherits(AsianBunFront,_da$HairPart2);function AsianBunFront(){var _ref67;_classCallCheck(this,AsianBunFront);for(var _len77=arguments.length,data=Array(_len77),_key77=0;_key77<_len77;_key77++){data[_key77]=arguments[_key77];}return _possibleConstructorReturn(this,(_ref67=AsianBunFront.__proto__||Object.getPrototypeOf(AsianBunFront)).call.apply(_ref67,[this,da.Hair.hairFront,AsianBunFront.defaultProperties].concat(data)));}_createClass(AsianBunFront,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){// right side
{var hl=da.clamp(this.hairLength,0,70);var tip={x:ex.skull.x-2,y:ex.skull.y+3};var bot=da.adjustPoint(ex.skull.side,1,0);bot.cp1.x+=3+hl*0.01;bot.cp1.y+=3+hl*0.01;bot.cp2.x=bot.x;tip.cp1={x:bot.x-4,y:bot.y+3};tip.cp2={x:tip.x,y:tip.y-this.faceLength/15};ctx.beginPath();da.drawPoints(ctx,tip,bot,tip);ctx.fill();ctx.stroke();}// left side
{var _hl=da.clamp(this.hairLength,0,50);ctx.save();var _calcLargeSideBang$ca2=calcLargeSideBang.call(this,ex,_hl);var _tip=_calcLargeSideBang$ca2.tip;var out=_calcLargeSideBang$ca2.out;var _bot=_calcLargeSideBang$ca2.bot;ctx.scale(-1,1);ctx.beginPath();da.drawPoints(ctx,_tip,out,_bot,_tip);ctx.fill();ctx.stroke();ctx.restore();}}}]);return AsianBunFront;}(da.HairPart);Object.assign(AsianBunFront.prototype,{shadingParts:[LargeSideBangShading]});function calcLargeSideBang(ex,hl){// draw front parting
var tip={x:ex.skull.x-2,y:ex.skull.y+3};var out=da.adjustPoint(ex.skull.side,1+hl*0.03,da.clamp(2-hl*0.05,-3,2));// out.cp1.x = out.x;
out.cp2.x=out.x;out.cp2.y-=2;out.cp1.x+=hl*0.05;out.cp1.y+=2+hl*0.04;var bot={x:out.x-da.clamp(hl*0.1,0,10),y:out.y-da.clamp(hl,0,20)};bot.x=da.clamp(bot.x,13,out.x);bot.cp2={x:da.clamp(bot.x+hl*0.08,0,Math.POSITIVE_INFINITY),y:bot.y+2+hl*0.07};if(hl>5){bot.x-=(hl-5)*0.1;if(hl>20){var extraLength=hl-20;bot=da.adjustPoint(bot,-extraLength*0.02,-extraLength*0.15);}}bot.cp1=da.getSmoothControlPoint(out,1);tip.cp1=da.scale(bot,bot.cp2,2);tip.cp1.y=out.y;tip.cp2={x:tip.x-8,y:tip.y-this.faceLength/15};if(hl<10){tip.cp2.y-=(10-hl)*0.5;}return{tip:tip,out:out,bot:bot};}return{AsianBunFront:AsianBunFront,AsianBunBack:AsianBunBack};}(da));/*
 global da
 */Object.assign(da.Hair,function(da){"use strict";var CurlyTailFront=function(_da$HairPart3){_inherits(CurlyTailFront,_da$HairPart3);function CurlyTailFront(){var _ref68;_classCallCheck(this,CurlyTailFront);for(var _len78=arguments.length,data=Array(_len78),_key78=0;_key78<_len78;_key78++){data[_key78]=arguments[_key78];}return _possibleConstructorReturn(this,(_ref68=CurlyTailFront.__proto__||Object.getPrototypeOf(CurlyTailFront)).call.apply(_ref68,[this,da.Hair.hairFront,CurlyTailFront.defaultProperties].concat(data)));}_createClass(CurlyTailFront,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=da.clamp(this.hairLength,0,70);// right side
{var tip={x:ex.skull.x+hl*0.02,y:ex.skull.y+3};var sp=da.splitCurve(tip,ex.skull.side,da.clamp(0.75+hl*0.0045,0,1.1));var bot=sp.left.p2;bot.cp1=sp.left.cp1;bot.cp2=sp.left.cp2;bot.cp1.x+=3+hl*0.01;bot.cp1.y+=3+hl*0.01;bot.cp2.x=bot.x;tip.cp1={x:bot.x-4+hl*0.03,y:bot.y+3+hl*0.1};tip.cp2={x:tip.x,y:tip.y-this.faceLength/15-hl*0.05};ctx.beginPath();da.drawPoints(ctx,tip,bot,tip);ctx.fill();ctx.stroke();}{// left side
var _calcCurlyTop=calcCurlyTop(ex,hl);var _tip2=_calcCurlyTop.tip;var out=_calcCurlyTop.out;var _bot2=_calcCurlyTop.bot;// draw front parting
out.cp2.y-=hl*0.03;out.cp2.x+=hl*0.01;out.cp1.x+=hl*0.05;out.cp1.y+=4+hl*0.05;_bot2.cp1={x:out.x,y:da.clamp(out.y-5-hl*0.05,_bot2.y,out.y)};_bot2.cp2={x:da.clamp(_bot2.x+hl*0.07,0,out.x),y:_bot2.y+2+hl*0.07};_tip2.cp1=da.scale(_bot2,_bot2.cp2,3);_tip2.cp2={x:_tip2.x-7,y:_tip2.y-this.faceLength/20};if(hl<10){_tip2.cp2.y-=(10-hl)*0.5;}var _sp3=da.splitCurve(_bot2,_tip2,0.5);var _da$drawSpecificCurl=da.drawSpecificCurl({x:_sp3.left.p2.x,y:_sp3.left.p2.y,deflection:-hl*0.03},{x:_sp3.left.p2.x,y:_sp3.left.p2.y-hl*0.08},{x:_tip2.x,y:_tip2.y,deflection:-5});var _da$drawSpecificCurl2=_slicedToArray(_da$drawSpecificCurl,3);var curlLeft=_da$drawSpecificCurl2[0];var curlBot=_da$drawSpecificCurl2[1];var curlTop=_da$drawSpecificCurl2[2];curlLeft.cp1=_sp3.left.cp1;curlLeft.cp2=_sp3.left.cp2;curlTop.cp2=_sp3.right.cp2;ctx.save();ctx.scale(-1,1);ctx.beginPath();da.drawPoints(ctx,_tip2,out,_bot2,curlLeft,curlBot,curlTop);ctx.fill();ctx.stroke();ctx.restore();}}}]);return CurlyTailFront;}(da.HairPart);CurlyTailFront.defaultProperties={};var CurlyTailMedium=function(_da$HairPart4){_inherits(CurlyTailMedium,_da$HairPart4);function CurlyTailMedium(){var _ref69;_classCallCheck(this,CurlyTailMedium);for(var _len79=arguments.length,data=Array(_len79),_key79=0;_key79<_len79;_key79++){data[_key79]=arguments[_key79];}return _possibleConstructorReturn(this,(_ref69=CurlyTailMedium.__proto__||Object.getPrototypeOf(CurlyTailMedium)).call.apply(_ref69,[this,da.Hair.hairMedium,CurlyTailMedium.defaultProperties].concat(data)));}_createClass(CurlyTailMedium,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=this.hairLength;var tail=hl-40;if(tail>0){var _calcCurlyTop2=calcCurlyTop(ex,da.clamp(hl,0,70));var out=_calcCurlyTop2.out;var bot=_calcCurlyTop2.bot;var left={x:bot.x+tail*0.04,y:bot.y-tail*0.35,cp1:{x:bot.x,y:bot.y-tail*0.2}};left.cp2={x:left.x,y:left.y+tail*0.15};var tip={x:bot.x-tail*0.1,y:bot.y-tail,cp1:{x:left.x,y:left.y-tail*0.3}};tip.cp2={x:tip.x-tail*0.05,y:tip.y+tail*0.4};var right=da.extractPoint(ex.neck.top);right.cp1={x:tip.x-tail*0.3,y:tip.y+tail*0.2};right.cp2={x:right.x,y:right.y-tail*0.05};ctx.save();ctx.scale(-1,1);ctx.beginPath();da.drawPoints(ctx,bot,left,tip,right,out);ctx.fill();ctx.stroke();ctx.restore();}}}]);return CurlyTailMedium;}(da.HairPart);CurlyTailMedium.defaultProperties={};function calcCurlyTop(ex,hl){var tip={x:ex.skull.x-hl*0.08,y:ex.skull.y+3};var out=da.adjustPoint(ex.skull.side,1+hl*0.03,da.clamp(2-hl*0.05,-3,2));var bot={x:out.x-da.clamp(hl*0.05,0,10),y:out.y-da.clamp(hl*0.25,0,25)};if(hl>50){bot.x+=(hl-50)*0.06;}return{tip:tip,out:out,bot:bot};}return{CurlyTailFront:CurlyTailFront,CurlyTailMedium:CurlyTailMedium};}(da));/*
 global da
 */Object.assign(da.Hair,function(da){"use strict";var HimeCutFrontShading=function(_da$ShadingPart16){_inherits(HimeCutFrontShading,_da$ShadingPart16);function HimeCutFrontShading(){var _ref70;_classCallCheck(this,HimeCutFrontShading);for(var _len80=arguments.length,data=Array(_len80),_key80=0;_key80<_len80;_key80++){data[_key80]=arguments[_key80];}return _possibleConstructorReturn(this,(_ref70=HimeCutFrontShading.__proto__||Object.getPrototypeOf(HimeCutFrontShading)).call.apply(_ref70,[this,HimeCutFrontShading.defaultProperties].concat(data)));}_createClass(HimeCutFrontShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var _calcHimeCut=calcHimeCut(ex,da.clamp(this.hairLength,0,53));var left=_calcHimeCut.left;var right=_calcHimeCut.right;var top=_calcHimeCut.top;left=da.adjustPoint(left,0,-1);right=da.adjustPoint(right,0,-1);return[right,left,top,right];}}]);return HimeCutFrontShading;}(da.ShadingPart);HimeCutFrontShading.defaultProperties={loc:"+head",layer:da.Layer.BELOW_HAIR};var HimeCutBack=function(_da$HairPart5){_inherits(HimeCutBack,_da$HairPart5);function HimeCutBack(){var _ref71;_classCallCheck(this,HimeCutBack);for(var _len81=arguments.length,data=Array(_len81),_key81=0;_key81<_len81;_key81++){data[_key81]=arguments[_key81];}return _possibleConstructorReturn(this,(_ref71=HimeCutBack.__proto__||Object.getPrototypeOf(HimeCutBack)).call.apply(_ref71,[this,da.Hair.hairBack,HimeCutBack.defaultProperties].concat(data)));}_createClass(HimeCutBack,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=this.hairLength;var _calcHimeCut2=calcHimeCut(ex,da.clamp(hl,0,53));var right=_calcHimeCut2.right;var top=_calcHimeCut2.top;top.y+=hl*0.01;top.x-=da.seamWidth;right=da.adjustPoint(right,hl*0.005,0);right.cp1.y+=hl*0.01;var rightBot={x:right.x,y:right.y-hl*0.8};var bot={x:-da.seamWidth,y:rightBot.y-hl*0.01};ctx.beginPath();da.drawPoints(ctx,top,right,rightBot,bot);ctx.fill();ctx.stroke();}}]);return HimeCutBack;}(da.HairPart);HimeCutBack.defaultProperties={reflect:true};var HimeCutFront=function(_da$HairPart6){_inherits(HimeCutFront,_da$HairPart6);function HimeCutFront(){var _ref72;_classCallCheck(this,HimeCutFront);for(var _len82=arguments.length,data=Array(_len82),_key82=0;_key82<_len82;_key82++){data[_key82]=arguments[_key82];}return _possibleConstructorReturn(this,(_ref72=HimeCutFront.__proto__||Object.getPrototypeOf(HimeCutFront)).call.apply(_ref72,[this,da.Hair.hairFront,HimeCutFront.defaultProperties].concat(data)));}_createClass(HimeCutFront,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=da.clamp(this.hairLength,0,53);var _calcHimeCut3=calcHimeCut(ex,hl);var left=_calcHimeCut3.left;var right=_calcHimeCut3.right;var top=_calcHimeCut3.top;// first draw the bang (don't want to stroke the top as well so we'll fill later
ctx.beginPath();da.drawPoints(ctx,right);// gaps in the hair
{var sp=da.splitCurve(right,left,0.2);var gapRight=sp.left.p2;gapRight.cp1=sp.left.cp1;gapRight.deflection=-2;sp=da.splitCurve(right,left,0.221);left.cp1=sp.left.cp1;var _da$drawSpecificCurl3=da.drawSpecificCurl(gapRight,da.averagePoint(gapRight,top,0.6),{x:sp.left.p2.x,y:sp.left.p2.y,deflection:-2});var _da$drawSpecificCurl4=_slicedToArray(_da$drawSpecificCurl3,3);var gapTop=_da$drawSpecificCurl4[1];var gapLeft=_da$drawSpecificCurl4[2];da.drawPoints(ctx,null,gapRight,gapTop,gapLeft);}{var _sp4=da.splitCurve(right,left,0.6);var _gapRight=_sp4.left.p2;_gapRight.cp1=_sp4.left.cp1;_gapRight.deflection=-1;_sp4=da.splitCurve(right,left,0.615);left.cp1=_sp4.left.cp1;var _da$drawSpecificCurl5=da.drawSpecificCurl(_gapRight,da.averagePoint(_gapRight,top,0.4),{x:_sp4.left.p2.x,y:_sp4.left.p2.y,deflection:-1});var _da$drawSpecificCurl6=_slicedToArray(_da$drawSpecificCurl5,3);var _gapTop=_da$drawSpecificCurl6[1];var _gapLeft=_da$drawSpecificCurl6[2];da.drawPoints(ctx,null,_gapRight,_gapTop,_gapLeft);}{var _sp5=da.splitCurve(right,left,0.9);var _gapRight2=_sp5.left.p2;_gapRight2.cp1=_sp5.left.cp1;_gapRight2.deflection=4;_sp5=da.splitCurve(right,left,0.91);left.cp1=_sp5.left.cp1;var _da$drawSpecificCurl7=da.drawSpecificCurl(_gapRight2,da.averagePoint(_gapRight2,top,0.5),{x:_sp5.left.p2.x,y:_sp5.left.p2.y,deflection:4});var _da$drawSpecificCurl8=_slicedToArray(_da$drawSpecificCurl7,3);var _gapTop2=_da$drawSpecificCurl8[1];var _gapLeft2=_da$drawSpecificCurl8[2];da.drawPoints(ctx,null,_gapRight2,_gapTop2,_gapLeft2);}// closing up to the left
da.drawPoints(ctx,null,left,top,right);ctx.fill();}}]);return HimeCutFront;}(da.HairPart);HimeCutFront.defaultProperties={shadingParts:[HimeCutFrontShading]};var HimeCutSide=function(_da$HairPart7){_inherits(HimeCutSide,_da$HairPart7);function HimeCutSide(){var _ref73;_classCallCheck(this,HimeCutSide);for(var _len83=arguments.length,data=Array(_len83),_key83=0;_key83<_len83;_key83++){data[_key83]=arguments[_key83];}return _possibleConstructorReturn(this,(_ref73=HimeCutSide.__proto__||Object.getPrototypeOf(HimeCutSide)).call.apply(_ref73,[this,da.Hair.hairFront,HimeCutSide.defaultProperties].concat(data)));}_createClass(HimeCutSide,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=this.hairLength;if(hl<40){return;}var _calcHimeCut4=calcHimeCut(ex,da.clamp(hl,0,53));var left=_calcHimeCut4.left;var right=_calcHimeCut4.right;right=da.adjustPoint(right,0.4,0.9);right.cp1.y+=hl*0.01;var sp=da.splitCurve(right,left,0.1);var inner=sp.left.p2;var bot={x:right.x,y:right.y-(hl-40)*0.4};var innerBot={x:inner.x,y:bot.y-1};innerBot.cp1=da.simpleQuadratic(bot,innerBot,0.5,1);// first draw the bang (don't want to stroke the top as well so we'll fill later
ctx.beginPath();da.drawPoints(ctx,right,bot,innerBot,inner);ctx.fill();ctx.stroke();}}]);return HimeCutSide;}(da.HairPart);HimeCutSide.defaultProperties={loc:"+front hair",aboveParts:["hairParts hair"],reflect:true};function calcHimeCut(ex,hl){var sp=da.splitCurve(ex.skull,ex.skull.side,0.4+hl/82);// skull down to right
var right=sp.left.p2;right.cp1=sp.left.cp1;right.cp2=sp.left.cp2;right=da.adjustPoint(right,1,hl/100);right.cp1.x-=hl*0.09;// curve down in front
var left=da.reflectPoint(right);left.cp1=da.simpleQuadratic(right,left,0.5,hl/20);var top=da.extractPoint(ex.skull);top.cp1=da.reflectPoint(right.cp2);top.cp2=da.reflectPoint(right.cp1);top=da.adjustPoint(top,0,2);right.cp1.y+=2;right.cp2.y+=2;return{left:left,right:right,top:top};}return{HimeCutSide:HimeCutSide,HimeCutBack:HimeCutBack,HimeCutFront:HimeCutFront,HimeCutFrontShading:HimeCutFrontShading,calcHimeCut:calcHimeCut};}(da));/*
 global da
 */Object.assign(da.Hair,function(da){"use strict";var StraightFront=function(_da$HairPart8){_inherits(StraightFront,_da$HairPart8);function StraightFront(){var _ref74;_classCallCheck(this,StraightFront);for(var _len84=arguments.length,data=Array(_len84),_key84=0;_key84<_len84;_key84++){data[_key84]=arguments[_key84];}return _possibleConstructorReturn(this,(_ref74=StraightFront.__proto__||Object.getPrototypeOf(StraightFront)).call.apply(_ref74,[this,da.Hair.hairFront,StraightFront.defaultProperties].concat(data)));}_createClass(StraightFront,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=this.hairLength;var _calcStraight$call=calcStraight.call(this,ex,hl);var top=_calcStraight$call.top;var mid=_calcStraight$call.mid;var bot=_calcStraight$call.bot;var innerBot=_calcStraight$call.innerBot;var innerMid=_calcStraight$call.innerMid;var topBot=_calcStraight$call.topBot;ctx.beginPath();da.drawPoints(ctx,top,mid,bot,innerBot,innerMid,topBot,top);ctx.fill();ctx.stroke();}}]);return StraightFront;}(da.HairPart);StraightFront.defaultProperties={reflect:true};var StraightBack=function(_da$HairPart9){_inherits(StraightBack,_da$HairPart9);function StraightBack(){var _ref75;_classCallCheck(this,StraightBack);for(var _len85=arguments.length,data=Array(_len85),_key85=0;_key85<_len85;_key85++){data[_key85]=arguments[_key85];}return _possibleConstructorReturn(this,(_ref75=StraightBack.__proto__||Object.getPrototypeOf(StraightBack)).call.apply(_ref75,[this,da.Hair.hairBack,StraightBack.defaultProperties].concat(data)));}_createClass(StraightBack,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=this.hairLength-12;if(hl<0){return;}var _calcStraight$call2=calcStraight.call(this,ex,hl+12);var top=_calcStraight$call2.top;var mid=_calcStraight$call2.mid;var bot=_calcStraight$call2.bot;bot.x+=hl*0.1;var inner={x:-da.seamWidth,y:bot.y-hl*0.05};ctx.beginPath();da.drawPoints(ctx,top,mid,bot,inner);ctx.fill();ctx.stroke();}}]);return StraightBack;}(da.HairPart);StraightBack.defaultProperties={reflect:true};function calcStraight(ex,hl){var top=da.extractPoint(ex.skull);top.y+=1;var mid={x:ex.skull.side.x+hl*0.015,y:ex.skull.side.y-hl*0.05};mid.cp1={x:top.x+3+hl*0.05,y:top.y+hl*0.1};mid.cp2={x:mid.x,y:mid.y+14};var bot={x:mid.x+(hl-30)*0.01,y:mid.y-hl*0.8};bot.cp1={x:mid.x-hl*0.05,y:mid.y-hl*0.3};bot.cp2={x:bot.x+hl*0.1,y:bot.y+hl*0.1};var innerBot={x:ex.skull.side.x-hl*0.05,y:mid.y-hl*0.2};innerBot.cp1={x:bot.x,y:bot.y+hl*0.1};innerBot.cp2={x:innerBot.x-hl*0.03,y:innerBot.y-hl*0.22};var innerMid={x:ex.skull.side.x-this.faceWidth*0.02,y:mid.y};innerMid.cp1=da.getSmoothControlPoint(innerBot,0.5);innerMid.cp2={x:innerMid.x,y:innerMid.y-hl*0.05};var topBot={x:top.x,y:top.y-this.faceLength*0.03};topBot.cp1=da.getSmoothControlPoint(innerMid,2);topBot.cp2={x:topBot.x,y:topBot.y-hl*0.1};top.cp1=da.simpleQuadratic(topBot,top,0.5,1);return{top:top,mid:mid,bot:bot,innerBot:innerBot,innerMid:innerMid,topBot:topBot};}return{StraightFront:StraightFront,StraightBack:StraightBack};}(da));/*
 global da
 */Object.assign(da.Hair,function(da){"use strict";var SideHighTailFront=function(_da$HairPart10){_inherits(SideHighTailFront,_da$HairPart10);function SideHighTailFront(){var _ref76;_classCallCheck(this,SideHighTailFront);for(var _len86=arguments.length,data=Array(_len86),_key86=0;_key86<_len86;_key86++){data[_key86]=arguments[_key86];}return _possibleConstructorReturn(this,(_ref76=SideHighTailFront.__proto__||Object.getPrototypeOf(SideHighTailFront)).call.apply(_ref76,[this,da.Hair.hairFront,SideHighTailFront.defaultProperties].concat(data)));}_createClass(SideHighTailFront,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=da.clamp(this.hairLength,0,70);{var tip={x:ex.skull.x+hl*0.02,y:ex.skull.y+3};var sp=da.splitCurve(tip,ex.skull.side,da.clamp(0.75+hl*0.0045,0.9,1.1));var bot=sp.left.p2;bot.cp1=sp.left.cp1;bot.cp2=sp.left.cp2;bot.cp1.x+=3+hl*0.01;bot.cp1.y+=3+hl*0.01;bot.cp2.x=bot.x;tip.cp1={x:bot.x-4+hl*0.03,y:bot.y+3+hl*0.1};tip.cp2={x:tip.x,y:tip.y-this.faceLength/15-hl*0.05};ctx.beginPath();da.drawPoints(ctx,tip,bot,tip);ctx.fill();ctx.stroke();}{var _calcSideHighTailTop=calcSideHighTailTop(ex,hl);var _tip3=_calcSideHighTailTop.tip;var out=_calcSideHighTailTop.out;var _bot3=_calcSideHighTailTop.bot;out.cp2.y-=hl*0.03;out.cp2.x+=hl*0.01;out.cp1.x+=hl*0.05;out.cp1.y+=4+hl*0.05;_bot3.cp1={x:out.x,y:da.clamp(out.y-5-hl*0.05,_bot3.y,out.y)};_bot3.cp2={x:da.clamp(_bot3.x+hl*0.07,0,out.x),y:_bot3.y+2+hl*0.07};_tip3.cp1=da.scale(_bot3,_bot3.cp2,3);_tip3.cp2={x:_tip3.x-5,y:_tip3.y-this.faceLength/15-hl*0.05};if(hl<10){_tip3.cp2.y-=(10-hl)*0.5;}ctx.save();ctx.scale(-1,1);ctx.beginPath();da.drawPoints(ctx,_tip3,out,_bot3,_tip3);ctx.fill();ctx.stroke();ctx.restore();}}}]);return SideHighTailFront;}(da.HairPart);SideHighTailFront.defaultProperties={};var SideHighTailTail=function(_da$HairPart11){_inherits(SideHighTailTail,_da$HairPart11);function SideHighTailTail(){var _ref77;_classCallCheck(this,SideHighTailTail);for(var _len87=arguments.length,data=Array(_len87),_key87=0;_key87<_len87;_key87++){data[_key87]=arguments[_key87];}return _possibleConstructorReturn(this,(_ref77=SideHighTailTail.__proto__||Object.getPrototypeOf(SideHighTailTail)).call.apply(_ref77,[this,da.Hair.hairMedium,SideHighTailTail.defaultProperties].concat(data)));}_createClass(SideHighTailTail,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex,ignore,extraColors){var hl=this.hairLength;var tail=this.hairLength-50;if(tail<0){return;}var _calcSideHighTailTop2=calcSideHighTailTop(ex,da.clamp(hl,0,70));var tip=_calcSideHighTailTop2.tip;tip.x*=-1;tip.y-=tail*0.01;var top={x:tip.x,y:tip.y+tail*0.12};var left={x:tip.x-tail*0.09,y:tip.y};var right={x:tip.x+tail*0.09,y:tip.y};top.cp1={x:left.x+hl*0.02,y:left.y+hl*0.02};top.cp2={x:top.x-tail*0.1,y:top.y-tail*0.02};right.cp1={x:top.x+tail*0.1,y:top.y-tail*0.02};right.cp2={x:right.x-hl*0.02,y:right.y+hl*0.02};da.rotatePoints(tip,-0.24,top,left,right);// right tail
{var back={};back.out={x:top.x+tail*0.2,y:top.y-tail*0.8};back.outbot={x:top.x+tail*0.18,y:back.out.y-tail*0.8};back.in=da.extractPoint(ex.neck.top);back.out.cp1={x:top.x+tail*0.3,y:top.y-tail*0.1};back.out.cp2={x:back.out.x-tail*0.1,y:back.out.y+tail*0.3};back.outbot.cp1=da.getSmoothControlPoint(back.out,1);back.outbot.cp2={x:back.outbot.x+tail*0.2,y:back.outbot.y+tail*0.05};back.in.cp1={x:back.outbot.x-tail*0.05,y:back.outbot.y+tail*0.4};back.in.cp2={x:back.in.x-tail*0.1,y:back.in.y-tail*0.5};ctx.beginPath();da.drawPoints(ctx,top,back.out,back.outbot,back.in);ctx.fill();ctx.stroke();}// left tail
var leftTail=this.hairLength-90;if(leftTail>0){var _back={};_back.top=da.extractPoint(ex.neck.top);_back.tip={x:_back.top.x+leftTail*0.6,y:_back.top.y-leftTail*3.5};_back.tip.cp1={x:_back.top.x+leftTail*1.5,y:_back.top.y-leftTail*2};_back.tip.cp2={x:_back.tip.x-leftTail*0.5,y:_back.tip.y+leftTail*1.2};_back.right=da.extractPoint(ex.neck.cusp);_back.right.x+=0.5;_back.right.cp1={x:_back.tip.x-leftTail*0.6,y:_back.tip.y+leftTail};_back.right.cp2={x:_back.right.x+leftTail*0.3,y:_back.right.y-leftTail*0.8};ctx.save();ctx.scale(-1,1);ctx.beginPath();da.drawPoints(ctx,_back.top,_back.tip,_back.right);ctx.fill();ctx.stroke();ctx.restore();}// top knot
ctx.beginPath();da.drawPoints(ctx,left,top,right);ctx.fill();ctx.stroke();// hair accessory
{var sp=da.splitCurve(left,top,0.3);var leftBand=sp.left.p2;sp=da.splitCurve(top,right,1-0.3);var rightBand=sp.left.p2;rightBand.cp1=da.simpleQuadratic(leftBand,rightBand,0.5,tail*0.03);ctx.save();ctx.strokeStyle=extraColors.hairAccessoryColor;ctx.beginPath();da.drawPoints(ctx,leftBand,rightBand);ctx.stroke();ctx.restore();}}}]);return SideHighTailTail;}(da.HairPart);SideHighTailTail.defaultProperties={};function calcSideHighTailTop(ex,hl){var tip={x:ex.skull.x-hl*0.08,y:ex.skull.y+3};var out=da.adjustPoint(ex.skull.side,hl*0.03,da.clamp(2-hl*0.05,-3,2));var bot={x:out.x-da.clamp(hl*0.05,0,10),y:out.y-da.clamp(hl*0.25,0,25)};if(hl>50){bot.x+=(hl-50)*0.06;}return{tip:tip,out:out,bot:bot};}return{SideHighTailFront:SideHighTailFront,SideHighTailTail:SideHighTailTail};}(da));/*
 global da
 */Object.assign(da.Hair,function(da){"use strict";var HimeCurlShading=function(_da$ShadingPart17){_inherits(HimeCurlShading,_da$ShadingPart17);function HimeCurlShading(){var _ref78;_classCallCheck(this,HimeCurlShading);for(var _len88=arguments.length,data=Array(_len88),_key88=0;_key88<_len88;_key88++){data[_key88]=arguments[_key88];}return _possibleConstructorReturn(this,(_ref78=HimeCurlShading.__proto__||Object.getPrototypeOf(HimeCurlShading)).call.apply(_ref78,[this,HimeCurlShading.defaultProperties].concat(data)));}_createClass(HimeCurlShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var _calcHimeCurl=calcHimeCurl(ex,this.hairLength);var right=_calcHimeCurl.right;var out=_calcHimeCurl.out;var bot=_calcHimeCurl.bot;var fork=_calcHimeCurl.fork;var forkIn=_calcHimeCurl.forkIn;var _da$shiftPoints15=da.shiftPoints(-2,0,right,out);var _da$shiftPoints16=_slicedToArray(_da$shiftPoints15,2);var top=_da$shiftPoints16[0];var mid=_da$shiftPoints16[1];bot.cp1=da.adjustPoint(bot.cp1,-3,0);bot.cp2=da.adjustPoint(bot.cp2,-4,0);var sp=da.splitCurve(mid,bot,0.35);var shadingFork=da.adjustPoint(sp.left.p2,-2,0);shadingFork.cp1=sp.left.cp1;shadingFork.cp2={x:shadingFork.x+this.hairLength*0.04,y:shadingFork.y-this.hairLength*0.2};bot.cp1={x:shadingFork.x-this.hairLength*0.02,y:shadingFork.y-this.hairLength*0.07};bot.cp2=sp.right.cp2;right.cp1={x:bot.x+12,y:bot.y};right.cp2={x:right.x+5,y:top.y};// shade the fork
fork.y+=1.5;fork.x+=0.7;fork.cp1=da.simpleQuadratic(fork,forkIn,0.5,-7);fork.cp2=null;return[right,mid,shadingFork,bot,right,da.breakPoint,bot,fork,forkIn,fork,da.extractPoint(bot),da.endPoint];}}]);return HimeCurlShading;}(da.ShadingPart);HimeCurlShading.defaultProperties={loc:"+front hair",layer:da.Layer.GENITALS};var HimeCurlMedium=function(_da$HairPart12){_inherits(HimeCurlMedium,_da$HairPart12);function HimeCurlMedium(){var _ref79;_classCallCheck(this,HimeCurlMedium);for(var _len89=arguments.length,data=Array(_len89),_key89=0;_key89<_len89;_key89++){data[_key89]=arguments[_key89];}return _possibleConstructorReturn(this,(_ref79=HimeCurlMedium.__proto__||Object.getPrototypeOf(HimeCurlMedium)).call.apply(_ref79,[this,da.Hair.hairMedium,HimeCurlMedium.defaultProperties].concat(data)));}_createClass(HimeCurlMedium,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=this.hairLength;var _calcHimeCurl2=calcHimeCurl(ex,hl);var left=_calcHimeCurl2.left;var top=_calcHimeCurl2.top;var right=_calcHimeCurl2.right;var out=_calcHimeCurl2.out;var bot=_calcHimeCurl2.bot;var fork=_calcHimeCurl2.fork;var forkIn=_calcHimeCurl2.forkIn;var forkTop=_calcHimeCurl2.forkTop;ex.hair=ex.hair||{};ex.hair.mid={left:left,top:top,right:right,out:out,bot:bot,fork:fork,forkIn:forkIn,forkTop:forkTop};ctx.beginPath();da.drawPoints(ctx,left,top,right,out,bot,fork,forkIn,forkTop);ctx.fill();ctx.stroke();}}]);return HimeCurlMedium;}(da.HairPart);HimeCurlMedium.defaultProperties={shadingParts:[HimeCurlShading]};function calcHimeCurl(ex,hl){var _da$Hair$calcHimeCut=da.Hair.calcHimeCut(ex,da.clamp(hl,0,53));var right=_da$Hair$calcHimeCut.right;var top=_da$Hair$calcHimeCut.top;top.y+=hl*0.01;top.x-=da.seamWidth;right=da.adjustPoint(right,hl*0.005,0);right.cp1.y+=hl*0.01;top.cp1.y+=hl*0.01;top.cp2.x-=hl*0.005;var left=da.reflectPoint(right);right.x+=hl*0.012;var bot={x:right.x,y:right.y-hl*0.8};var out={x:right.x-hl*0.01,y:right.y*0.7+bot.y*0.3};// right side down to the tip
out.cp1={x:right.x+hl*0.01,y:right.y-hl*0.15};out.cp2={x:out.x,y:out.y+hl*0.1};// up to tip
bot.cp1={x:out.x,y:out.y-hl*0.07};bot.cp2={x:bot.x+hl*0.1,y:bot.y+hl*0.1};// fork at the tip of the curls
var fork={x:bot.x-hl*0.03,y:bot.y+hl*0.2};var forkIn={x:fork.x-hl*0.02,y:fork.y-hl*0.1};// go back up to neck
var forkTop=da.extractPoint(ex.neck.top);forkTop.y-=2;// curl up to neck
forkTop.cp1={x:forkIn.x-hl*0.18,y:forkIn.y+hl*0.23};forkTop.cp2={x:forkTop.x,y:forkTop.y-hl*0.23};// fork curls
fork.cp1={x:bot.x+hl*0.02,y:bot.y+hl*0.07};fork.cp2={x:fork.x-hl*0.02,y:fork.y-hl*0.07};// fork out
forkIn.cp1=da.simpleQuadratic(fork,forkIn,0.3,-hl*0.02);return{left:left,top:top,right:right,out:out,bot:bot,fork:fork,forkIn:forkIn,forkTop:forkTop};}var HimeCurlSide=function(_da$HairPart13){_inherits(HimeCurlSide,_da$HairPart13);function HimeCurlSide(){var _ref80;_classCallCheck(this,HimeCurlSide);for(var _len90=arguments.length,data=Array(_len90),_key90=0;_key90<_len90;_key90++){data[_key90]=arguments[_key90];}return _possibleConstructorReturn(this,(_ref80=HimeCurlSide.__proto__||Object.getPrototypeOf(HimeCurlSide)).call.apply(_ref80,[this,da.Hair.hairFront,HimeCurlSide.defaultProperties].concat(data)));}_createClass(HimeCurlSide,[{key:"renderHairPoints",value:function renderHairPoints(ctx,ex){var hl=this.hairLength;var curl=hl-35;if(curl<0){return;}var _da$Hair$calcHimeCut2=da.Hair.calcHimeCut(ex,da.clamp(hl,0,53));var left=_da$Hair$calcHimeCut2.left;var right=_da$Hair$calcHimeCut2.right;right=da.adjustPoint(right,0.4,1.5);right.cp1.y+=hl*0.01;var sp=da.splitCurve(right,left,0.1);var inner=sp.left.p2;var bot;if(curl<15){bot={x:right.x-3,y:right.y-curl};}else{sp=da.splitCurve(ex.jaw,ex.chin.out,da.clamp(-0.3+curl*0.015,-0.3,0.8));bot=da.adjustPoint(sp.left.p2,0.2,-0.2);}bot.cp1={x:right.x,y:right.y-curl*0.1};bot.cp2={x:bot.x+curl*0.13,y:bot.y+curl*0.06};inner.cp1=da.simpleQuadratic(bot,inner,0.45,-curl*0.07);// first draw the bang (don't want to stroke the top as well so we'll fill later
ctx.save();ctx.scale(-1,1);ctx.beginPath();da.drawPoints(ctx,right,bot,inner);ctx.fill();ctx.stroke();ctx.restore();}}]);return HimeCurlSide;}(da.HairPart);HimeCurlSide.defaultProperties={loc:"+front hair",aboveParts:["hairParts hair"]};return{HimeCurlMedium:HimeCurlMedium,HimeCurlSide:HimeCurlSide,HimeCurlShading:HimeCurlShading};}(da));/*
 global da
 */Object.assign(da.Hair,function(da){"use strict";/**
     * Index table of all hair types.
     * @memberof module:da.Hair
     * @type {module:da.HairPart[]}
     */var styles=[[/* bald */],[da.Hair.AsianBunFront,da.Hair.AsianBunBack],[da.Hair.CurlyTailFront,da.Hair.CurlyTailMedium],[da.Hair.HimeCutFront,da.Hair.HimeCutBack,da.Hair.HimeCutSide],[da.Hair.StraightFront,da.Hair.StraightBack],[da.Hair.SideHighTailFront,da.Hair.SideHighTailTail],[da.Hair.HimeCutFront,da.Hair.HimeCurlMedium,da.Hair.HimeCurlSide]];return{styles:styles};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var LegFur=function(_da$DecorativePart2){_inherits(LegFur,_da$DecorativePart2);function LegFur(){var _ref81;_classCallCheck(this,LegFur);for(var _len91=arguments.length,data=Array(_len91),_key91=0;_key91<_len91;_key91++){data[_key91]=arguments[_key91];}return _possibleConstructorReturn(this,(_ref81=LegFur.__proto__||Object.getPrototypeOf(LegFur)).call.apply(_ref81,[this,da.Materials.brownFur,LegFur.defaultProperties].concat(data)));}_createClass(LegFur,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var points=[];// fur near the "feet"
points.extend(da.drawCurl(da.adjustPoint(ex.ankle.in,-1.5,0),5,10,0.3,0.7));points.extend(da.drawCurl(da.adjustPoint(ex.ankle.inbot,4,-1),6,8,0.55,0,0.7));points.extend(da.drawCurl(da.adjustPoint(ex.knee.in,-1.3,1),4,9,0.4,0.6,0.6));points.extend(da.drawCurl(da.adjustPoint(ex.calf.out,0.7,-1),5,12,0.7,-0.5,-0.35));points.extend(da.drawCurl(da.adjustPoint(ex.thigh.out,0.2,-3),6,10,0.7,-0.5,-0.35));return points;}}]);return LegFur;}(da.DecorativePart);LegFur.defaultProperties={fill:da.none,loc:"+leg",layer:da.Layer.FRONT,aboveParts:["parts leg"]};return{LegFur:LegFur};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var Outline=function(_da$DecorativePart3){_inherits(Outline,_da$DecorativePart3);function Outline(){var _ref82;_classCallCheck(this,Outline);for(var _len92=arguments.length,data=Array(_len92),_key92=0;_key92<_len92;_key92++){data[_key92]=arguments[_key92];}return _possibleConstructorReturn(this,(_ref82=Outline.__proto__||Object.getPrototypeOf(Outline)).call.apply(_ref82,[this,Outline.defaultProperties].concat(data)));}_createClass(Outline,[{key:"stroke",value:function stroke(ctx,ex){return da.inheritStroke.call(this,ctx,ex);}},{key:"fill",value:function fill(){return da.none;}}]);return Outline;}(da.DecorativePart);Outline.defaultProperties={};var MuscleOutline=function(_Outline){_inherits(MuscleOutline,_Outline);function MuscleOutline(){var _ref83;_classCallCheck(this,MuscleOutline);for(var _len93=arguments.length,data=Array(_len93),_key93=0;_key93<_len93;_key93++){data[_key93]=arguments[_key93];}return _possibleConstructorReturn(this,(_ref83=MuscleOutline.__proto__||Object.getPrototypeOf(MuscleOutline)).call.apply(_ref83,[this,MuscleOutline.defaultProperties].concat(data)));}_createClass(MuscleOutline,[{key:"getLineWidth",value:function getLineWidth(avatar){return da.clamp((avatar.getDim(this.muscleGroup)-10)*0.05,0,1.2);}}]);return MuscleOutline;}(Outline);MuscleOutline.defaultProperties={};var ThighOutline=function(_Outline2){_inherits(ThighOutline,_Outline2);function ThighOutline(){var _ref84;_classCallCheck(this,ThighOutline);for(var _len94=arguments.length,data=Array(_len94),_key94=0;_key94<_len94;_key94++){data[_key94]=arguments[_key94];}return _possibleConstructorReturn(this,(_ref84=ThighOutline.__proto__||Object.getPrototypeOf(ThighOutline)).call.apply(_ref84,[this,ThighOutline.defaultProperties].concat(data)));}_createClass(ThighOutline,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,calculate){if(calculate){var hip=da.connectEndPoints(ex.thigh.top,ex.hip);var foldDepth=da.clamp(this.legFem/55-this.lowerMuscle/150-0.1,0,1);var sp=da.splitCurve(ex.thigh.top,hip,foldDepth);ex.thigh.fold=sp.left.p2;ex.thigh.fold.cp1=sp.left.cp1;}return[ex.thigh.top,ex.thigh.fold];}}]);return ThighOutline;}(Outline);ThighOutline.defaultProperties={loc:"+leg",aboveParts:["parts leg"],layer:da.Layer.FRONT};var BellyButtonOutline=function(_Outline3){_inherits(BellyButtonOutline,_Outline3);function BellyButtonOutline(){var _ref85;_classCallCheck(this,BellyButtonOutline);for(var _len95=arguments.length,data=Array(_len95),_key95=0;_key95<_len95;_key95++){data[_key95]=arguments[_key95];}return _possibleConstructorReturn(this,(_ref85=BellyButtonOutline.__proto__||Object.getPrototypeOf(BellyButtonOutline)).call.apply(_ref85,[this,BellyButtonOutline.defaultProperties].concat(data)));}_createClass(BellyButtonOutline,[{key:"getLineWidth",value:function getLineWidth(){return 1;}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,calculate){if(calculate){var belly=ex.bellybutton={};belly.top={x:0,y:ex.waist.y*0.45+ex.hip.y*0.55};belly.bot={x:belly.top.x,y:belly.top.y-1};belly.bot.cp1=da.simpleQuadratic(belly.top,belly.bot,0.5,0.5);}return[ex.bellybutton.top,ex.bellybutton.bot];}}]);return BellyButtonOutline;}(Outline);BellyButtonOutline.defaultProperties={loc:"+torso",aboveParts:["parts torso"],layer:da.Layer.FRONT};var DeltoidsOutline=function(_MuscleOutline){_inherits(DeltoidsOutline,_MuscleOutline);function DeltoidsOutline(){var _ref86;_classCallCheck(this,DeltoidsOutline);for(var _len96=arguments.length,data=Array(_len96),_key96=0;_key96<_len96;_key96++){data[_key96]=arguments[_key96];}return _possibleConstructorReturn(this,(_ref86=DeltoidsOutline.__proto__||Object.getPrototypeOf(DeltoidsOutline)).call.apply(_ref86,[this,DeltoidsOutline.defaultProperties].concat(data)));}_createClass(DeltoidsOutline,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,calculate){if(this.upperMuscle<20||ex.hasOwnProperty("deltoids")===false){return[];}if(calculate){var bulk=this.upperMuscle-10;var deltoids=ex.deltoids;deltoids.top={x:ex.armpit.x,y:ex.armpit.y+2};deltoids.bot={x:deltoids.x-5,y:deltoids.y};deltoids.bot.cp1=da.simpleQuadratic(deltoids.top,deltoids.bot,0.7,-bulk*0.1);}return[ex.deltoids.top,ex.deltoids.bot];}}]);return DeltoidsOutline;}(MuscleOutline);DeltoidsOutline.defaultProperties={loc:"+arm",aboveParts:["parts arm"],layer:da.Layer.FRONT,muscleGroup:"upperMuscle"};var CollarboneOutline=function(_MuscleOutline2){_inherits(CollarboneOutline,_MuscleOutline2);function CollarboneOutline(){var _ref87;_classCallCheck(this,CollarboneOutline);for(var _len97=arguments.length,data=Array(_len97),_key97=0;_key97<_len97;_key97++){data[_key97]=arguments[_key97];}return _possibleConstructorReturn(this,(_ref87=CollarboneOutline.__proto__||Object.getPrototypeOf(CollarboneOutline)).call.apply(_ref87,[this,CollarboneOutline.defaultProperties].concat(data)));}_createClass(CollarboneOutline,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,calculate){if(this.upperMuscle<20||ex.hasOwnProperty("collarbone")===false){return[];}if(calculate){var collarbone=ex.collarbone;collarbone.out={x:collarbone.x-0.5,y:collarbone.y-2};collarbone.in={x:2,y:collarbone.out.y-2};collarbone.in.cp1={x:collarbone.out.x-5,y:collarbone.out.y};collarbone.in.cp2={x:collarbone.in.x+1,y:collarbone.in.y+2};}return[ex.collarbone.out,ex.collarbone.in];}}]);return CollarboneOutline;}(MuscleOutline);CollarboneOutline.defaultProperties={loc:"+torso",layer:da.Layer.FRONT,reflect:true,muscleGroup:"upperMuscle"};var PectoralOutline=function(_MuscleOutline3){_inherits(PectoralOutline,_MuscleOutline3);function PectoralOutline(){var _ref88;_classCallCheck(this,PectoralOutline);for(var _len98=arguments.length,data=Array(_len98),_key98=0;_key98<_len98;_key98++){data[_key98]=arguments[_key98];}return _possibleConstructorReturn(this,(_ref88=PectoralOutline.__proto__||Object.getPrototypeOf(PectoralOutline)).call.apply(_ref88,[this,PectoralOutline.defaultProperties].concat(data)));}_createClass(PectoralOutline,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,calculate){if(this.upperMuscle<20){return[];}if(calculate){var bulk=this.upperMuscle-20;var pecs=ex.pecs={};pecs.outtop={x:ex.armpit.x,y:ex.armpit.y+4};pecs.outbot={x:pecs.outtop.x-3,y:pecs.outtop.y-9};pecs.inbot={x:2,y:pecs.outbot.y+0.5};pecs.intop={x:0.5,y:pecs.inbot.y+1+bulk*0.3};pecs.outbot.cp1={x:pecs.outtop.x,y:pecs.outtop.y-3};pecs.outbot.cp2={x:pecs.outbot.x+1,y:pecs.outbot.y+1};pecs.inbot.cp1={x:pecs.outbot.x-0.5,y:pecs.outbot.y-1};pecs.inbot.cp2={x:pecs.inbot.x+0.5,y:pecs.inbot.y-1};pecs.intop.cp1={x:pecs.inbot.x-bulk*0.1,y:pecs.inbot.y+bulk*0.05};pecs.intop.cp2={x:pecs.intop.x,y:pecs.intop.y-bulk*0.1};}return[ex.pecs.outtop,ex.pecs.outbot,ex.pecs.inbot,ex.pecs.intop];}}]);return PectoralOutline;}(MuscleOutline);PectoralOutline.defaultProperties={loc:"+torso",aboveParts:["parts torso"],belowParts:["parts chest","decorativeParts chest"],layer:da.Layer.FRONT,reflect:true,muscleGroup:"upperMuscle"};var AbdominalOutline=function(_MuscleOutline4){_inherits(AbdominalOutline,_MuscleOutline4);function AbdominalOutline(){var _ref89;_classCallCheck(this,AbdominalOutline);for(var _len99=arguments.length,data=Array(_len99),_key99=0;_key99<_len99;_key99++){data[_key99]=arguments[_key99];}return _possibleConstructorReturn(this,(_ref89=AbdominalOutline.__proto__||Object.getPrototypeOf(AbdominalOutline)).call.apply(_ref89,[this,AbdominalOutline.defaultProperties].concat(data)));}_createClass(AbdominalOutline,[{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,calculate){if(this.upperMuscle<15){return[];}var bulk=this.upperMuscle-20;if(calculate){var length=(this.height-this.legLength)*0.75;var abLength=length*0.12;var abBulge=bulk*0.05;var abs=ex.abs={};// side details
abs.top={x:ex.waist.x-3,y:ex.armpit.y-7};abs.first={x:abs.top.x-1,y:abs.top.y-abLength};abs.first.cp1=da.simpleQuadratic(abs.top,abs.first,0.5,abBulge);abs.second={x:abs.first.x-0.4,y:abs.first.y-abLength};abs.second.cp1=da.simpleQuadratic(abs.first,abs.second,0.5,abBulge);abs.bot={x:abs.second.x-0.3,y:abs.second.y-abLength};abs.bot.cp1=da.simpleQuadratic(abs.second,abs.bot,0.5,abBulge);// inside
if(bulk>5){abs.top.out={x:abs.top.x-1.7,y:abs.top.y};abs.top.in={x:0.9,y:abs.top.y+0.5};abs.top.in.cp1=da.simpleQuadratic(abs.top,abs.top.in,0.5,-abBulge);abs.first.out={x:abs.first.x-1.7,y:abs.first.y};abs.first.in={x:1.5,y:abs.first.y};abs.first.in.cp1=da.simpleQuadratic(abs.first,abs.first.in,0.5,abBulge);abs.second.out={x:abs.second.x-1.7,y:abs.second.y};abs.second.in={x:1.2,y:abs.second.y};abs.second.in.cp1=da.simpleQuadratic(abs.second,abs.second.in,0.5,abBulge);abs.bot.in={x:0.6,y:abs.bot.y};abs.bot.in.cp1=da.simpleQuadratic(abs.bot,abs.bot.in,0.5,abBulge);// lats
var lat=ex.lat;lat.top={x:lat.x-1.5,y:lat.y};lat.bot={x:abs.top.x+1,y:abs.top.y*0.5+abs.first.y*0.5};lat.bot.cp1=da.simpleQuadratic(lat.top,lat.bot,0.5,abBulge*1.5);}}var points=[ex.abs.top,ex.abs.first,ex.abs.second,ex.abs.bot];if(bulk>5){points=[].concat(_toConsumableArray(points),[// inside abs
da.breakPoint,ex.abs.top.out,ex.abs.top.in,da.breakPoint,ex.abs.first.out,ex.abs.first.in,da.breakPoint,ex.abs.second.out,ex.abs.second.in,// lats
da.breakPoint,ex.lat.top,ex.lat.bot]);}return points;}}]);return AbdominalOutline;}(MuscleOutline);AbdominalOutline.defaultProperties={loc:"+torso",aboveParts:["parts torso"],layer:da.Layer.FRONT,reflect:true,muscleGroup:"upperMuscle"};var QuadricepsOutline=function(_MuscleOutline5){_inherits(QuadricepsOutline,_MuscleOutline5);function QuadricepsOutline(){var _ref90;_classCallCheck(this,QuadricepsOutline);for(var _len100=arguments.length,data=Array(_len100),_key100=0;_key100<_len100;_key100++){data[_key100]=arguments[_key100];}return _possibleConstructorReturn(this,(_ref90=QuadricepsOutline.__proto__||Object.getPrototypeOf(QuadricepsOutline)).call.apply(_ref90,[this,QuadricepsOutline.defaultProperties].concat(data)));}_createClass(QuadricepsOutline,[{key:"fill",value:function fill(ctx,ex){return da.inheritFill.call(this,ctx,ex);}},{key:"clipFill",value:function clipFill(){}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,calculate){if(this.lowerMuscle<20||ex.hasOwnProperty("thigh")===false){return[];}if(calculate){var bulk=this.lowerMuscle-10;var quads=ex.quads={};quads.top={x:ex.thigh.in.x*0.1+ex.thigh.out.x*0.9,y:ex.thigh.out.y};var sp=da.splitCurve(ex.thigh.out,ex.knee.out,0.95);quads.out=sp.right.p1;quads.out.cp1=da.simpleQuadratic(quads.top,quads.out,0.55,bulk*0.25);quads.in={x:ex.thigh.in.x*0.65+ex.thigh.out.x*0.35,y:ex.thigh.in.y+3.5};quads.bot={x:ex.knee.out.x-6-bulk*0.05,y:ex.knee.intop.y+2};quads.bot.cp1=da.simpleQuadratic(quads.in,quads.bot,0.7,-bulk*0.1);}return[ex.quads.top,ex.quads.out,da.breakPoint,ex.quads.in,ex.quads.bot];}}]);return QuadricepsOutline;}(MuscleOutline);QuadricepsOutline.defaultProperties={loc:"+leg",aboveParts:["parts leg"],belowParts:["clothingParts leg","clothingParts feet"],layer:da.Layer.FRONT,muscleGroup:"lowerMuscle"};return{Outline:Outline,ThighOutline:ThighOutline,BellyButtonOutline:BellyButtonOutline,DeltoidsOutline:DeltoidsOutline,CollarboneOutline:CollarboneOutline,PectoralOutline:PectoralOutline,AbdominalOutline:AbdominalOutline,QuadricepsOutline:QuadricepsOutline};}(da));/*
 global da
 */Object.assign(da.Part,function(da){"use strict";var BeautyMark=function(_da$DecorativePart4){_inherits(BeautyMark,_da$DecorativePart4);function BeautyMark(){var _ref91;_classCallCheck(this,BeautyMark);for(var _len101=arguments.length,data=Array(_len101),_key101=0;_key101<_len101;_key101++){data[_key101]=arguments[_key101];}return _possibleConstructorReturn(this,(_ref91=BeautyMark.__proto__||Object.getPrototypeOf(BeautyMark)).call.apply(_ref91,[this,BeautyMark.defaultProperties].concat(data)));}_createClass(BeautyMark,[{key:"stroke",value:function stroke(){return da.none;}},{key:"clipFill",value:function clipFill(){}},{key:"fill",value:function fill(ignore,ex){return da.adjustColor(ex.baseStroke,{s:-30,l:-30});}},{key:"calcDrawPoints",value:function calcDrawPoints(ex,ignore,calculate,part){var center=da.extractPoint(ex.lips.center);center.x+=part.offsetX;center.y+=part.offsetY;return[da.breakPoint].concat(_toConsumableArray(da.drawCircle(center,part.radius)));}}]);return BeautyMark;}(da.DecorativePart);BeautyMark.defaultProperties={// offset relative to mouth
offsetX:-10,offsetY:10,radius:0.3,// for multiple moles, should prefix with number as in "1 head"
loc:"head",layer:da.Layer.BELOW_HAIR,aboveParts:["parts head"]};return{BeautyMark:BeautyMark};}(da));/*
 global da
 */"use strict";Object.assign(da,function(da){// convenience alias
var Part=da.Part;/**
     * Create the default body parts
     * Should be called after you finish mutating the part templates
     * But before you create any parts or players
     * compose this to add more default parts
     */function loadDefaultParts(){da.Skeleton.human.maleParts=[{partGroup:"parts",side:null,part:Part.TesticlesHuman},{partGroup:"parts",side:null,part:Part.PenisHuman},{partGroup:"decorativeParts",side:null,part:Part.PenisHeadHuman}];da.Skeleton.human.femaleParts=[{partGroup:"parts",side:null,part:Part.VaginaHuman}];da.Skeleton.human.defaultParts=[{side:null,part:Part.HeadHuman},{side:null,part:Part.NeckHuman},{side:Part.LEFT,part:Part.ArmHuman},{side:Part.RIGHT,part:Part.ArmHuman},{side:Part.LEFT,part:Part.HandHuman},{side:Part.RIGHT,part:Part.HandHuman},{side:null,part:Part.TorsoHuman},{side:Part.LEFT,part:Part.LegHuman},{side:Part.RIGHT,part:Part.LegHuman},{side:Part.LEFT,part:Part.FeetHuman},{side:Part.RIGHT,part:Part.FeetHuman},{side:null,part:Part.GroinHuman},{side:null,part:Part.ButtHuman},{side:null,part:Part.ChestHuman}];// face
da.Skeleton.human.defaultFaceParts=[{side:null,part:Part.EarsHuman},{side:null,part:Part.NoseHuman},{side:null,part:Part.LipsHuman},{side:null,part:Part.MouthHuman},{side:Part.LEFT,part:Part.EyesHuman},{side:Part.RIGHT,part:Part.EyesHuman},{side:Part.LEFT,part:Part.IrisHuman},{side:Part.RIGHT,part:Part.IrisHuman},{side:Part.LEFT,part:Part.PupilHuman},{side:Part.RIGHT,part:Part.PupilHuman},{side:Part.LEFT,part:Part.EyelidHuman},{side:Part.RIGHT,part:Part.EyelidHuman},{side:Part.LEFT,part:Part.BrowHuman},{side:Part.RIGHT,part:Part.BrowHuman}];da.Skeleton.human.defaultDecorativeParts=[{side:null,part:Part.NipplesHuman},{side:Part.LEFT,part:Part.ThighOutline},{side:Part.RIGHT,part:Part.ThighOutline},{side:null,part:Part.BellyButtonOutline},{side:Part.LEFT,part:Part.DeltoidsOutline},{side:Part.RIGHT,part:Part.DeltoidsOutline},{side:null,part:Part.CollarboneOutline},{side:null,part:Part.PectoralOutline},{side:null,part:Part.AbdominalOutline},{side:Part.LEFT,part:Part.QuadricepsOutline},{side:Part.RIGHT,part:Part.QuadricepsOutline}];}return{loadDefaultParts:loadDefaultParts};}(da));/*
 global da
 *//**
 * Where all Clothing and ClothingPart should go
 * @namespace Clothes
 * @memberof module:da
 */da.Clothes=function(da){"use strict";/**
     * Clothing layers (separate from drawing layers)
     * @readonly
     * @enum
     * @memberof module:da.Clothes
     */var Layer=Object.freeze({BASE:0,INNER:1,MID:2,OUTER:3,NUM_LAYERS:4});/**
     * Clothing holds statistics and information about the clothes, but no drawing methods
     * Instead, it holds ClothingParts that each know how to draw themselves
     * @memberof module:da
     */var Clothing=function(){function Clothing(){var _this91=this;_classCallCheck(this,Clothing);for(var _len102=arguments.length,data=Array(_len102),_key102=0;_key102<_len102;_key102++){data[_key102]=arguments[_key102];}Object.assign.apply(Object,[this,Clothing.defaultProperties].concat(data));// actual parts storage
this.parts=[];// replace each part (prototype) with an actual part object
Object.getPrototypeOf(this).partPrototypes.forEach(function(partPair){var side=partPair.side;var Part=partPair.Part;var thisPart=new Part();var sideString=da.getSideLocation(side);// rename for more specificity
if(sideString==="right"||sideString==="left"){var baseLocation=da.extractUnmodifiedLocation(thisPart.loc);var locationModifiers=da.extractLocationModifier(thisPart.loc);thisPart.loc=locationModifiers+sideString+" "+baseLocation;}thisPart.side=da.getSideValue(side);thisPart._owner=_this91;_this91.parts.push(thisPart);});}_createClass(Clothing,[{key:"stroke",value:function stroke(){return"#000";}},{key:"fill",value:function fill(){return"#fff";}}]);return Clothing;}();/**
     * Default properties of every clothing object
     * @property {module:da.Clothes.Layer} clothingLayer Layer relative to other clothing (how close
     * is the clothing to the skin)
     * @property {object[]} partPrototypes Pairs of side and ClothingPart prototypes
     * @property {module:da.Layer} partPrototypes[].side Side of the clothing part
     * @property {module:da.ClothingPart} partPrototype[].part A clothing part used by this clothing
     * @type {{clothingLayer: number, partPrototypes: Array}}
     */Object.assign(Clothing.prototype,{clothingLayer:Layer.BASE,thickness:1.2});Clothing.defaultProperties={};/**
     * Holds no statistical information (state)
     * instead relying on the owning Clothing object to do so
     * @memberof module:da
     */var ClothingPart=function(){function ClothingPart(){_classCallCheck(this,ClothingPart);for(var _len103=arguments.length,data=Array(_len103),_key103=0;_key103<_len103;_key103++){data[_key103]=arguments[_key103];}Object.assign.apply(Object,[this,ClothingPart.defaultProperties].concat(data));}_createClass(ClothingPart,[{key:"renderClothingPoints",value:function renderClothingPoints(){}}]);return ClothingPart;}();Object.assign(ClothingPart.prototype,{// drawing layer (not clothing layer)
layer:da.Layer.FRONT,loc:"torso"});/**
     * Create a Clothing instance
     * @memberof module:da.Clothes
     * @param {Clothing} Clothing Clothing prototype to instantiate
     * @param {object} data Overriding data
     * @returns {Clothing} Instantiated clothing object
     */function create(Clothing){for(var _len104=arguments.length,data=Array(_len104>1?_len104-1:0),_key104=1;_key104<_len104;_key104++){data[_key104-1]=arguments[_key104];}return new(Function.prototype.bind.apply(Clothing,[null].concat(data)))();}function simpleStrokeFill(ctx,ex,clothing){da.setStrokeAndFill(ctx,{fill:clothing.fill,stroke:clothing.stroke},ex);ctx.lineWidth=clothing.thickness;}// exports
Object.assign(da,{Clothing:Clothing,ClothingPart:ClothingPart});return{Layer:Layer,create:create,simpleStrokeFill:simpleStrokeFill};}(da);/*
 global da
 */Object.assign(da.Clothes,function(da){"use strict";var BraTopStrapPart=function(_da$ClothingPart){_inherits(BraTopStrapPart,_da$ClothingPart);function BraTopStrapPart(){var _ref92;_classCallCheck(this,BraTopStrapPart);for(var _len105=arguments.length,data=Array(_len105),_key105=0;_key105<_len105;_key105++){data[_key105]=arguments[_key105];}return _possibleConstructorReturn(this,(_ref92=BraTopStrapPart.__proto__||Object.getPrototypeOf(BraTopStrapPart)).call.apply(_ref92,[this,BraTopStrapPart.defaultProperties].concat(data)));}_createClass(BraTopStrapPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var bra=calcBra(ex);if(bra===null){return;}var sp=da.splitCurve(ex.neck.cusp,ex.collarbone,0.2);var strap={};strap.top=sp.left.p2;bra.top.cp1={x:strap.top.x-2,y:strap.top.y-15};bra.top.cp2={x:bra.top.x,y:bra.top.y+5};da.setStrokeAndFill(ctx,{fill:this.fill,stroke:this.stroke},ex);ctx.lineWidth=this.strapWidth;// top strap
ctx.beginPath();da.drawPoints(ctx,strap.top,bra.top);ctx.stroke();}}]);return BraTopStrapPart;}(da.ClothingPart);Object.assign(BraTopStrapPart.prototype,{layer:da.Layer.FRONT,loc:"+torso",reflect:true,aboveParts:["parts neck","parts chest"]});var BraBotStrapPart=function(_da$ClothingPart2){_inherits(BraBotStrapPart,_da$ClothingPart2);function BraBotStrapPart(){var _ref93;_classCallCheck(this,BraBotStrapPart);for(var _len106=arguments.length,data=Array(_len106),_key106=0;_key106<_len106;_key106++){data[_key106]=arguments[_key106];}return _possibleConstructorReturn(this,(_ref93=BraBotStrapPart.__proto__||Object.getPrototypeOf(BraBotStrapPart)).call.apply(_ref93,[this,BraBotStrapPart.defaultProperties].concat(data)));}_createClass(BraBotStrapPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var bra=calcBra(ex);if(bra===null){return;}var strap={};strap.out={x:ex.breast.bot.x,y:ex.breast.cleavage.y};strap.outbot={x:ex.breast.bot.x,y:ex.breast.bot.y+1};strap.bot={x:-da.seamWidth,y:ex.breast.bot.y+3};strap.mid={x:-da.seamWidth,y:ex.breast.cleavage.y};da.setStrokeAndFill(ctx,{fill:this.fill,stroke:this.stroke},ex);// bottom strap
ctx.beginPath();da.drawPoints(ctx,strap.out,strap.outbot,strap.bot,strap.mid,strap.out);ctx.fill();}}]);return BraBotStrapPart;}(da.ClothingPart);Object.assign(BraBotStrapPart.prototype,{layer:da.Layer.FRONT,loc:"+torso",reflect:true,aboveParts:["parts torso"],belowParts:["parts chest"]});var BraPart=function(_da$ClothingPart3){_inherits(BraPart,_da$ClothingPart3);function BraPart(){var _ref94;_classCallCheck(this,BraPart);for(var _len107=arguments.length,data=Array(_len107),_key107=0;_key107<_len107;_key107++){data[_key107]=arguments[_key107];}return _possibleConstructorReturn(this,(_ref94=BraPart.__proto__||Object.getPrototypeOf(BraPart)).call.apply(_ref94,[this,BraPart.defaultProperties].concat(data)));}_createClass(BraPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var bra=calcBra(ex);if(bra===null){return;}bra.out.cp1=da.simpleQuadratic(bra.top,bra.out,0.4,1);bra.top.cp1=da.simpleQuadratic(ex.breast.cleavage,bra.top,0.6,2);da.setStrokeAndFill(ctx,{fill:this.fill,stroke:this.stroke},ex);ctx.beginPath();da.drawPoints(ctx,bra.top,bra.out,bra.tip,ex.breast.bot,ex.breast.in,ex.breast.cleavage,bra.top);ctx.fill();ctx.stroke();}}]);return BraPart;}(da.ClothingPart);Object.assign(BraPart.prototype,{layer:da.Layer.GENITALS,loc:"chest",reflect:true,aboveParts:["parts chest","decorativeParts chest"]});function calcBra(ex){if(ex.hasOwnProperty("breast")===false){return null;}var sp=da.splitCurve(ex.breast.top,ex.breast.tip,0.7);var bra={out:da.clone(sp.right.p1),tip:da.clone(sp.right.p2)};bra.top={x:ex.breast.bot.x,y:bra.out.y+2};bra.tip.cp1=sp.right.cp1;bra.tip.cp2=sp.right.cp2;return bra;}var BreastWrapPart=function(_da$ClothingPart4){_inherits(BreastWrapPart,_da$ClothingPart4);function BreastWrapPart(){var _ref95;_classCallCheck(this,BreastWrapPart);for(var _len108=arguments.length,data=Array(_len108),_key108=0;_key108<_len108;_key108++){data[_key108]=arguments[_key108];}return _possibleConstructorReturn(this,(_ref95=BreastWrapPart.__proto__||Object.getPrototypeOf(BreastWrapPart)).call.apply(_ref95,[this,BreastWrapPart.defaultProperties].concat(data)));}_createClass(BreastWrapPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx,ignore,avatar){if(!ex.breast){return;}var top=da.clone(ex.breast.top);var sp=da.splitCurve(ex.breast.top,ex.breast.tip,da.clamp(-0.25+avatar.getDim("breastSize")*0.01,0,1));var topStroke=sp.left.p2;var tipStroke=sp.right.p2;tipStroke.cp1=sp.right.cp1;tipStroke.cp2=sp.right.cp2;// don't display nipples and other chest decorations
var chestDecorativeIndex=0;var part=avatar.getPartInLocation("chest",avatar.decorativeParts,chestDecorativeIndex);while(part){part.coverConceal=["chest"];part=avatar.getPartInLocation("chest",avatar.decorativeParts,++chestDecorativeIndex);}da.setStrokeAndFill(ctx,{fill:this.fill,stroke:this.stroke},ex);ctx.beginPath();da.drawPoints(ctx,top,ex.breast.tip,ex.breast.bot,ex.breast.in,da.connectEndPoints(ex.breast.in,top));ctx.fill();ctx.beginPath();da.drawPoints(ctx,topStroke,tipStroke,ex.breast.bot);ctx.stroke();}}]);return BreastWrapPart;}(da.ClothingPart);Object.assign(BreastWrapPart.prototype,{layer:da.Layer.GENITALS,loc:"chest",reflect:true,aboveParts:["parts chest","decorativeParts chest"]});var BreastWrapStrapPart=function(_da$ClothingPart5){_inherits(BreastWrapStrapPart,_da$ClothingPart5);function BreastWrapStrapPart(){var _ref96;_classCallCheck(this,BreastWrapStrapPart);for(var _len109=arguments.length,data=Array(_len109),_key109=0;_key109<_len109;_key109++){data[_key109]=arguments[_key109];}return _possibleConstructorReturn(this,(_ref96=BreastWrapStrapPart.__proto__||Object.getPrototypeOf(BreastWrapStrapPart)).call.apply(_ref96,[this,BreastWrapStrapPart.defaultProperties].concat(data)));}_createClass(BreastWrapStrapPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx,ignore,avatar){var top={x:0,y:ex.armpit.y};var outTop=void 0;var armpit=da.extractPoint(ex.armpit);if(ex.breast){top.y=ex.breast.top.y-2;outTop=da.extractPoint(ex.breast.top);outTop.cp1={x:outTop.x*0.5,y:top.y};armpit.cp1=da.simpleQuadratic(outTop,armpit,0.5,1);}var sp=da.splitCurve(ex.armpit,ex.waist,da.clamp(this.chestCoverage+avatar.getDim("breastSize")*0.01,0,1));var outBot=sp.left.p2;outBot.cp1=sp.left.cp1;outBot.cp2=sp.left.cp2;var bot={x:0,y:outBot.y-1};bot.cp1={x:outBot.x*0.5,y:bot.y};da.Clothes.simpleStrokeFill(ctx,ex,this);// bottom strap
ctx.beginPath();da.drawPoints(ctx,top,outTop,armpit,outBot,bot);ctx.fill();ctx.stroke();}}]);return BreastWrapStrapPart;}(da.ClothingPart);Object.assign(BreastWrapStrapPart.prototype,{layer:da.Layer.FRONT,loc:"+torso",reflect:true,aboveParts:["parts torso"],belowParts:["parts chest"]});var PantiesPart=function(_da$ClothingPart6){_inherits(PantiesPart,_da$ClothingPart6);function PantiesPart(){var _ref97;_classCallCheck(this,PantiesPart);for(var _len110=arguments.length,data=Array(_len110),_key110=0;_key110<_len110;_key110++){data[_key110]=arguments[_key110];}return _possibleConstructorReturn(this,(_ref97=PantiesPart.__proto__||Object.getPrototypeOf(PantiesPart)).call.apply(_ref97,[this,PantiesPart.defaultProperties].concat(data)));}_createClass(PantiesPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){if(ex.hasOwnProperty("groin")===false){return;}var panties={};panties.top={x:-da.seamWidth,y:ex.pelvis.y};var sp=da.splitCurve(ex.waist,ex.hip,0.9);panties.out=sp.right.p1;panties.out.cp1=da.simpleQuadratic(panties.top,panties.out,0.4,-3);panties.outbot=sp.right.p2;panties.outbot.cp1=sp.right.cp1;panties.outbot.cp2=sp.right.cp2;panties.bot={x:-da.seamWidth,y:ex.groin.y};panties.bot.cp1={x:panties.outbot.x,y:panties.outbot.y};panties.bot.cp2={x:panties.bot.x+5,y:panties.bot.y};da.Clothes.simpleStrokeFill(ctx,ex,this);ctx.beginPath();da.drawPoints(ctx,panties.top,panties.out,panties.outbot,panties.bot,panties.top);ctx.fill();// only draw outline for top and bottom
ctx.beginPath();da.drawPoints(ctx,panties.top,panties.out,panties.outbot,panties.bot);ctx.stroke();}}]);return PantiesPart;}(da.ClothingPart);Object.assign(PantiesPart.prototype,{layer:da.Layer.FRONT,loc:"groin",reflect:true,aboveParts:["parts groin","parts torso"],belowParts:["parts leg"]});var Underwear=function(_da$Clothing){_inherits(Underwear,_da$Clothing);function Underwear(){var _ref98;_classCallCheck(this,Underwear);for(var _len111=arguments.length,data=Array(_len111),_key111=0;_key111<_len111;_key111++){data[_key111]=arguments[_key111];}return _possibleConstructorReturn(this,(_ref98=Underwear.__proto__||Object.getPrototypeOf(Underwear)).call.apply(_ref98,[this,Underwear.defaultProperties].concat(data)));}return Underwear;}(da.Clothing);Object.assign(Underwear.prototype,{clothingLayer:da.Clothes.Layer.BASE});var Bra=function(_Underwear){_inherits(Bra,_Underwear);function Bra(){var _ref99;_classCallCheck(this,Bra);for(var _len112=arguments.length,data=Array(_len112),_key112=0;_key112<_len112;_key112++){data[_key112]=arguments[_key112];}return _possibleConstructorReturn(this,(_ref99=Bra.__proto__||Object.getPrototypeOf(Bra)).call.apply(_ref99,[this,Bra.defaultProperties].concat(data)));}_createClass(Bra,[{key:"stroke",value:function stroke(){return"hsl(0,30%,30%)";}},{key:"fill",value:function fill(){return"hsl(0,50%,50%)";}}]);return Bra;}(Underwear);Object.assign(Bra.prototype,{partPrototypes:[{side:null,Part:BraBotStrapPart},{side:null,Part:BraPart}]});var BreastWrap=function(_Underwear2){_inherits(BreastWrap,_Underwear2);function BreastWrap(){var _ref100;_classCallCheck(this,BreastWrap);for(var _len113=arguments.length,data=Array(_len113),_key113=0;_key113<_len113;_key113++){data[_key113]=arguments[_key113];}var _this100=_possibleConstructorReturn(this,(_ref100=BreastWrap.__proto__||Object.getPrototypeOf(BreastWrap)).call.apply(_ref100,[this,BreastWrap.defaultProperties].concat(data)));_this100.fill=da.getPattern("bandages",_this100.wrapSize);return _this100;}_createClass(BreastWrap,[{key:"stroke",value:function stroke(){return"hsl(0,30%,30%)";}}]);return BreastWrap;}(Underwear);Object.assign(BreastWrap.prototype,{partPrototypes:[{side:null,Part:BreastWrapPart},{side:null,Part:BreastWrapStrapPart}]});BreastWrap.defaultProperties={chestCoverage:0.6,thickness:0.5,wrapSize:30};var Panties=function(_Underwear3){_inherits(Panties,_Underwear3);function Panties(){var _ref101;_classCallCheck(this,Panties);for(var _len114=arguments.length,data=Array(_len114),_key114=0;_key114<_len114;_key114++){data[_key114]=arguments[_key114];}return _possibleConstructorReturn(this,(_ref101=Panties.__proto__||Object.getPrototypeOf(Panties)).call.apply(_ref101,[this,Panties.defaultProperties].concat(data)));}_createClass(Panties,[{key:"stroke",value:function stroke(){return"hsl(0,30%,30%)";}},{key:"fill",value:function fill(){return"hsl(0,50%,50%)";}}]);return Panties;}(Underwear);Object.assign(Panties.prototype,{partPrototypes:[{side:null,Part:PantiesPart}]});Panties.defaultProperties={};return{BraTopStrapPart:BraTopStrapPart,BraBotStrapPart:BraBotStrapPart,BraPart:BraPart,BreastWrapPart:BreastWrapPart,PantiesPart:PantiesPart,Underwear:Underwear,Bra:Bra,BreastWrap:BreastWrap,Panties:Panties};}(da));/*
 global da
 */Object.assign(da.Clothes,function(da){"use strict";var SweaterBasePart=function(_da$ClothingPart7){_inherits(SweaterBasePart,_da$ClothingPart7);function SweaterBasePart(){var _ref102;_classCallCheck(this,SweaterBasePart);for(var _len115=arguments.length,data=Array(_len115),_key115=0;_key115<_len115;_key115++){data[_key115]=arguments[_key115];}return _possibleConstructorReturn(this,(_ref102=SweaterBasePart.__proto__||Object.getPrototypeOf(SweaterBasePart)).call.apply(_ref102,[this,SweaterBasePart.defaultProperties].concat(data)));}_createClass(SweaterBasePart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var _calcShirtBase$call=calcShirtBase.call(this,ex);var top=_calcShirtBase$call.top;var out=_calcShirtBase$call.out;var cusp=_calcShirtBase$call.cusp;var collarbone=_calcShirtBase$call.collarbone;var waist=_calcShirtBase$call.waist;var bot=_calcShirtBase$call.bot;// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,top,out,cusp,collarbone,ex.armpit,ex.lat,waist,bot.out,bot.bot);ctx.fill();ctx.beginPath();da.drawPoints(ctx,top,out,cusp,collarbone,da.breakPoint,ex.armpit,ex.lat,waist,bot.out,bot.bot);ctx.stroke();}}]);return SweaterBasePart;}(da.ClothingPart);Object.assign(SweaterBasePart.prototype,{layer:da.Layer.FRONT,loc:"torso",reflect:true,aboveParts:["parts neck","parts torso","decorativeParts torso"],aboveSameLayerParts:["groin"]});function calcShirtBase(ex){var sp=da.splitCurve(ex.neck.top,ex.neck.cusp,this.neckCoverage*0.5);var out=sp.left.p2;var top={x:0,y:out.y-2};out.cp1={x:top.x*0.5+out.x*0.5,y:top.y};var cusp=da.extractPoint(ex.neck.cusp);cusp.cp1={x:out.x+this.neckCoverage*2,y:out.y-1};cusp.cp2={x:cusp.x,y:cusp.y+this.neckCoverage*3};// where does this shirt end
sp=da.splitCurve(ex.waist,ex.hip,this.stomachCoverage);var bot={};bot.out=sp.left.p2;bot.out.cp1=sp.left.cp1;bot.out.cp2=sp.left.cp2;bot.out.x+=this.thickness*0.4;bot.bot=da.extractPoint(ex.pelvis);bot.bot.y+=bot.out.y-ex.hip.y;bot.bot.cp1={x:bot.bot.x*0.5+bot.out.x*0.5,y:bot.bot.y};var collarbone=da.extractPoint(ex.collarbone);var waist=da.adjustPoint(ex.waist,this.thickness*0.8,0);return{top:top,out:out,cusp:cusp,collarbone:collarbone,waist:waist,bot:bot};}var CoveredBreastPart=function(_da$ClothingPart8){_inherits(CoveredBreastPart,_da$ClothingPart8);function CoveredBreastPart(){var _ref103;_classCallCheck(this,CoveredBreastPart);for(var _len116=arguments.length,data=Array(_len116),_key116=0;_key116<_len116;_key116++){data[_key116]=arguments[_key116];}return _possibleConstructorReturn(this,(_ref103=CoveredBreastPart.__proto__||Object.getPrototypeOf(CoveredBreastPart)).call.apply(_ref103,[this,CoveredBreastPart.defaultProperties].concat(data)));}_createClass(CoveredBreastPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){// no breast means we cover just the nipples
if(ex.hasOwnProperty("breast")===false){ctx.save();ctx.lineWidth=10;da.setStrokeAndFill(ctx,{fill:da.none,stroke:this.fill},ex);ctx.beginPath();da.drawPoints(ctx,da.breakPoint,ex.chest.nipples);ctx.stroke();ctx.restore();return;}var top=da.adjustPoint(ex.breast.top,0,0.2);var tip=da.adjustPoint(ex.breast.tip,0.3,0);var bot=da.adjustPoint(ex.breast.bot,0,-0.3);var cleavage=da.adjustPoint(ex.breast.cleavage,-0.8,-0.1);var inner=da.adjustPoint(ex.breast.in,0,-0.8);da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,top,tip,bot,inner,cleavage,da.connectEndPoints(cleavage,top));ctx.fill();// fill out breasts
ctx.beginPath();da.drawPoints(ctx,top,tip,bot,inner);ctx.stroke();}}]);return CoveredBreastPart;}(da.ClothingPart);Object.assign(CoveredBreastPart.prototype,{layer:da.Layer.GENITALS,loc:"chest",reflect:true,aboveParts:["parts chest","decorativeParts chest"]});/**
     * Long sleeve means between elbow and wrist
     */var LongSleevePart=function(_da$ClothingPart9){_inherits(LongSleevePart,_da$ClothingPart9);function LongSleevePart(){var _ref104;_classCallCheck(this,LongSleevePart);for(var _len117=arguments.length,data=Array(_len117),_key117=0;_key117<_len117;_key117++){data[_key117]=arguments[_key117];}return _possibleConstructorReturn(this,(_ref104=LongSleevePart.__proto__||Object.getPrototypeOf(LongSleevePart)).call.apply(_ref104,[this,LongSleevePart.defaultProperties].concat(data)));}_createClass(LongSleevePart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var sp=da.splitCurve(ex.elbow.out,ex.wrist.out,this.sleeveLength);var out=sp.left.p2;out.cp1=sp.left.cp1;out.cp2=sp.left.cp2;out.cp1.x+=0.5*this.thickness;out.cp2.x+=0.3*this.thickness;sp=da.splitCurve(ex.wrist.in,ex.elbow.in,(1-this.sleeveLength)*0.9);var bot=sp.left.p2;var elbow=sp.right.p2;elbow.cp1=sp.right.cp1;elbow.cp2=sp.right.cp2;elbow=da.adjustPoint(elbow,-this.thickness*0.4,0);var _calcShirtBase$call2=calcShirtBase.call(this,ex);var collarbone=_calcShirtBase$call2.collarbone;collarbone.x-=0.1;var shoulder=da.adjustPoint(ex.shoulder,this.thickness*0.5,0);var elbowOut=da.adjustPoint(ex.elbow.out,this.thickness*0.5,0);bot.cp1=da.simpleQuadratic(out,bot,0.5,1);da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,collarbone,ex.deltoids,shoulder,elbowOut,out,bot,elbow,ex.armpit);ctx.fill();ctx.stroke();}}]);return LongSleevePart;}(da.ClothingPart);Object.assign(LongSleevePart.prototype,{layer:da.Layer.ARMS,loc:"arm",aboveParts:["parts arm","decorativeParts arm","parts hand"]});/**
     * Short sleeve means between shoulder and elbow
     */var ShortSleevePart=function(_da$ClothingPart10){_inherits(ShortSleevePart,_da$ClothingPart10);function ShortSleevePart(){var _ref105;_classCallCheck(this,ShortSleevePart);for(var _len118=arguments.length,data=Array(_len118),_key118=0;_key118<_len118;_key118++){data[_key118]=arguments[_key118];}return _possibleConstructorReturn(this,(_ref105=ShortSleevePart.__proto__||Object.getPrototypeOf(ShortSleevePart)).call.apply(_ref105,[this,ShortSleevePart.defaultProperties].concat(data)));}_createClass(ShortSleevePart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var sp=da.splitCurve(ex.shoulder,ex.elbow.out,1-this.sleeveLength);var out=sp.left.p2;out.cp1=sp.left.cp1;sp=da.splitCurve(ex.elbow.in,ex.armpit,(1-this.sleeveLength)*0.9);var bot=sp.left.p2;var armpit=sp.right.p2;armpit.cp1=sp.right.cp1;armpit.cp2=sp.right.cp2;armpit=da.adjustPoint(armpit,-0.1,0);// da.adjustPoint(ex.collarbone, this.thickness * 0.2, this.thickness * 0.5),
var _calcShirtBase$call3=calcShirtBase.call(this,ex);var collarbone=_calcShirtBase$call3.collarbone;collarbone.x-=0.1;var shoulder=da.adjustPoint(ex.shoulder,this.thickness*0.5,0);bot.cp1=da.simpleQuadratic(out,bot,0.5,1);da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,collarbone,ex.deltoids,shoulder,out,bot,armpit,da.connectEndPoints(armpit,collarbone));ctx.fill();ctx.beginPath();da.drawPoints(ctx,collarbone,ex.deltoids,shoulder,out,bot,armpit);ctx.stroke();}}]);return ShortSleevePart;}(da.ClothingPart);Object.assign(ShortSleevePart.prototype,{layer:da.Layer.ARMS,loc:"arm",aboveParts:["parts arm","decorativeParts arm"]});var Sweater=function(_da$Clothing2){_inherits(Sweater,_da$Clothing2);function Sweater(){var _ref106;_classCallCheck(this,Sweater);for(var _len119=arguments.length,data=Array(_len119),_key119=0;_key119<_len119;_key119++){data[_key119]=arguments[_key119];}return _possibleConstructorReturn(this,(_ref106=Sweater.__proto__||Object.getPrototypeOf(Sweater)).call.apply(_ref106,[this,Sweater.defaultProperties].concat(data)));}return Sweater;}(da.Clothing);Object.assign(Sweater.prototype,{clothingLayer:da.Clothes.Layer.MID,/**
         * How much of the stomach should be covered (1 means fully)
         */stomachCoverage:0.8,/**
         * How much of the neck will the collar cover
         */neckCoverage:0.5,/**
         * How far to extend the sleeve (between 0 and 1)
         */sleeveLength:0.8});var LongSleevedSweater=function(_Sweater){_inherits(LongSleevedSweater,_Sweater);function LongSleevedSweater(){var _ref107;_classCallCheck(this,LongSleevedSweater);for(var _len120=arguments.length,data=Array(_len120),_key120=0;_key120<_len120;_key120++){data[_key120]=arguments[_key120];}return _possibleConstructorReturn(this,(_ref107=LongSleevedSweater.__proto__||Object.getPrototypeOf(LongSleevedSweater)).call.apply(_ref107,[this,LongSleevedSweater.defaultProperties].concat(data)));}_createClass(LongSleevedSweater,[{key:"stroke",value:function stroke(){return"#000";}},{key:"fill",value:function fill(){return"hsl(0,10%,20%)";}}]);return LongSleevedSweater;}(Sweater);Object.assign(LongSleevedSweater.prototype,{partPrototypes:[{side:null,Part:SweaterBasePart},{side:null,Part:CoveredBreastPart},{side:da.Part.LEFT,Part:LongSleevePart},{side:da.Part.RIGHT,Part:LongSleevePart}]});LongSleevedSweater.defaultProperties={stomachCoverage:0.7,neckCoverage:0.5,sleeveLength:1};var AsymmetricSleevedSweater=function(_Sweater2){_inherits(AsymmetricSleevedSweater,_Sweater2);function AsymmetricSleevedSweater(){var _ref108;_classCallCheck(this,AsymmetricSleevedSweater);for(var _len121=arguments.length,data=Array(_len121),_key121=0;_key121<_len121;_key121++){data[_key121]=arguments[_key121];}return _possibleConstructorReturn(this,(_ref108=AsymmetricSleevedSweater.__proto__||Object.getPrototypeOf(AsymmetricSleevedSweater)).call.apply(_ref108,[this,AsymmetricSleevedSweater.defaultProperties].concat(data)));}_createClass(AsymmetricSleevedSweater,[{key:"stroke",value:function stroke(){return"#000";}},{key:"fill",value:function fill(){return"hsl(0,10%,20%)";}}]);return AsymmetricSleevedSweater;}(Sweater);Object.assign(AsymmetricSleevedSweater.prototype,{partPrototypes:[{side:null,Part:SweaterBasePart},{side:null,Part:CoveredBreastPart},{side:da.Part.LEFT,Part:ShortSleevePart},{side:da.Part.RIGHT,Part:LongSleevePart}]});AsymmetricSleevedSweater.defaultProperties={stomachCoverage:0.7,neckCoverage:0.5,sleeveLength:1};return{SweaterBasePart:SweaterBasePart,CoveredBreastPart:CoveredBreastPart,LongSleevePart:LongSleevePart,Sweater:Sweater,LongSleevedSweater:LongSleevedSweater,AsymmetricSleevedSweater:AsymmetricSleevedSweater};}(da));/*
 global da
 */Object.assign(da.Clothes,function(da){"use strict";var CoveredButtPart=function(_da$ClothingPart11){_inherits(CoveredButtPart,_da$ClothingPart11);function CoveredButtPart(){var _ref109;_classCallCheck(this,CoveredButtPart);for(var _len122=arguments.length,data=Array(_len122),_key122=0;_key122<_len122;_key122++){data[_key122]=arguments[_key122];}return _possibleConstructorReturn(this,(_ref109=CoveredButtPart.__proto__||Object.getPrototypeOf(CoveredButtPart)).call.apply(_ref109,[this,CoveredButtPart.defaultProperties].concat(data)));}_createClass(CoveredButtPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);ctx.strokeStyle=da.adjustColor(ctx.strokeStyle,{s:-5,l:-5});// top strap
ctx.beginPath();da.drawPoints(ctx,ex.butt.in,ex.butt.out,ex.butt.in);ctx.fill();ctx.stroke();}}]);return CoveredButtPart;}(da.ClothingPart);Object.assign(CoveredButtPart.prototype,{layer:da.Layer.BACK,reflect:true,loc:"butt",aboveParts:["parts butt"]});var LongPantsPart=function(_da$ClothingPart12){_inherits(LongPantsPart,_da$ClothingPart12);function LongPantsPart(){var _ref110;_classCallCheck(this,LongPantsPart);for(var _len123=arguments.length,data=Array(_len123),_key123=0;_key123<_len123;_key123++){data[_key123]=arguments[_key123];}return _possibleConstructorReturn(this,(_ref110=LongPantsPart.__proto__||Object.getPrototypeOf(LongPantsPart)).call.apply(_ref110,[this,LongPantsPart.defaultProperties].concat(data)));}_createClass(LongPantsPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var sp=da.splitCurve(ex.calf.out,ex.ankle.out,this.length);var outBot=sp.left.p2;outBot.cp1=sp.left.cp1;outBot.cp2=sp.left.cp2;sp=da.splitCurve(ex.ankle.in,ex.calf.in,1-this.length);var outIn=sp.left.p2;var calfIn=sp.right.p2;calfIn.cp1=sp.right.cp1;calfIn.cp2=sp.right.cp2;outIn.cp1=da.simpleQuadratic(outBot,outIn,0.5,1);var kneeOut=ex.knee.out;var kneeIn=ex.knee.in;var kneeInTop=ex.knee.intop;var calfOut=ex.calf.out;var thighTop=ex.thigh.top;var thighIn=ex.thigh.in;var _calcPantsTop=calcPantsTop(ex,this.waistHeight);var out=_calcPantsTop.out;var hip=_calcPantsTop.hip;var top=_calcPantsTop.top;var thighOut=_calcPantsTop.thighOut;var groin=_calcPantsTop.groin;// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,top,out,hip,thighOut,kneeOut,calfOut,outBot,outIn,calfIn,kneeIn,kneeInTop,thighIn,thighTop,groin);ctx.fill();ctx.stroke();}}]);return LongPantsPart;}(da.ClothingPart);Object.assign(LongPantsPart.prototype,{layer:da.Layer.FRONT,loc:"leg",aboveParts:["parts leg"]});var MediumPantsPart=function(_da$ClothingPart13){_inherits(MediumPantsPart,_da$ClothingPart13);function MediumPantsPart(){var _ref111;_classCallCheck(this,MediumPantsPart);for(var _len124=arguments.length,data=Array(_len124),_key124=0;_key124<_len124;_key124++){data[_key124]=arguments[_key124];}return _possibleConstructorReturn(this,(_ref111=MediumPantsPart.__proto__||Object.getPrototypeOf(MediumPantsPart)).call.apply(_ref111,[this,MediumPantsPart.defaultProperties].concat(data)));}_createClass(MediumPantsPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var sp=da.splitCurve(ex.knee.out,ex.calf.out,this.length);var outBot=sp.left.p2;outBot.cp1=sp.left.cp1;outBot.cp2=sp.left.cp2;sp=da.splitCurve(ex.calf.in,ex.knee.in,1-this.length);var outIn=sp.left.p2;var kneeIn=sp.right.p2;kneeIn.cp1=sp.right.cp1;kneeIn.cp2=sp.right.cp2;outIn.cp1=da.simpleQuadratic(outBot,outIn,0.75,2);var kneeOut=ex.knee.out;var kneeInTop=ex.knee.intop;var thighTop=ex.thigh.top;var thighIn=ex.thigh.in;var _calcPantsTop2=calcPantsTop(ex,this.waistHeight);var out=_calcPantsTop2.out;var hip=_calcPantsTop2.hip;var top=_calcPantsTop2.top;var thighOut=_calcPantsTop2.thighOut;var groin=_calcPantsTop2.groin;// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,top,out,hip,thighOut,kneeOut,outBot,outIn,kneeIn,kneeInTop,thighIn,thighTop,groin);ctx.fill();ctx.stroke();}}]);return MediumPantsPart;}(da.ClothingPart);Object.assign(MediumPantsPart.prototype,{layer:da.Layer.FRONT,loc:"leg",aboveParts:["parts leg"]});var ShortPantsPart=function(_da$ClothingPart14){_inherits(ShortPantsPart,_da$ClothingPart14);function ShortPantsPart(){var _ref112;_classCallCheck(this,ShortPantsPart);for(var _len125=arguments.length,data=Array(_len125),_key125=0;_key125<_len125;_key125++){data[_key125]=arguments[_key125];}return _possibleConstructorReturn(this,(_ref112=ShortPantsPart.__proto__||Object.getPrototypeOf(ShortPantsPart)).call.apply(_ref112,[this,ShortPantsPart.defaultProperties].concat(data)));}_createClass(ShortPantsPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var sp=da.splitCurve(ex.thigh.out,ex.knee.out,0.35+this.length*0.6);var outBot=sp.left.p2;outBot.cp1=sp.left.cp1;outBot.cp2=sp.left.cp2;sp=da.splitCurve(ex.knee.intop,ex.thigh.in,1-this.length);var outIn=sp.left.p2;var thighIn=sp.right.p2;thighIn.cp1=sp.right.cp1;thighIn.cp2=sp.right.cp2;var thighTop=ex.thigh.top;outIn.cp1=da.simpleQuadratic(outBot,outIn,0.5,1/da.clamp(this.length,0.3,1));var _calcPantsTop3=calcPantsTop(ex,this.waistHeight);var out=_calcPantsTop3.out;var hip=_calcPantsTop3.hip;var top=_calcPantsTop3.top;var thighOut=_calcPantsTop3.thighOut;var groin=_calcPantsTop3.groin;// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,top,out,hip,thighOut,outBot,outIn,thighIn,thighTop,groin);ctx.fill();ctx.stroke();}}]);return ShortPantsPart;}(da.ClothingPart);Object.assign(ShortPantsPart.prototype,{layer:da.Layer.FRONT,loc:"leg",aboveParts:["parts leg"]});var ShortsPart=function(_da$ClothingPart15){_inherits(ShortsPart,_da$ClothingPart15);function ShortsPart(){var _ref113;_classCallCheck(this,ShortsPart);for(var _len126=arguments.length,data=Array(_len126),_key126=0;_key126<_len126;_key126++){data[_key126]=arguments[_key126];}return _possibleConstructorReturn(this,(_ref113=ShortsPart.__proto__||Object.getPrototypeOf(ShortsPart)).call.apply(_ref113,[this,ShortsPart.defaultProperties].concat(data)));}_createClass(ShortsPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var sp=da.splitCurve(ex.hip,ex.thigh.out,0.4+this.length*0.55);var outBot=sp.left.p2;outBot.cp1=sp.left.cp1;outBot.cp2=sp.left.cp2;sp=da.splitCurve(ex.thigh.in,ex.thigh.top,da.clamp(1.25-this.length*0.75,0,1));var outIn=sp.left.p2;var thighTop=sp.right.p2;thighTop.cp1=sp.right.cp1;thighTop.cp2=sp.right.cp2;outIn.cp1=da.simpleQuadratic(outBot,outIn,0.6,-3/da.clamp(this.length,0.3,1));var _calcPantsTop4=calcPantsTop(ex,this.waistHeight);var out=_calcPantsTop4.out;var hip=_calcPantsTop4.hip;var top=_calcPantsTop4.top;var groin=_calcPantsTop4.groin;// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,top,out,hip,outBot,outIn,thighTop,groin);ctx.fill();ctx.stroke();}}]);return ShortsPart;}(da.ClothingPart);Object.assign(ShortsPart.prototype,{layer:da.Layer.FRONT,loc:"leg",aboveParts:["parts leg","parts torso","decorativeParts torso"],belowSameLayerParts:["torso"]});function calcPantsTop(ex,waistHeight){var out,hip,thighOut;if(waistHeight>=-0.1){var sp=da.splitCurve(ex.waist,ex.hip,0.9-waistHeight);out=sp.left.p2;hip=sp.right.p2;hip.cp1=sp.right.cp1;hip.cp2=sp.right.cp2;thighOut=ex.thigh.out;}else{var _sp6=da.splitCurve(ex.hip,ex.thigh.out,-0.1-waistHeight);out=_sp6.left.p2;thighOut=_sp6.right.p2;thighOut.cp1=_sp6.right.cp1;thighOut.cp2=_sp6.right.cp2;}var waistCurve=out.y-ex.hip.y;var top={x:0,y:ex.pelvis.y+waistCurve*1.2};out.cp1={x:out.x*0.5+top.x*0.5,y:top.y};var groin=da.extractPoint(ex.groin);groin.cp1={x:groin.x*0.5+ex.thigh.top.x*0.5,y:groin.y};return{out:out,hip:hip,top:top,thighOut:thighOut,groin:groin};}var Pants=function(_da$Clothing3){_inherits(Pants,_da$Clothing3);function Pants(){var _ref114;_classCallCheck(this,Pants);for(var _len127=arguments.length,data=Array(_len127),_key127=0;_key127<_len127;_key127++){data[_key127]=arguments[_key127];}return _possibleConstructorReturn(this,(_ref114=Pants.__proto__||Object.getPrototypeOf(Pants)).call.apply(_ref114,[this,Pants.defaultProperties].concat(data)));}_createClass(Pants,[{key:"stroke",value:function stroke(){return"hsl(200,30%,25%)";}},{key:"fill",value:function fill(){return"hsl(200, 65%, 10%)";}}]);return Pants;}(da.Clothing);Object.assign(Pants.prototype,{clothingLayer:da.Clothes.Layer.MID,/**
         * How far to extend the pant legs
         * 1 goes all the way down to ankles
         * 0.5 goes to knees
         * anything else is shorter
         */length:1,/**
         * Where along waist-hips does the top of the hips sit
         * Positive values means further towards the waist, 0 is at the
         * hips,
         * negative values means along hips to inner knee
         */waistHeight:0});var LongTightPants=function(_Pants){_inherits(LongTightPants,_Pants);function LongTightPants(){var _ref115;_classCallCheck(this,LongTightPants);for(var _len128=arguments.length,data=Array(_len128),_key128=0;_key128<_len128;_key128++){data[_key128]=arguments[_key128];}return _possibleConstructorReturn(this,(_ref115=LongTightPants.__proto__||Object.getPrototypeOf(LongTightPants)).call.apply(_ref115,[this,LongTightPants.defaultProperties].concat(data)));}return LongTightPants;}(Pants);Object.assign(LongTightPants.prototype,{partPrototypes:[{side:null,Part:CoveredButtPart},{side:da.Part.LEFT,Part:LongPantsPart},{side:da.Part.RIGHT,Part:LongPantsPart}]});LongTightPants.defaultProperties={};var MediumTightPants=function(_Pants2){_inherits(MediumTightPants,_Pants2);function MediumTightPants(){var _ref116;_classCallCheck(this,MediumTightPants);for(var _len129=arguments.length,data=Array(_len129),_key129=0;_key129<_len129;_key129++){data[_key129]=arguments[_key129];}return _possibleConstructorReturn(this,(_ref116=MediumTightPants.__proto__||Object.getPrototypeOf(MediumTightPants)).call.apply(_ref116,[this,MediumTightPants.defaultProperties].concat(data)));}return MediumTightPants;}(Pants);Object.assign(MediumTightPants.prototype,{partPrototypes:[{side:null,Part:CoveredButtPart},{side:da.Part.LEFT,Part:MediumPantsPart},{side:da.Part.RIGHT,Part:MediumPantsPart}]});MediumTightPants.defaultProperties={};var ShortTightPants=function(_Pants3){_inherits(ShortTightPants,_Pants3);function ShortTightPants(){var _ref117;_classCallCheck(this,ShortTightPants);for(var _len130=arguments.length,data=Array(_len130),_key130=0;_key130<_len130;_key130++){data[_key130]=arguments[_key130];}return _possibleConstructorReturn(this,(_ref117=ShortTightPants.__proto__||Object.getPrototypeOf(ShortTightPants)).call.apply(_ref117,[this,ShortTightPants.defaultProperties].concat(data)));}return ShortTightPants;}(Pants);Object.assign(ShortTightPants.prototype,{partPrototypes:[{side:null,Part:CoveredButtPart},{side:da.Part.LEFT,Part:ShortPantsPart},{side:da.Part.RIGHT,Part:ShortPantsPart}]});ShortTightPants.defaultProperties={};var TightShorts=function(_Pants4){_inherits(TightShorts,_Pants4);function TightShorts(){var _ref118;_classCallCheck(this,TightShorts);for(var _len131=arguments.length,data=Array(_len131),_key131=0;_key131<_len131;_key131++){data[_key131]=arguments[_key131];}return _possibleConstructorReturn(this,(_ref118=TightShorts.__proto__||Object.getPrototypeOf(TightShorts)).call.apply(_ref118,[this,TightShorts.defaultProperties].concat(data)));}return TightShorts;}(Pants);Object.assign(TightShorts.prototype,{partPrototypes:[{side:null,Part:CoveredButtPart},{side:da.Part.LEFT,Part:ShortsPart},{side:da.Part.RIGHT,Part:ShortsPart}]});TightShorts.defaultProperties={};return{CoveredButtPart:CoveredButtPart,LongPantsPart:LongPantsPart,MediumPantsPart:MediumPantsPart,ShortPantsPart:ShortPantsPart,ShortsPart:ShortsPart,Pants:Pants,LongTightPants:LongTightPants,MediumTightPants:MediumTightPants,ShortTightPants:ShortTightPants,TightShorts:TightShorts};}(da));/*
 global da
 */Object.assign(da.Clothes,function(da){"use strict";var JacketBaseShading=function(_da$ShadingPart18){_inherits(JacketBaseShading,_da$ShadingPart18);function JacketBaseShading(){var _ref119;_classCallCheck(this,JacketBaseShading);for(var _len132=arguments.length,data=Array(_len132),_key132=0;_key132<_len132;_key132++){data[_key132]=arguments[_key132];}return _possibleConstructorReturn(this,(_ref119=JacketBaseShading.__proto__||Object.getPrototypeOf(JacketBaseShading)).call.apply(_ref119,[this,JacketBaseShading.defaultProperties].concat(data)));}_createClass(JacketBaseShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var _calcJacket$call=calcJacket.call(this,ex);var top=_calcJacket$call.top;var mid=_calcJacket$call.mid;var bot=_calcJacket$call.bot;var chestDisplay=1-this.chestCoverage;var inBot=da.extractPoint(mid);inBot.cp1=bot.cp1;inBot=da.adjustPoint(inBot,-chestDisplay*3,chestDisplay*3);top.cp1=da.adjustPoint(mid.cp2,-chestDisplay*0,-chestDisplay);top.cp2=da.adjustPoint(mid.cp1,-chestDisplay*6,-chestDisplay*2);return[top,mid,bot,inBot,inBot,top];}}]);return JacketBaseShading;}(da.ShadingPart);Object.assign(JacketBaseShading.prototype,{loc:"+torso",layer:da.Layer.GENITALS,forcedSide:da.Part.LEFT});var JacketBasePart=function(_da$ClothingPart16){_inherits(JacketBasePart,_da$ClothingPart16);function JacketBasePart(){var _ref120;_classCallCheck(this,JacketBasePart);for(var _len133=arguments.length,data=Array(_len133),_key133=0;_key133<_len133;_key133++){data[_key133]=arguments[_key133];}return _possibleConstructorReturn(this,(_ref120=JacketBasePart.__proto__||Object.getPrototypeOf(JacketBasePart)).call.apply(_ref120,[this,JacketBasePart.defaultProperties].concat(data)));}_createClass(JacketBasePart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var _calcJacket$call2=calcJacket.call(this,ex);var collarbone=_calcJacket$call2.collarbone;var top=_calcJacket$call2.top;var mid=_calcJacket$call2.mid;var bot=_calcJacket$call2.bot;var outBot=_calcJacket$call2.outBot;var outMid=_calcJacket$call2.outMid;var breastBot=_calcJacket$call2.breastBot;var breastTip=_calcJacket$call2.breastTip;var outTop=_calcJacket$call2.outTop;da.Clothes.simpleStrokeFill(ctx,ex,this);// base
ctx.beginPath();da.drawPoints(ctx,collarbone,top,mid,bot,outBot,outMid,breastBot,breastTip,outTop);ctx.fill();ctx.stroke();// lining
da.setStrokeAndFill(ctx,{stroke:this.liningPattern,fill:da.none},ex);ctx.lineWidth=this.liningWidth;ctx.clip();ctx.beginPath();da.drawPoints(ctx,top,mid,bot,outBot);ctx.stroke();}}]);return JacketBasePart;}(da.ClothingPart);Object.assign(JacketBasePart.prototype,{layer:da.Layer.GENITALS,loc:"torso",reflect:true,aboveParts:["parts neck","parts chest","decorativeParts chest"],belowParts:["head"],shadingParts:[JacketBaseShading]});function calcJacket(ex){var sp=da.splitCurve(ex.trapezius,ex.collarbone,0.2);var top=sp.left.p2;top.cp1=sp.right.cp1;var collarbone=da.extractPoint(ex.collarbone);var mid=void 0,outMid=void 0;var chestDisplay=1-this.chestCoverage;sp=da.splitCurve(ex.waist,ex.hip,this.stomachCoverage);var bot={x:sp.left.p2.x*(0.2+da.clamp(chestDisplay,0,0.8)),y:sp.left.p2.y};var outBot=da.adjustPoint(sp.left.p2,1,-1);// accommodate breasts
var outTop=void 0,breastTip=void 0,breastBot=void 0;var breast=ex.breast;if(breast){mid={x:ex.waist.x*da.clamp(chestDisplay*0.8,0,1),y:bot.y*0.5+breast.bot.y*0.5};mid.cp1={x:breast.center.x*da.clamp(0.6-this.chestCoverage*0.7,0,1)-chestDisplay*2,y:breast.top.y};mid.cp2={x:breast.tip.x*da.clamp(1.2-this.chestCoverage*0.85,0,1),y:breast.tip.y};bot.cp1=da.getSmoothControlPoint(mid,da.clamp(0.2+chestDisplay*0.5,0,1));// outTop = da.adjustPoint(da.extractPoint(breast.top), 1.5, 2);
outTop=da.extractPoint(breast.top);breastTip=da.adjustPoint(da.extractPoint(breast.tip),0.3,0);var breastProminance=breast.tip.x-ex.waist.x;sp=da.splitCurve(ex.waist,ex.hip,da.clamp(breastProminance*0.06-0.2,0,this.stomachCoverage));outMid=sp.left.p2;outMid.cp1=sp.right.cp2;outMid.cp2=sp.right.cp1;outMid=da.adjustPoint(outMid,1,0);if(breastProminance>2){// outMid = null;
sp=da.splitCurve(breast.tip,breast.bot,da.clamp(breastProminance*0.065,0,1));breastBot=da.adjustPoint(sp.left.p2,breastProminance*0.05,-breastProminance*0.05-1);breastBot.cp1=da.getSmoothControlPoint(outMid,1);breastTip.cp1=sp.left.cp2;breastTip.cp2=sp.left.cp1;breastTip.cp2.y-=da.clamp(3-breastProminance*0.2,0,5);}outTop.cp1=breast.tip.cp2;outTop.cp2=breast.tip.cp1;}else{mid={x:ex.waist.x*0.5,y:ex.waist.y};mid.cp1=da.simpleQuadratic(top,mid,0.5,3);bot.cp1=da.simpleQuadratic(mid,bot,0.5,-5);outMid=da.extractPoint(ex.waist);outMid.cp1=ex.hip.cp2;outMid.cp2=ex.hip.cp1;outMid=da.adjustPoint(outMid,outMid.x*0.05,0);outTop=da.extractPoint(ex.armpit);}return{collarbone:collarbone,top:top,mid:mid,bot:bot,outBot:outBot,outMid:outMid,breastBot:breastBot,breastTip:breastTip,outTop:outTop};}/**
     * Long sleeve means between elbow and wrist
     */var MediumLooseSleevePart=function(_da$ClothingPart17){_inherits(MediumLooseSleevePart,_da$ClothingPart17);function MediumLooseSleevePart(){var _ref121;_classCallCheck(this,MediumLooseSleevePart);for(var _len134=arguments.length,data=Array(_len134),_key134=0;_key134<_len134;_key134++){data[_key134]=arguments[_key134];}return _possibleConstructorReturn(this,(_ref121=MediumLooseSleevePart.__proto__||Object.getPrototypeOf(MediumLooseSleevePart)).call.apply(_ref121,[this,MediumLooseSleevePart.defaultProperties].concat(data)));}_createClass(MediumLooseSleevePart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var collarbone=da.extractPoint(ex.collarbone);collarbone.x-=0.3;var shoulder=da.adjustPoint(ex.shoulder,1,0);shoulder.x+=1;var bot={x:ex.armpit.x*0.5+ex.elbow.in.x*0.5,y:ex.elbow.in.y};var outBot={x:ex.elbow.out.x+4,y:bot.y+2};bot.cp1={x:outBot.x*0.7+bot.x*0.3,y:outBot.y};bot.cp2={x:outBot.x*0.3+bot.x*0.7,y:bot.y-1};var _calcJacket$call3=calcJacket.call(this,ex);var outTop=_calcJacket$call3.outTop;outTop.x-=0.3;da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,collarbone,shoulder,outBot,bot,outTop);ctx.fill();ctx.stroke();da.setStrokeAndFill(ctx,{stroke:this.liningPattern,fill:da.none},ex);ctx.lineWidth=this.liningWidth;ctx.clip();ctx.beginPath();da.drawPoints(ctx,outBot,bot);ctx.stroke();}}]);return MediumLooseSleevePart;}(da.ClothingPart);Object.assign(MediumLooseSleevePart.prototype,{layer:da.Layer.ARMS,loc:"arm",aboveParts:["parts arm","decorativeParts arm","parts hand"]});var Jacket=function(_da$Clothing4){_inherits(Jacket,_da$Clothing4);function Jacket(){var _ref122;_classCallCheck(this,Jacket);for(var _len135=arguments.length,data=Array(_len135),_key135=0;_key135<_len135;_key135++){data[_key135]=arguments[_key135];}return _possibleConstructorReturn(this,(_ref122=Jacket.__proto__||Object.getPrototypeOf(Jacket)).call.apply(_ref122,[this,Jacket.defaultProperties].concat(data)));}return Jacket;}(da.Clothing);Object.assign(Jacket.prototype,{clothingLayer:da.Clothes.Layer.MID,/**
         * How much of the stomach should be covered (1 means fully)
         */stomachCoverage:0.8,/**
         * How much of the chest should be covered (horizontally)
         */chestCoverage:0.5,/**
         * How far to extend the sleeve (between 0 and 1)
         */sleeveLength:0.8,/**
         * How wide the patterned lining is
         */liningWidth:1,liningPattern:"#000",thickness:0.8});var LooseJacket=function(_Jacket){_inherits(LooseJacket,_Jacket);function LooseJacket(){var _ref123;_classCallCheck(this,LooseJacket);for(var _len136=arguments.length,data=Array(_len136),_key136=0;_key136<_len136;_key136++){data[_key136]=arguments[_key136];}return _possibleConstructorReturn(this,(_ref123=LooseJacket.__proto__||Object.getPrototypeOf(LooseJacket)).call.apply(_ref123,[this,LooseJacket.defaultProperties].concat(data)));}_createClass(LooseJacket,[{key:"stroke",value:function stroke(){return"#000";}},{key:"fill",value:function fill(){return"hsl(0,10%,20%)";}}]);return LooseJacket;}(Jacket);Object.assign(LooseJacket.prototype,{partPrototypes:[{side:null,Part:JacketBasePart},{side:da.Part.LEFT,Part:MediumLooseSleevePart},{side:da.Part.RIGHT,Part:MediumLooseSleevePart}]});LooseJacket.defaultProperties={stomachCoverage:0.7,sleeveLength:1};return{JacketBasePart:JacketBasePart,MediumLooseSleevePart:MediumLooseSleevePart,Jacket:Jacket,LooseJacket:LooseJacket};}(da));/*
 global da
 */Object.assign(da.Clothes,function(da){"use strict";var LeftBaseShoeShading=function(_da$ShadingPart19){_inherits(LeftBaseShoeShading,_da$ShadingPart19);function LeftBaseShoeShading(){var _ref124;_classCallCheck(this,LeftBaseShoeShading);for(var _len137=arguments.length,data=Array(_len137),_key137=0;_key137<_len137;_key137++){data[_key137]=arguments[_key137];}return _possibleConstructorReturn(this,(_ref124=LeftBaseShoeShading.__proto__||Object.getPrototypeOf(LeftBaseShoeShading)).call.apply(_ref124,[this,LeftBaseShoeShading.defaultProperties].concat(data)));}_createClass(LeftBaseShoeShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var toeBox=ex.toe.toebox;var sp=da.splitCurve(ex.toe.out,ex.toe.in,0.5);var inner=sp.right.p2;var bot=sp.left.p2;bot.cp1=da.simpleQuadratic(toeBox,bot,0.5,1);inner.cp1=sp.right.cp1;inner.cp2=sp.right.cp2;var ankleInBot=da.clone(ex.ankle.inbot);toeBox.cp1={x:ankleInBot.x-1,y:ankleInBot.y-5};toeBox.cp2={x:toeBox.x-3,y:toeBox.y};return[toeBox,bot,inner,ankleInBot,toeBox];}}]);return LeftBaseShoeShading;}(da.ShadingPart);Object.assign(LeftBaseShoeShading.prototype,{loc:"left feet",layer:da.Layer.FRONT});var RightBaseShoeShading=function(_da$ShadingPart20){_inherits(RightBaseShoeShading,_da$ShadingPart20);function RightBaseShoeShading(){var _ref125;_classCallCheck(this,RightBaseShoeShading);for(var _len138=arguments.length,data=Array(_len138),_key138=0;_key138<_len138;_key138++){data[_key138]=arguments[_key138];}return _possibleConstructorReturn(this,(_ref125=RightBaseShoeShading.__proto__||Object.getPrototypeOf(RightBaseShoeShading)).call.apply(_ref125,[this,RightBaseShoeShading.defaultProperties].concat(data)));}_createClass(RightBaseShoeShading,[{key:"calcDrawPoints",value:function calcDrawPoints(ex){var toeBox=ex.toe.toebox;var sp=da.splitCurve(ex.toe.out,ex.toe.in,0.8);var bot=sp.left.p2;bot.cp1=da.simpleQuadratic(toeBox,bot,0.5,-1);var ankleOutBot=da.extractPoint(ex.ankle.outbot);ankleOutBot.cp1=da.simpleQuadratic(bot,ankleOutBot,0.5,-10);toeBox.cp1=da.simpleQuadratic(ankleOutBot,toeBox,0.7,3);return[ankleOutBot,toeBox,bot,ankleOutBot];}}]);return RightBaseShoeShading;}(da.ShadingPart);Object.assign(RightBaseShoeShading.prototype,{loc:"right feet",layer:da.Layer.FRONT});var ShoeSidePart=function(_da$ClothingPart18){_inherits(ShoeSidePart,_da$ClothingPart18);function ShoeSidePart(){var _ref126;_classCallCheck(this,ShoeSidePart);for(var _len139=arguments.length,data=Array(_len139),_key139=0;_key139<_len139;_key139++){data[_key139]=arguments[_key139];}return _possibleConstructorReturn(this,(_ref126=ShoeSidePart.__proto__||Object.getPrototypeOf(ShoeSidePart)).call.apply(_ref126,[this,ShoeSidePart.defaultProperties].concat(data)));}return ShoeSidePart;}(da.ClothingPart);Object.assign(ShoeSidePart.prototype,{layer:da.Layer.BACK,loc:"feet"});var ShoePart=function(_da$ClothingPart19){_inherits(ShoePart,_da$ClothingPart19);function ShoePart(){var _ref127;_classCallCheck(this,ShoePart);for(var _len140=arguments.length,data=Array(_len140),_key140=0;_key140<_len140;_key140++){data[_key140]=arguments[_key140];}return _possibleConstructorReturn(this,(_ref127=ShoePart.__proto__||Object.getPrototypeOf(ShoePart)).call.apply(_ref127,[this,ShoePart.defaultProperties].concat(data)));}return ShoePart;}(da.ClothingPart);Object.assign(ShoePart.prototype,{layer:da.Layer.FRONT,loc:"feet",aboveParts:["parts feet","parts leg"],belowParts:["shadingParts feet"]});var ShoeBasePart=function(_ShoePart){_inherits(ShoeBasePart,_ShoePart);function ShoeBasePart(){var _ref128;_classCallCheck(this,ShoeBasePart);for(var _len141=arguments.length,data=Array(_len141),_key141=0;_key141<_len141;_key141++){data[_key141]=arguments[_key141];}return _possibleConstructorReturn(this,(_ref128=ShoeBasePart.__proto__||Object.getPrototypeOf(ShoeBasePart)).call.apply(_ref128,[this,ShoeBasePart.defaultProperties].concat(data)));}_createClass(ShoeBasePart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){ex.toe.toebox={x:ex.toe.center.x,y:ex.toe.center.y+this.toeHeight};var outTop=da.extractPoint(ex.ankle.out);var out=ex.ankle.outbot;var outBot=ex.toe.out;var inBot=ex.toe.in;var inner=da.clone(ex.ankle.inbot);var inTop=ex.ankle.in;inner.cp2.x-=2;outTop.cp1=da.simpleQuadratic(inTop,outTop,0.5,this.tongueDeflection);// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,outTop,out,outBot,inBot,inner,inTop,outTop);ctx.fill();ctx.stroke();}}]);return ShoeBasePart;}(ShoePart);Object.assign(ShoeBasePart.prototype,{layer:da.Layer.FRONT,loc:"feet",shadingParts:[LeftBaseShoeShading,RightBaseShoeShading]});var Shoe=function(_da$Clothing5){_inherits(Shoe,_da$Clothing5);function Shoe(){var _ref129;_classCallCheck(this,Shoe);for(var _len142=arguments.length,data=Array(_len142),_key142=0;_key142<_len142;_key142++){data[_key142]=arguments[_key142];}return _possibleConstructorReturn(this,(_ref129=Shoe.__proto__||Object.getPrototypeOf(Shoe)).call.apply(_ref129,[this,Shoe.defaultProperties].concat(data)));}return Shoe;}(da.Clothing);Object.assign(Shoe.prototype,{clothingLayer:da.Clothes.Layer.MID,/**
         * How high the heel is to lift the player's height
         */shoeHeight:0,/**
         * How high the tongue of the shoe (assuming it has one) goes up
         */tongueDeflection:2,/**
         * How high the toe-box of the shoe is
         */toeHeight:0,Mods:{feetLength:-10,feetWidth:-2}});var FlatShoes=function(_Shoe){_inherits(FlatShoes,_Shoe);function FlatShoes(){var _ref130;_classCallCheck(this,FlatShoes);for(var _len143=arguments.length,data=Array(_len143),_key143=0;_key143<_len143;_key143++){data[_key143]=arguments[_key143];}return _possibleConstructorReturn(this,(_ref130=FlatShoes.__proto__||Object.getPrototypeOf(FlatShoes)).call.apply(_ref130,[this,FlatShoes.defaultProperties].concat(data)));}_createClass(FlatShoes,[{key:"stroke",value:function stroke(){return"#000";}},{key:"fill",value:function fill(){return"hsl(0,10%,20%)";}}]);return FlatShoes;}(Shoe);Object.assign(FlatShoes.prototype,{partPrototypes:[{side:da.Part.LEFT,Part:ShoeBasePart},{side:da.Part.RIGHT,Part:ShoeBasePart}]});FlatShoes.defaultProperties={shoeHeight:0};return{ShoeSidePart:ShoeSidePart,ShoeBasePart:ShoeBasePart,Shoe:Shoe,FlatShoes:FlatShoes};}(da));/*
 global da
 */Object.assign(da.Clothes,function(da){"use strict";var HeelPart=function(_da$ClothingPart20){_inherits(HeelPart,_da$ClothingPart20);function HeelPart(){var _ref131;_classCallCheck(this,HeelPart);for(var _len144=arguments.length,data=Array(_len144),_key144=0;_key144<_len144;_key144++){data[_key144]=arguments[_key144];}return _possibleConstructorReturn(this,(_ref131=HeelPart.__proto__||Object.getPrototypeOf(HeelPart)).call.apply(_ref131,[this,HeelPart.defaultProperties].concat(data)));}return HeelPart;}(da.ClothingPart);Object.assign(HeelPart.prototype,{layer:da.Layer.FRONT,loc:"feet",aboveParts:["parts feet","parts leg"],belowParts:["shadingParts feet"]});var HeelBaseShine=function(_HeelPart){_inherits(HeelBaseShine,_HeelPart);function HeelBaseShine(){var _ref132;_classCallCheck(this,HeelBaseShine);for(var _len145=arguments.length,data=Array(_len145),_key145=0;_key145<_len145;_key145++){data[_key145]=arguments[_key145];}return _possibleConstructorReturn(this,(_ref132=HeelBaseShine.__proto__||Object.getPrototypeOf(HeelBaseShine)).call.apply(_ref132,[this,HeelBaseShine.defaultProperties].concat(data)));}_createClass(HeelBaseShine,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){// fan shaped shine
var _calcHeels$call=calcHeels.call(this,ex);var bot=_calcHeels$call.bot;var outBot=_calcHeels$call.outBot;var out=_calcHeels$call.out;bot.y+=3;bot.x+=1;var left=da.adjustPoint(outBot,-1,0.5);var top=da.adjustPoint(out,-0.5,-4.8);left.cp1=da.simpleQuadratic(bot,left,0.7,-1);top.cp1=da.simpleQuadratic(left,top,0.5,-0.5);bot.cp1=da.simpleQuadratic(top,bot,0.3,1);ctx.fillStyle=da.shine;ctx.beginPath();da.drawPoints(ctx,bot,left,top,bot);ctx.fill();}}]);return HeelBaseShine;}(HeelPart);Object.assign(HeelBaseShine.prototype,{layer:da.Layer.ARMS});var HeelBasePart=function(_HeelPart2){_inherits(HeelBasePart,_HeelPart2);function HeelBasePart(){var _ref133;_classCallCheck(this,HeelBasePart);for(var _len146=arguments.length,data=Array(_len146),_key146=0;_key146<_len146;_key146++){data[_key146]=arguments[_key146];}return _possibleConstructorReturn(this,(_ref133=HeelBasePart.__proto__||Object.getPrototypeOf(HeelBasePart)).call.apply(_ref133,[this,HeelBasePart.defaultProperties].concat(data)));}_createClass(HeelBasePart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var toe=ex.toe;toe.toebox={x:toe.center.x,y:toe.center.y+this.toeHeight};var _calcHeels$call2=calcHeels.call(this,ex);var out=_calcHeels$call2.out;var outBot=_calcHeels$call2.outBot;var bot=_calcHeels$call2.bot;var inBot=_calcHeels$call2.inBot;var inTop=_calcHeels$call2.inTop;var tongue=_calcHeels$call2.tongue;bot.cp1=da.simpleQuadratic(outBot,bot,0.6,2);inBot.cp1=da.simpleQuadratic(bot,inBot,0.6,2);tongue.cp1=da.scale(inTop,inBot,0.5);tongue.cp2={x:tongue.x-4,y:tongue.y};out.cp1=da.getSmoothControlPoint(tongue,1);out.cp2=da.scale(out,outBot,0.5);outBot.cp1=da.simpleQuadratic(out,outBot,0.8,0.6);inTop.cp1=da.simpleQuadratic(inBot,inTop,0.1,1);da.Clothes.simpleStrokeFill(ctx,ex,this);ctx.beginPath();da.drawPoints(ctx,out,outBot,bot,inBot,inTop,tongue,out);ctx.fill();// back of the heels
var backTop=da.extractPoint(ex.ankle.in);var sp=da.splitCurve(ex.toe.in,ex.ankle.inbot,0.6);var backBot=sp.left.p2;backBot.cp1=da.simpleQuadratic(backTop,backBot,0.2,-3.3);backTop.cp1=da.simpleQuadratic(backBot,backTop,0.7,1.4);ctx.beginPath();da.drawPoints(ctx,backTop,backBot,backTop);ctx.fill();}}]);return HeelBasePart;}(HeelPart);Object.assign(HeelBasePart.prototype,{});var HeelStrapPart=function(_HeelPart3){_inherits(HeelStrapPart,_HeelPart3);function HeelStrapPart(){var _ref134;_classCallCheck(this,HeelStrapPart);for(var _len147=arguments.length,data=Array(_len147),_key147=0;_key147<_len147;_key147++){data[_key147]=arguments[_key147];}return _possibleConstructorReturn(this,(_ref134=HeelStrapPart.__proto__||Object.getPrototypeOf(HeelStrapPart)).call.apply(_ref134,[this,HeelStrapPart.defaultProperties].concat(data)));}_createClass(HeelStrapPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var left=da.extractPoint(ex.ankle.out);var right=da.extractPoint(ex.ankle.in);right.cp1=da.simpleQuadratic(left,right,0.5,2);da.setStrokeAndFill(ctx,{fill:this.fill,stroke:this.fill},ex);ctx.lineWidth=this.strapWidth;ctx.beginPath();da.drawPoints(ctx,left,right);ctx.stroke();}}]);return HeelStrapPart;}(HeelPart);Object.assign(HeelBasePart.prototype,{});function calcHeels(ex){var toe=ex.toe;// draw from outside in
var sp=da.splitCurve(ex.ankle.outbot,toe.out,0.7);var out=sp.left.p2;var outBot={x:toe.out.x+2,y:toe.in.y+2};var bot={x:toe.out.x*0.45+toe.in.x*0.55,y:toe.in.y-this.heelPointiness};var inBot={x:toe.in.x-2.5,y:toe.in.y+2};sp=da.splitCurve(toe.in,ex.ankle.inbot,0.6);var inTop=sp.left.p2;var tongue={x:bot.x,y:toe.center.y+this.toeCoverage};return{out:out,outBot:outBot,bot:bot,inBot:inBot,inTop:inTop,tongue:tongue};}var HeelSideBaseClosedPart=function(_da$Clothes$ShoeSideP){_inherits(HeelSideBaseClosedPart,_da$Clothes$ShoeSideP);function HeelSideBaseClosedPart(){var _ref135;_classCallCheck(this,HeelSideBaseClosedPart);for(var _len148=arguments.length,data=Array(_len148),_key148=0;_key148<_len148;_key148++){data[_key148]=arguments[_key148];}return _possibleConstructorReturn(this,(_ref135=HeelSideBaseClosedPart.__proto__||Object.getPrototypeOf(HeelSideBaseClosedPart)).call.apply(_ref135,[this,HeelSideBaseClosedPart.defaultProperties].concat(data)));}_createClass(HeelSideBaseClosedPart,[{key:"renderShoeSidePart",value:function renderShoeSidePart(ex,ctx){var _calcHeelBaseClosed$c=calcHeelBaseClosed.call(this,ex);var toeTip=_calcHeelBaseClosed$c.toeTip;var soleBot=_calcHeelBaseClosed$c.soleBot;var archTip=_calcHeelBaseClosed$c.archTip;var heelTip=_calcHeelBaseClosed$c.heelTip;var heelTipIn=_calcHeelBaseClosed$c.heelTipIn;var heelBack=_calcHeelBaseClosed$c.heelBack;var counterTip=_calcHeelBaseClosed$c.counterTip;var vamp=_calcHeelBaseClosed$c.vamp;soleBot.cp1={x:toeTip.x-3,y:toeTip.y-3};soleBot.cp2={x:soleBot.x-8,y:soleBot.y};archTip.cp1={x:soleBot.x+28,y:soleBot.y};archTip.cp2={x:archTip.x-20,y:archTip.y-10};heelTip.cp1={x:heelTip.x,y:archTip.y};heelBack.cp1={x:heelTip.x+2,y:heelTip.y+10};heelBack.cp2={x:heelBack.x-1,y:heelBack.y};counterTip.cp1={x:heelBack.x+3,y:heelBack.y+10};counterTip.cp2={x:counterTip.x+3,y:counterTip.y-5};vamp.cp1={x:counterTip.x-19,y:counterTip.y-5};vamp.cp2={x:vamp.x+18,y:vamp.y-10};ctx.beginPath();da.setStrokeAndFill(ctx,{stroke:this.fill,fill:this.fill},ex);da.drawPoints(ctx,toeTip,soleBot,archTip,heelTip,heelTipIn,heelBack,counterTip,vamp,toeTip);ctx.fill();}}]);return HeelSideBaseClosedPart;}(da.Clothes.ShoeSidePart);var HeelSideSimpleStrapPart=function(_da$Clothes$ShoeSideP2){_inherits(HeelSideSimpleStrapPart,_da$Clothes$ShoeSideP2);function HeelSideSimpleStrapPart(){var _ref136;_classCallCheck(this,HeelSideSimpleStrapPart);for(var _len149=arguments.length,data=Array(_len149),_key149=0;_key149<_len149;_key149++){data[_key149]=arguments[_key149];}return _possibleConstructorReturn(this,(_ref136=HeelSideSimpleStrapPart.__proto__||Object.getPrototypeOf(HeelSideSimpleStrapPart)).call.apply(_ref136,[this,HeelSideSimpleStrapPart.defaultProperties].concat(data)));}_createClass(HeelSideSimpleStrapPart,[{key:"renderShoeSidePart",value:function renderShoeSidePart(ex,ctx){var _calcHeelBaseClosed$c2=calcHeelBaseClosed.call(this,ex);var counterTip=_calcHeelBaseClosed$c2.counterTip;var strapRadius=10;var center=da.adjustPoint(counterTip,-strapRadius,0);ctx.beginPath();da.setStrokeAndFill(ctx,{stroke:this.fill,fill:this.fill},ex);ctx.lineWidth=2;ctx.ellipse(center.x-1,center.y-2,strapRadius,3.5,-0.95*Math.PI,0,2*Math.PI);ctx.stroke();}}]);return HeelSideSimpleStrapPart;}(da.Clothes.ShoeSidePart);function calcHeelBaseClosed(){var toeTip={x:5,y:12};var soleBot={x:toeTip.x+13,y:toeTip.y-9};var archTip={x:toeTip.x+65-this.shoeHeight*4,y:toeTip.y+this.shoeHeight*5};var heelTip={x:archTip.x+6-this.heelTipWidth*0.5,y:soleBot.y};var heelTipIn={x:heelTip.x+this.heelTipWidth*0.5,y:heelTip.y};var heelBack={x:archTip.x+10,y:archTip.y};var counterTip={x:archTip.x+4,y:heelBack.y+19};var vamp={x:toeTip.x+10+this.toeCoverage*0.5,y:toeTip.y+4+this.toeCoverage*0.5};return{toeTip:toeTip,soleBot:soleBot,archTip:archTip,heelTip:heelTip,heelTipIn:heelTipIn,heelBack:heelBack,counterTip:counterTip,vamp:vamp};}var Heels=function(_da$Clothing6){_inherits(Heels,_da$Clothing6);_createClass(Heels,[{key:"fill",value:function fill(){return"#000";}}]);function Heels(){var _ref137;_classCallCheck(this,Heels);for(var _len150=arguments.length,data=Array(_len150),_key150=0;_key150<_len150;_key150++){data[_key150]=arguments[_key150];}// resolve dynamics between modifiers
var _this137=_possibleConstructorReturn(this,(_ref137=Heels.__proto__||Object.getPrototypeOf(Heels)).call.apply(_ref137,[this,Heels.defaultProperties].concat(data)));_this137.Mods=Object.assign({},_this137.Mods);_this137.Mods.feetLength+=(_this137.shoeHeight-_this137.platformHeight)*4;_this137.Mods.feetWidth-=_this137.shoeHeight-_this137.platformHeight;_this137.heelPointiness=_this137.basePointiness-(_this137.shoeHeight-_this137.platformHeight)*0.5;return _this137;}return Heels;}(da.Clothing);Object.assign(Heels.prototype,{clothingLayer:da.Clothes.Layer.MID,thickness:1,/**
         * How high the heel is to lift the player's height
         */shoeHeight:3,platformHeight:0,heelTipWidth:5,basePointiness:5,toeCoverage:-1.5,Mods:{feetWidth:-10,feetLength:0}});var ClosedToePumps=function(_Heels){_inherits(ClosedToePumps,_Heels);function ClosedToePumps(){var _ref138;_classCallCheck(this,ClosedToePumps);for(var _len151=arguments.length,data=Array(_len151),_key151=0;_key151<_len151;_key151++){data[_key151]=arguments[_key151];}return _possibleConstructorReturn(this,(_ref138=ClosedToePumps.__proto__||Object.getPrototypeOf(ClosedToePumps)).call.apply(_ref138,[this,ClosedToePumps.defaultProperties].concat(data)));}return ClosedToePumps;}(Heels);Object.assign(ClosedToePumps.prototype,{partPrototypes:[{side:da.Part.LEFT,Part:HeelBasePart},{side:da.Part.RIGHT,Part:HeelBasePart},{side:da.Part.LEFT,Part:HeelBaseShine},{side:da.Part.RIGHT,Part:HeelSideBaseClosedPart}]});ClosedToePumps.defaultProperties={};var ClosedToeStrappedPumps=function(_Heels2){_inherits(ClosedToeStrappedPumps,_Heels2);function ClosedToeStrappedPumps(){var _ref139;_classCallCheck(this,ClosedToeStrappedPumps);for(var _len152=arguments.length,data=Array(_len152),_key152=0;_key152<_len152;_key152++){data[_key152]=arguments[_key152];}return _possibleConstructorReturn(this,(_ref139=ClosedToeStrappedPumps.__proto__||Object.getPrototypeOf(ClosedToeStrappedPumps)).call.apply(_ref139,[this,ClosedToeStrappedPumps.defaultProperties].concat(data)));}return ClosedToeStrappedPumps;}(Heels);Object.assign(ClosedToeStrappedPumps.prototype,{strapWidth:1.5,partPrototypes:[{side:da.Part.LEFT,Part:HeelBasePart},{side:da.Part.RIGHT,Part:HeelBasePart},{side:da.Part.LEFT,Part:HeelStrapPart},{side:da.Part.RIGHT,Part:HeelStrapPart},{side:da.Part.LEFT,Part:HeelBaseShine},{side:da.Part.RIGHT,Part:HeelSideBaseClosedPart},{side:da.Part.RIGHT,Part:HeelSideSimpleStrapPart}]});return{HeelBasePart:HeelBasePart,Heels:Heels,ClosedToePumps:ClosedToePumps,ClosedToeStrappedPumps:ClosedToeStrappedPumps};}(da));/*
 global da
 */Object.assign(da.Clothes,function(da){"use strict";var SockPart=function(_da$ClothingPart21){_inherits(SockPart,_da$ClothingPart21);function SockPart(){var _ref140;_classCallCheck(this,SockPart);for(var _len153=arguments.length,data=Array(_len153),_key153=0;_key153<_len153;_key153++){data[_key153]=arguments[_key153];}return _possibleConstructorReturn(this,(_ref140=SockPart.__proto__||Object.getPrototypeOf(SockPart)).call.apply(_ref140,[this,SockPart.defaultProperties].concat(data)));}return SockPart;}(da.ClothingPart);Object.assign(SockPart.prototype,{layer:da.Layer.FRONT,loc:"feet",aboveParts:["parts feet","parts leg"]});var ShortSockPart=function(_SockPart){_inherits(ShortSockPart,_SockPart);function ShortSockPart(){var _ref141;_classCallCheck(this,ShortSockPart);for(var _len154=arguments.length,data=Array(_len154),_key154=0;_key154<_len154;_key154++){data[_key154]=arguments[_key154];}return _possibleConstructorReturn(this,(_ref141=ShortSockPart.__proto__||Object.getPrototypeOf(ShortSockPart)).call.apply(_ref141,[this,ShortSockPart.defaultProperties].concat(data)));}_createClass(ShortSockPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var outTop=da.extractPoint(ex.ankle.out);var out=ex.ankle.outbot;var outBot=ex.toe.out;var inBot=ex.toe.in;var inner=ex.ankle.inbot;var inTop=ex.ankle.in;outTop.cp1=da.simpleQuadratic(inTop,outTop,0.5,-3);// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,outTop,out,outBot,inBot,inner,inTop,outTop);ctx.fill();ctx.stroke();}}]);return ShortSockPart;}(SockPart);var MediumSockPart=function(_SockPart2){_inherits(MediumSockPart,_SockPart2);function MediumSockPart(){var _ref142;_classCallCheck(this,MediumSockPart);for(var _len155=arguments.length,data=Array(_len155),_key155=0;_key155<_len155;_key155++){data[_key155]=arguments[_key155];}return _possibleConstructorReturn(this,(_ref142=MediumSockPart.__proto__||Object.getPrototypeOf(MediumSockPart)).call.apply(_ref142,[this,MediumSockPart.defaultProperties].concat(data)));}_createClass(MediumSockPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var outT=1-this.length;if(this.length>0.75){outT+=(this.length-0.75)*0.3;}var sp=da.splitCurve(ex.calf.out,ex.ankle.out,outT);var outTop=sp.left.p2;var out=sp.right.p2;out.cp1=sp.right.cp1;out.cp2=sp.right.cp2;sp=da.splitCurve(ex.ankle.in,ex.calf.in,this.length);var inTop=sp.left.p2;inTop.cp1=sp.left.cp1;inTop.cp2=sp.left.cp2;outTop.cp1=da.simpleQuadratic(inTop,outTop,0.5,-2.5+this.length);// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,outTop,out,ex.ankle.outbot,ex.toe.out,ex.toe.in,ex.ankle.inbot,ex.ankle.in,inTop,outTop);ctx.fill();ctx.stroke();}}]);return MediumSockPart;}(SockPart);var LongSockPart=function(_SockPart3){_inherits(LongSockPart,_SockPart3);function LongSockPart(){var _ref143;_classCallCheck(this,LongSockPart);for(var _len156=arguments.length,data=Array(_len156),_key156=0;_key156<_len156;_key156++){data[_key156]=arguments[_key156];}return _possibleConstructorReturn(this,(_ref143=LongSockPart.__proto__||Object.getPrototypeOf(LongSockPart)).call.apply(_ref143,[this,LongSockPart.defaultProperties].concat(data)));}_createClass(LongSockPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var outT=1-this.length;var sp=da.splitCurve(ex.knee.out,ex.calf.out,outT);var outTop=sp.left.p2;var out=sp.right.p2;out.cp1=sp.right.cp1;out.cp2=sp.right.cp2;var inT=this.length;if(this.length<0.7){inT+=(0.7-this.length)*0.3;}sp=da.splitCurve(ex.calf.in,ex.knee.in,inT);var inTop=sp.left.p2;inTop.cp1=sp.left.cp1;inTop.cp2=sp.left.cp2;outTop.cp1=da.simpleQuadratic(inTop,outTop,0.5,-2.5+this.length);// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,outTop,out,ex.ankle.out,ex.ankle.outbot,ex.toe.out,ex.toe.in,ex.ankle.inbot,ex.ankle.in,ex.calf.in,inTop,outTop);ctx.fill();ctx.stroke();}}]);return LongSockPart;}(SockPart);var ThighHighPart=function(_SockPart4){_inherits(ThighHighPart,_SockPart4);function ThighHighPart(){var _ref144;_classCallCheck(this,ThighHighPart);for(var _len157=arguments.length,data=Array(_len157),_key157=0;_key157<_len157;_key157++){data[_key157]=arguments[_key157];}return _possibleConstructorReturn(this,(_ref144=ThighHighPart.__proto__||Object.getPrototypeOf(ThighHighPart)).call.apply(_ref144,[this,ThighHighPart.defaultProperties].concat(data)));}_createClass(ThighHighPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var outT=0.5-this.length*0.5;var sp=da.splitCurve(ex.thigh.out,ex.knee.out,outT);var outTop=sp.left.p2;var out=sp.right.p2;out.cp1=sp.right.cp1;out.cp2=sp.right.cp2;var inT=this.length*0.5;// if (this.length < 0.7) {
//     inT += (0.7 - this.length) * 0.3;
// }
sp=da.splitCurve(ex.thigh.in,ex.thigh.top,inT);var inTop=sp.left.p2;inTop.cp1=sp.left.cp1;inTop.cp2=sp.left.cp2;outTop.cp1=da.simpleQuadratic(inTop,outTop,0.5,2.5+this.length);// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,this);// top strap
ctx.beginPath();da.drawPoints(ctx,outTop,out,ex.calf.out,ex.ankle.out,ex.ankle.outbot,ex.toe.out,ex.toe.in,ex.ankle.inbot,ex.ankle.in,ex.calf.in,ex.knee.in,ex.knee.intop,inTop);ctx.stroke();da.drawPoints(ctx,null,outTop);ctx.fill();}}]);return ThighHighPart;}(SockPart);var ThighHighBandPart=function(_SockPart5){_inherits(ThighHighBandPart,_SockPart5);function ThighHighBandPart(){var _ref145;_classCallCheck(this,ThighHighBandPart);for(var _len158=arguments.length,data=Array(_len158),_key158=0;_key158<_len158;_key158++){data[_key158]=arguments[_key158];}return _possibleConstructorReturn(this,(_ref145=ThighHighBandPart.__proto__||Object.getPrototypeOf(ThighHighBandPart)).call.apply(_ref145,[this,ThighHighBandPart.defaultProperties].concat(data)));}_createClass(ThighHighBandPart,[{key:"renderClothingPoints",value:function renderClothingPoints(ex,ctx){var outT=0.5-this.length*0.5-this.bandWidth*0.03;var sp=da.splitCurve(ex.thigh.out,ex.knee.out,outT);var outTop=sp.left.p2;sp=da.splitCurve(outTop,ex.knee.out,0.1*this.bandWidth);var out=sp.left.p2;out.cp1=sp.left.cp1;out.cp2=sp.left.cp2;var inT=this.length*0.5+this.bandWidth*0.03;sp=da.splitCurve(ex.thigh.in,ex.thigh.top,inT);var inTop=sp.left.p2;sp=da.splitCurve(ex.thigh.in,inTop,0.2*this.bandWidth);var inBot=sp.left.p2;inTop.cp1=sp.right.cp1;inTop.cp2=sp.right.cp2;inBot.cp1=da.simpleQuadratic(out,inBot,0.5,-2.5-this.length);outTop.cp1=da.simpleQuadratic(inTop,outTop,0.5,2.5+this.length);// scale to simulate clothing thickness
da.Clothes.simpleStrokeFill(ctx,ex,{stroke:this.bandPattern,fill:this.bandPattern});// top strap
ctx.beginPath();da.drawPoints(ctx,outTop,out,inBot,inTop,outTop);ctx.fill();ctx.stroke();}}]);return ThighHighBandPart;}(SockPart);Object.assign(ThighHighBandPart.prototype,{aboveSameLayerParts:["feet"]});var Sock=function(_da$Clothing7){_inherits(Sock,_da$Clothing7);function Sock(){var _ref146;_classCallCheck(this,Sock);for(var _len159=arguments.length,data=Array(_len159),_key159=0;_key159<_len159;_key159++){data[_key159]=arguments[_key159];}return _possibleConstructorReturn(this,(_ref146=Sock.__proto__||Object.getPrototypeOf(Sock)).call.apply(_ref146,[this,Sock.defaultProperties].concat(data)));}return Sock;}(da.Clothing);Object.assign(Sock.prototype,{clothingLayer:da.Clothes.Layer.BASE,length:0.5,thickness:1,stroke:"#b1a693"});var ShortSocks=function(_Sock){_inherits(ShortSocks,_Sock);function ShortSocks(){var _ref147;_classCallCheck(this,ShortSocks);for(var _len160=arguments.length,data=Array(_len160),_key160=0;_key160<_len160;_key160++){data[_key160]=arguments[_key160];}return _possibleConstructorReturn(this,(_ref147=ShortSocks.__proto__||Object.getPrototypeOf(ShortSocks)).call.apply(_ref147,[this,ShortSocks.defaultProperties].concat(data)));}return ShortSocks;}(Sock);Object.assign(ShortSocks.prototype,{partPrototypes:[{side:da.Part.LEFT,Part:ShortSockPart},{side:da.Part.RIGHT,Part:ShortSockPart}]});var MediumSocks=function(_Sock2){_inherits(MediumSocks,_Sock2);function MediumSocks(){var _ref148;_classCallCheck(this,MediumSocks);for(var _len161=arguments.length,data=Array(_len161),_key161=0;_key161<_len161;_key161++){data[_key161]=arguments[_key161];}return _possibleConstructorReturn(this,(_ref148=MediumSocks.__proto__||Object.getPrototypeOf(MediumSocks)).call.apply(_ref148,[this,MediumSocks.defaultProperties].concat(data)));}return MediumSocks;}(Sock);Object.assign(MediumSocks.prototype,{partPrototypes:[{side:da.Part.LEFT,Part:MediumSockPart},{side:da.Part.RIGHT,Part:MediumSockPart}]});var LongSocks=function(_Sock3){_inherits(LongSocks,_Sock3);function LongSocks(){var _ref149;_classCallCheck(this,LongSocks);for(var _len162=arguments.length,data=Array(_len162),_key162=0;_key162<_len162;_key162++){data[_key162]=arguments[_key162];}return _possibleConstructorReturn(this,(_ref149=LongSocks.__proto__||Object.getPrototypeOf(LongSocks)).call.apply(_ref149,[this,LongSocks.defaultProperties].concat(data)));}return LongSocks;}(Sock);Object.assign(LongSocks.prototype,{partPrototypes:[{side:da.Part.LEFT,Part:LongSockPart},{side:da.Part.RIGHT,Part:LongSockPart}]});var ThighHighs=function(_Sock4){_inherits(ThighHighs,_Sock4);function ThighHighs(){var _ref150;_classCallCheck(this,ThighHighs);for(var _len163=arguments.length,data=Array(_len163),_key163=0;_key163<_len163;_key163++){data[_key163]=arguments[_key163];}return _possibleConstructorReturn(this,(_ref150=ThighHighs.__proto__||Object.getPrototypeOf(ThighHighs)).call.apply(_ref150,[this,ThighHighs.defaultProperties].concat(data)));}return ThighHighs;}(Sock);Object.assign(ThighHighs.prototype,{partPrototypes:[{side:da.Part.LEFT,Part:ThighHighPart},{side:da.Part.RIGHT,Part:ThighHighPart},{side:da.Part.RIGHT,Part:ThighHighBandPart}]});ThighHighs.defaultProperties={bandWidth:2,bandPattern:"#000"};return{ShortSockPart:ShortSockPart,Sock:Sock,ShortSocks:ShortSocks,MediumSocks:MediumSocks,LongSocks:LongSocks,ThighHighs:ThighHighs};}(da));/*
 global da
 *//**
 * Where all Items should go
 * @namespace Items
 * @memberof module:da
 */da.Items=function(da){"use strict";/**
     * Items are like clothing but do not need to be dynamically drawn
     * They do not scale in form with body dimensions, so can be predrawn in svg, png, and other forms
     * Positioning and sizing of an item optionally depends on draw exports (ie. relative to parts of body)
     * May have body modifiers under Mods property
     * @memberof module:da
     */var Item=function(){function Item(){_classCallCheck(this,Item);for(var _len164=arguments.length,data=Array(_len164),_key164=0;_key164<_len164;_key164++){data[_key164]=arguments[_key164];}Object.assign.apply(Object,[this,Item.defaultProperties].concat(data));if(this.hasOwnProperty("name")===false){throw new Error("Constructing item with no name!");}if(this.hasOwnProperty("src")===false){throw new Error("Constructing item with no src!");}}/**
         * Return the starting location for drawing the item
         * @param ex Drawing exports
         * @param {number} width
         * @param {number} height
         * @returns {(null|{x: number, y: number})}
         */_createClass(Item,[{key:"renderItemLocation",value:function renderItemLocation(){if(this.hasOwnProperty("x")&&this.hasOwnProperty("y")){return{x:this.x,y:this.y};}return null;}/**
         * Modify the Player pose (getPartInLocation inside function and modify pose Mods directly)
         * @this Player
         */},{key:"modifyPose",value:function modifyPose(){}/**
         * Restore the effect of modifying pose when item was first wielded
         * @this Player
         */},{key:"restorePose",value:function restorePose(){}}]);return Item;}();Object.assign(Item.prototype,{layer:da.Layer.BASE});var cachedItems={};function getItemRender(item){if(cachedItems.hasOwnProperty(item.name)){return cachedItems[item.name];}throw new Error("Item not loaded yet: "+item.name);}/**
     * Similar to getItem, load the resource if not cached
     * @param item
     */function loadItem(item){if(cachedItems.hasOwnProperty(item.name)){return;}// create the promise to be loaded before we draw the item
da.patternLoadingQueue.push(new Promise(function(resolve,reject){var image=new Image();image.onload=function(){cachedItems[item.name]=image;resolve();};image.onerror=function(){console.log(Error("failed to load "+item.src));reject();};image.src=item.src;}));}/**
     * Create a Item instance
     * @memberof module:da.Items
     * @param {Item} Item Item prototype to instantiate
     * @param {object} data Overriding data
     * @returns {Item} Instantiated clothing object
     */function create(Item){for(var _len165=arguments.length,data=Array(_len165>1?_len165-1:0),_key165=1;_key165<_len165;_key165++){data[_key165-1]=arguments[_key165];}return new(Function.prototype.bind.apply(Item,[null].concat(data)))();}// exports
Object.assign(da,{Item:Item});return{create:create,getItemRender:getItemRender,loadItem:loadItem};}(da);/*
 global da
 */Object.assign(da,function(){"use strict";/**
     * Core stats (where user would define their gameplay stats)
     * Each are statistic descriptions with low, high, average, and stdev (assume normal)
     * @memberof module:da
     */var statLimits={age:{low:0,high:1e9,avg:30,stdev:6,bias:0},fem:{low:0,high:11,avg:5,stdev:1,bias:2},sub:{low:0,high:11,avg:4,stdev:1,bias:1}};/**
     * Discrete core stats
     * @memberof module:da
     */var statDiscretePool={// pool of available values for discrete properties
skeleton:["human"]};return{statLimits:statLimits,statDiscretePool:statDiscretePool};}());/*
 global da
 */"use strict";Object.assign(da,function(da){/**
     * Any physical property that needs calculation and is tangible should go in here
     */var baseDimDesc={};function adjustLengthByHeight(base,height){var weight=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;return base*(1-weight)+base*weight*height/170;}baseDimDesc.human={areolaSize:{linkedPart:"chest",units:"mm",low:0,high:50,avg:20,stdev:2,bias:3},armThickness:{linkedPart:"arm",units:"mm",low:45,high:95,avg:65,stdev:3,bias:-7,calc:function calc(){var base=this.getDim("armThickness")-this.get("fem")*0.5;// scale by height so that shorter people have shorter arm length
return adjustLengthByHeight(base,this.getDim("height"),0.2);}},armLength:{linkedPart:"arm",units:"cm",low:30,high:80,avg:45,stdev:2,bias:0,calc:function calc(){var base=this.getDim("armLength");// scale by height so that shorter people have shorter arm length
return adjustLengthByHeight(base,this.getDim("height"));}},breastSize:{linkedPart:"chest",units:"cm",low:-10,high:50,avg:-1,stdev:5,bias:20,calc:function calc(){return this.getDim("breastSize")+this.get("fem")*0.1;}},buttFullness:{linkedPart:"butt",units:"arbitrary",low:0,high:40,avg:10,stdev:2,bias:4,calc:function calc(){return this.getDim("buttFullness")+this.get("fem")*0.2;}},chinWidth:{linkedPart:"head",units:"mm",low:30,high:140,avg:70,stdev:2,bias:-2},eyeSize:{linkedPart:"eyes",units:"mm",low:0,high:40,avg:15,stdev:2,bias:3},faceFem:{linkedPart:"head",units:"arbitrary",low:0,high:40,avg:15,stdev:2,bias:14,calc:function calc(){return this.getDim("faceFem")+this.get("fem")*0.5;}},// how long is your face
faceLength:{linkedPart:"head",units:"mm",low:180,high:270,avg:230,stdev:5,bias:-2},// defined as relative to the center of the face (so face half width)
faceWidth:{linkedPart:"head",units:"mm",low:75,high:105,avg:93,stdev:2,bias:-2,calc:function calc(){return this.getDim("faceWidth")-this.get("fem")*0.5;}},hairLength:{linkedPart:"hair",units:"cm",low:0,high:110,avg:6,stdev:2,bias:10,calc:function calc(){return this.getDim("hairLength")+this.get("fem");}},hairStyle:{linkedPart:"hair",desc:"Index of base hair style to be worn (individual parts can be swapped afterwards)",units:"index",low:0,high:da.Hair.styles.length-1,avg:1,stdev:1,bias:0,// needs to be integer
calc:function calc(){return Math.round(this.getDim("hairStyle"));}},hairHue:{linkedPart:"hair",units:"degree",low:0,high:360,avg:30,stdev:30,bias:0},hairSaturation:{linkedPart:"hair",units:"%",low:0,high:100,avg:50,stdev:10,bias:0},hairLightness:{linkedPart:"hair",units:"%",low:0,high:100,avg:30,stdev:10,bias:0},handSize:{linkedPart:"hand",units:"mm",low:0,high:200,avg:100,stdev:5,bias:-10,calc:function calc(){var base=this.getDim("handSize")-this.get("fem")*0.3;return da.adjustLengthByHeight(base,this.getDim("height"),0.4);}},height:{units:"cm",low:50,high:270,avg:167,stdev:3,bias:-5},hipWidth:{linkedPart:"torso",units:"mm",low:70,high:200,avg:125,stdev:2.5,bias:3,calc:function calc(){return this.getDim("hipWidth")+this.get("fem")*2;}},legFem:{linkedPart:"leg",units:"arbitrary",low:0,high:40,avg:13,stdev:2,bias:9,calc:function calc(){return this.getDim("legFem")+this.get("fem")*0.6;}},legFullness:{linkedPart:"leg",desc:"Approximately how thick the leg is as a combination of fat and muscle",units:"arbitrary",low:0,high:40,avg:10,stdev:3,bias:2,calc:function calc(){return this.getDim("legFullness")+this.get("fem")*0.5;}},legLength:{linkedPart:"leg",units:"cm",low:20,high:200,avg:95,stdev:2.5,bias:4,calc:function calc(){var base=this.getDim("legLength");return adjustLengthByHeight(base,this.getDim("height"));}},lipSize:{linkedPart:"lips",units:"mm",low:0,high:40,avg:14,stdev:1.5,bias:5,calc:function calc(){return this.getDim("lipSize")+this.get("fem")*0.05;}},lowerMuscle:{linkedPart:"leg",units:"arbitrary",low:0,high:40,avg:16,stdev:3,bias:-17,calc:function calc(){return this.getDim("lowerMuscle")-this.get("fem");}},neckLength:{linkedPart:"neck",units:"mm",low:0,high:120,avg:72,stdev:5,bias:0},neckWidth:{linkedPart:"neck",units:"mm",low:35,high:75,avg:45,stdev:2,bias:-2},penisSize:{linkedPart:"genitals",units:"mm",low:0,high:200,avg:20,stdev:5,bias:-20,calc:function calc(){var baseSize=this.getDim("penisSize")-this.get("fem")*0.5;return baseSize+this.getMod("arousal")*0.5;}},shoulderWidth:{linkedPart:"chest",units:"mm",low:0,high:200,avg:73,stdev:2,bias:-7,calc:function calc(){var base=this.getDim("shoulderWidth")-this.get("fem")*0.3;return da.adjustLengthByHeight(base,this.getDim("height"),0.4);}},// translucent (-20) to porcelein (-10) to fair (-5) to tanned (5) to brown (15) pure
// black (50)
skin:{units:"arbitrary",low:-20,high:50,avg:7,stdev:5},testicleSize:{linkedPart:"genitals",units:"mm",low:0,high:100,avg:35,stdev:4,bias:-20,calc:function calc(){return this.getDim("testicleSize")-this.get("fem");}},upperMuscle:{linkedPart:"chest",units:"arbitrary",low:0,high:40,avg:14,stdev:3,bias:-15,calc:function calc(){return this.getDim("upperMuscle")-this.get("fem")*0.5;}},vaginaSize:{linkedPart:"genitals",units:"mm",low:0,high:100,avg:40,stdev:10,bias:5,calc:function calc(){return this.getDim("vaginaSize")+this.Mods.labiaFullness+this.Mods.arousal*0.2;}},waistWidth:{linkedPart:"torso",units:"mm",//(center to closest point horizontally)
low:70,high:150,avg:120,stdev:3,bias:-3,calc:function calc(){var base=this.getDim("waistWidth")-this.get("fem");return base+this.getDim("upperMuscle");}}};// first element of discrete pools is the default
var basedimDiscretePool={eyecolor:["white"]};/**
     * Dimension calculation based on avatar statistics. These are callback methods that
     * the user should define to link extended gameplay stats on the Player to physical dimensions.
     * @callback dimensionCalculation
     * @this {module:da.Player} avatar object
     * @param {number} base this dimension as calculated by all previous calculations
     *//**
     * Extend the way a dimension is calculated to plug in a user statistics system
     * @memberof module:da
     * @param {(Object|string)} dimDesc Either the dimension descriptor object, or
     * a string in the format of "skeleton.dimension"
     * @param {dimensionCalculation} newCalc User method for calculating dimension
     */function extendDimensionCalc(dimDesc,newCalc){if(typeof dimDesc==="string"){var _dimDesc$split=dimDesc.split(".");var _dimDesc$split2=_slicedToArray(_dimDesc$split,2);var skeleton=_dimDesc$split2[0];var dim=_dimDesc$split2[1];dimDesc=da.baseDimDesc[skeleton][dim];}var oldCalc=dimDesc.calc;/**
         * 'this' argument should be the avatar
         * @param args
         */dimDesc.calc=function(){var base;for(var _len166=arguments.length,args=Array(_len166),_key166=0;_key166<_len166;_key166++){args[_key166]=arguments[_key166];}if(oldCalc){base=oldCalc.call.apply(oldCalc,[this].concat(args));}else{base=this.getDim(dimDesc.name);}return newCalc.call.apply(newCalc,[this,base].concat(args));};}function loadDimensionDescriptions(){for(var skeleton in baseDimDesc){if(baseDimDesc.hasOwnProperty(skeleton)===false){continue;}var description=baseDimDesc[skeleton];for(var dim in description){if(description.hasOwnProperty(dim)){description[dim].name=dim;}}}}return{extendDimensionCalc:extendDimensionCalc,loadDimensionDescriptions:loadDimensionDescriptions,baseDimDesc:baseDimDesc,adjustLengthByHeight:adjustLengthByHeight,basedimDiscretePool:basedimDiscretePool};}(da));/*
 global da
 */"use strict";Object.assign(da,function(da){// idosyncratic stats (random deviations for each person)
// could also be modified by items
// only put numerical values here
var modLimits={// NEW mods API
armRotation:{linkedPart:"arm",units:"degree",low:-40,high:40,avg:0,stdev:0,bias:0},arousal:{units:"arbitrary",low:0,high:100,avg:10,stdev:5,bias:0},breastPerkiness:{linkedPart:"chest",desc:"counter sagging effect when breasts grow too large",units:"arbitrary",low:-10,high:10,avg:0,stdev:2,bias:0},browBotCurl:{linkedPart:"brow",desc:"How much the bottom of the eyebrow curls up or down; 0 is flat",units:"mm",low:-10,high:15,avg:3,stdev:2,bias:3},browTopCurl:{linkedPart:"brow",desc:"How much the top of the eyebrow curls up or down; 0 is flat",units:"mm",low:-10,high:15,avg:8,stdev:2,bias:1},browCloseness:{linkedPart:"brow",units:"mm",low:-10,high:10,avg:0,stdev:2,bias:0},browHeight:{linkedPart:"brow",units:"mm",low:-10,high:10,avg:0,stdev:2,bias:0},browLength:{linkedPart:"brow",units:"mm",low:-10,high:10,avg:0,stdev:2,bias:0},browSharpness:{linkedPart:"brow",units:"arbitrary",low:-10,high:10,avg:0,stdev:2,bias:0},browThickness:{linkedPart:"brow",units:"mm",low:-10,high:10,avg:0,stdev:1,bias:-1.5},browOutBias:{linkedPart:"brow",desc:"Whether the top of the outer brow ends inside or outside the bottom",units:"mm",low:-10,high:10,avg:-1,stdev:2,bias:0},browTilt:{linkedPart:"brow",units:"degree",low:-20,high:20,avg:5,stdev:4,bias:0},cheekFullness:{linkedPart:"head",units:"arbitrary",low:-20,high:20,avg:0,stdev:3,bias:0},// ear lobe length
earlobeLength:{linkedPart:"ears",low:-2,high:4,avg:0,stdev:0.2,bias:0},eyeBias:{linkedPart:"eyes",desc:"Whether the eyes bias towards the inside or outside",units:"arbitrary",low:-10,high:10,avg:1,stdev:2,bias:0},eyeCloseness:{linkedPart:"eyes",units:"mm",low:-100,high:100,avg:0,stdev:5,bias:0},eyeBotSize:{linkedPart:"eyes",desc:"How much does the bottom of the eyes dip",units:"mm",low:-20,high:20,avg:0,stdev:0,bias:1},eyeHeight:{linkedPart:"eyes",units:"mm",low:-10,high:10,avg:0,stdev:2,bias:0},eyeTilt:{linkedPart:"eyes",units:"degree",low:-20,high:30,avg:2,stdev:4,bias:0},eyeTopSize:{linkedPart:"eyes",desc:"How much does the top of the eyes curve",units:"mm",low:-10,high:8,avg:0,stdev:0.5,bias:0},eyeWidth:{linkedPart:"eyes",units:"mm",low:-10,high:10,avg:0,stdev:2,bias:0},eyelidBias:{linkedPart:"eyelid",desc:"Whether the eyelids bias towards the inside or outside",units:"arbitrary",low:-10,high:10,avg:1,stdev:2,bias:0},eyelidHeight:{linkedPart:"eyelid",units:"mm",low:-6,high:12,avg:0,stdev:2,bias:0},feetBias:{linkedPart:"feet",desc:"Relative importance of inner toes vs outer toes",units:"arbitrary",low:-10,high:20,avg:0,stdev:2,bias:0},feetLength:{linkedPart:"feet",units:"mm",low:-10,high:40,avg:0,stdev:2,bias:0},feetWidth:{linkedPart:"feet",units:"mm",low:-20,high:12,avg:0,stdev:2,bias:0},hairAccessoryHue:{linkedPart:"hair",units:"degree",low:0,high:360,avg:360,stdev:50,bias:0},hairAccessorySaturation:{linkedPart:"hair",units:"%",low:0,high:100,avg:80,stdev:5,bias:0},hairAccessoryLightness:{linkedPart:"hair",units:"%",low:0,high:100,avg:50,stdev:10,bias:0},handRotation:{linkedPart:"hand",units:"degree",low:-40,high:40,avg:0,stdev:0,bias:0},irisHeight:{linkedPart:"iris",units:"mm",low:-10,high:10,avg:0,stdev:1,bias:0},irisHue:{linkedPart:"iris",units:"degree",low:-30,high:330,avg:0,stdev:30,bias:0},irisSaturation:{linkedPart:"iris",units:"%",low:-50,high:50,avg:0,stdev:10,bias:0},irisLightness:{linkedPart:"iris",units:"%",low:-20,high:30,avg:0,stdev:10,bias:0},irisSize:{linkedPart:"iris",desc:"Diameter of the iris",units:"mm",low:0,high:50,avg:16,stdev:1.5,bias:0},// how prominantly the lower jaw juts out (in mm)
jawJut:{linkedPart:"head",units:"mm",low:-10,high:10,avg:0,stdev:0.5,bias:0},limbalRingSize:{linkedPart:"iris",desc:"Width of the limbal ring (dark ring surrounding iris)",units:"um",low:0,high:100,avg:20,stdev:5,bias:0},lipBias:{linkedPart:"lips",desc:"Whether the top lip sits above the bottom lip or vise versa",units:"arbitrary",low:-50,high:50,avg:10,stdev:10,bias:0},// how far apart the cupid bow corners are
lipCupidsBow:{linkedPart:"lips",units:"mm",low:-100,high:30,avg:0,stdev:20,bias:0},lipCurl:{linkedPart:"lips",units:"arbitrary",low:-20,high:20,avg:0,stdev:5,bias:0},lipHeight:{linkedPart:"lips",units:"mm",low:-10,high:10,avg:0,stdev:1.2,bias:0},// whether we curve up or down up to the cupid bow corner
lipTopCurve:{linkedPart:"lips",units:"arbitrary",low:0,high:70,avg:15,stdev:10,bias:0},lipTopSize:{linkedPart:"lips",units:"um",low:-20,high:60,avg:8,stdev:4,bias:0},lipBotSize:{linkedPart:"lips",units:"mm",low:-80,high:100,avg:30,stdev:10,bias:3},lipParting:{linkedPart:"lips",units:"um",low:0,high:100,avg:0,stdev:0,bias:0},lipWidth:{linkedPart:"lips",units:"mm",low:-250,high:100,avg:0,stdev:30,bias:-70},noseHeight:{linkedPart:"nose",units:"mm",low:-10,high:10,avg:0,stdev:4,bias:0},noseLength:{linkedPart:"nose",units:"mm",low:0,high:70,avg:45,stdev:3,bias:0},noseRidgeHeight:{linkedPart:"nose",units:"mm",low:-10,high:10,avg:0,stdev:2,bias:0},noseRoundness:{linkedPart:"nose",units:"arbitrary",low:-6,high:10,avg:0,stdev:2,bias:0},noseWidth:{linkedPart:"nose",units:"mm",low:10,high:30,avg:18,stdev:2,bias:-1},nostrilSize:{linkedPart:"nose",units:"mm",low:5,high:30,avg:10,stdev:2,bias:0},pupilSize:{linkedPart:"pupil",desc:"Diameter of the pupil",units:"mm",low:0,high:20,avg:10,stdev:0.5,bias:0},labiaFullness:{linkedPart:"genitals",desc:"How puffy the labia is",units:"arbitrary",low:-10,high:10,avg:0,stdev:1,bias:1},penisThickness:{linkedPart:"genitals",units:"um",low:-30,high:30,avg:0,stdev:4,bias:-4},shoeHeight:{units:"mm",low:0,high:300,avg:0,stdev:0,bias:0},skinHue:{units:"degree",low:-20,high:20,avg:0,stdev:2,bias:0},skinSaturation:{units:"%",low:-20,high:20,avg:0,stdev:2,bias:0},skinLightness:{units:"%",low:-20,high:20,avg:0,stdev:2,bias:0}};var modDiscretePool={};// fill out modifier for numerical stats if they don't exist
function loadMods(){for(var p in da.statLimits){if(da.statLimits.hasOwnProperty(p)&&!modLimits.hasOwnProperty(p)){var range=da.statLimits[p].high-da.statLimits[p].low;// default
modLimits[p]={low:-1e9,high:1e9,avg:0,stdev:range*0.01,bias:0};}}var dimensions=da.baseDimDesc["human"];for(var d in dimensions){if(dimensions.hasOwnProperty(d)&&!modLimits.hasOwnProperty(d)){var _range=dimensions[d].high-dimensions[d].low;modLimits[d]={low:-1e9,high:1e9,avg:0,stdev:_range*0.01,bias:0};}}}return{loadMods:loadMods,modLimits:modLimits,modDiscretePool:modDiscretePool};}(da));/*
 global da
 */"use strict";Object.assign(da,function(){// for bias, if not defined then default to 1 - it means females tend to get higher values
// otherwise, 0 means unisex, and a negative number means more affected by high masculinity
var femBias={// core stats
age:0,str:-0.5,dex:-0.3,con:-0.2,wil:0,eyes:5,breast:2,skin:2,fem:2,sub:2,// physiques
hairc:0,height:-3,genitals:0,face:3,lips:2,hairlength:3,shoulders:1.5,breasts:5,testes:2,penis:2,waist:2,legs:3,// idiosyncracies
skinc:-3,lipw:0,lipt:4,liph:0,lipc:0,lipa:0,legl:0,eyec:0,noseskew:0,penist:-2,browh:0};return{femBias:femBias};}());/*
 global da
 *//**
 * Facial expressions
 * @namespace Expression
 * @memberof module:da
 */da.Expression=function(da){"use strict";/**
     * Create an expression to a certain degree
     * @memberof module:da
     * @param {object} expression Expression object with modifiers in Mods
     * @param {number} degree How fully the expression should be displayed; > 0
     * @returns {object} The expression to be applied
     */function create(expression){var degree=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var newExpression=da.clone(expression);for(var mod in newExpression.Mods){if(newExpression.Mods.hasOwnProperty(mod)){newExpression.Mods[mod]*=degree;}}return newExpression;}var neutral=Object.freeze({Mods:{}});var suspicious=Object.freeze({Mods:{eyeBotSize:-7,browHeight:-2,lipBotSize:-20,lipTopSize:-8,lipWidth:-25}});var angry=Object.freeze({Mods:{browTilt:7,browCloseness:-3,browHeight:-4,eyeBotSize:1,eyeTopSize:1,lipCurl:-6}});var sad=Object.freeze({Mods:{browTilt:-7,eyeBotSize:2,eyeTopSize:-1,lipCurl:-5,eyeTilt:-1}});var surprised=Object.freeze({Mods:{browTilt:-5,eyeBotSize:2,eyeTopSize:1,lipParting:15,browHeight:5}});var mischievous=Object.freeze({Mods:{lipCurl:10,eyeBotSize:-4,eyeTopSize:-1}});var happy=Object.freeze({Mods:{lipCurl:12,eyeBotSize:-2}});var sleepy=Object.freeze({Mods:{eyeTopSize:-4,eyelidHeight:-1}});var aroused=Object.freeze({Mods:{eyelidHeight:-2.5,lipParting:13}});var bliss=Object.freeze({Mods:{irisHeight:2,lipParting:20,eyelidHeight:-2}});return{create:create,neutral:neutral,suspicious:suspicious,angry:angry,sad:sad,surprised:surprised,mischievous:mischievous,happy:happy,sleepy:sleepy,aroused:aroused,bliss:bliss};}(da);/*
 global da
 */"use strict";// continue draw avatar module
da.Player=function(da){// used to generate default values
function defaultBaseDimensions(skeleton){return da.getDefault(da.baseDimDesc[skeleton],da.basedimDiscretePool[skeleton])();}function defaultParts(partsName,skeleton){var parts=[];var defParts=da.Skeleton[skeleton][partsName];for(var i=0;i<defParts.length;++i){var _defParts$i=defParts[i];var side=_defParts$i.side;var part=_defParts$i.part;parts.push(da.Part.create(part,{side:side}));}return parts;}function addSexParts(avatar){var skeleton=da.Skeleton[avatar.skeleton];var sexParts=void 0;if(avatar.isFemale()){sexParts=skeleton.femaleParts;}if(avatar.isMale()){sexParts=skeleton.maleParts;}sexParts.forEach(function(_ref151){var partGroup=_ref151.partGroup;var side=_ref151.side;var part=_ref151.part;avatar.attachPart(da.Part.create(part,{side:side}),avatar[partGroup]);});}/**
     * Player holds all data necessary for draw to render it.
     * It is also meant to be extended by the user of the library to include gameplay statistics.
     * The gameplay statistics can then be linked to the calculation of drawing dimensions.
     * @memberof module:da
     */var Player=function(){_createClass(Player,null,[{key:"defaultStats",value:function defaultStats(){return da.getDefault(da.statLimits,da.statDiscretePool)();}},{key:"defaultMods",value:function defaultMods(){return da.getDefault(da.modLimits,da.modDiscretePool)();}},{key:"defaultVitals",value:function defaultVitals(){return da.getDefault(da.vitalLimits)();}/**
         * @constructor
         * @param {object} data Properties of the Player object (override the default values)
         */}]);function Player(data){var _this151=this;_classCallCheck(this,Player);if(!da.loaded){throw new Error("trying to create Player without having loaded first! (call da.load() before)");}Object.assign(this,Player.defaultStats(),Player.defaultProperties);// handle objects separately
for(var property in data){if(data.hasOwnProperty(property)&&(typeof data[property]==="number"||typeof data[property]==="string")){this[property]=data[property];}}this.parts=defaultParts("defaultParts",this.skeleton);addSexParts(this);this.decorativeParts=defaultParts("defaultDecorativeParts",this.skeleton);this.faceParts=defaultParts("defaultFaceParts",this.skeleton);this.shadingParts=[];this.parts.forEach(function(part){if(part.shadingParts){part.shadingParts.forEach(function(shadingPartPrototype){var attachedLocation=da.extractUnmodifiedLocation(shadingPartPrototype.defaultProperties.loc);if(_this151.getPartInLocation(attachedLocation)){_this151.attachPart(da.Part.create(shadingPartPrototype),_this151.shadingParts);}});}});this.faceParts.forEach(function(part){if(part.shadingParts){part.shadingParts.forEach(function(shadingPartPrototype){var attachedLocation=da.extractUnmodifiedLocation(shadingPartPrototype.defaultProperties.loc);if(_this151.getPartInLocation(attachedLocation,_this151.faceParts)){_this151.attachPart(da.Part.create(shadingPartPrototype),_this151.shadingParts);}});}});this.clothingParts=[];this.clothes=[];this.items=[];// clothing book keeping
// list of Clothes, not to be directly accessed
Player.defaultClothes.forEach(function(clothing){_this151.wearClothing(clothing);});// upgrade with newer default values if necessary so saves are compatible (new stat wouldn't
// be missing)
if(data){this.basedim=Object.assign({},defaultBaseDimensions(this.skeleton),data.basedim);this.Mods=Object.assign({},Player.defaultMods(),data.Mods);this.vitals=Object.assign({},Player.defaultVitals(),data.vitals);if(data.parts){// override body parts
data.parts.forEach(function(part){_this151.attachPart(part);});}if(data.decorativeParts){// override decorative parts
data.decorativeParts.forEach(function(part){_this151.attachPart(part,_this151.decorativeParts);});}if(data.faceParts){data.faceParts.forEach(function(part){_this151.attachPart(part,_this151.faceParts);});}if(data.clothes){this.removeAllClothing();data.clothes.forEach(function(clothing){_this151.wearClothing(clothing);});}if(data.items){data.items.forEach(function(item){_this151.wieldItem(item);});}// public specification
}else{this.basedim=defaultBaseDimensions(this.skeleton);this.Mods=Player.defaultMods();this.vitals=Player.defaultVitals();}// initialize dimensions
this.calcDimensions();}_createClass(Player,[{key:"toString",value:function toString(){return this.name;}/**
         * Keep stats within boundaries
         */},{key:"clampStats",value:function clampStats(){for(var p in da.statLimits){if(da.statLimits.hasOwnProperty(p)===false){continue;}this[p]=da.clamp(this[p],da.statLimits[p].low,da.statLimits[p].high);}}// property getters
/**
         * Get modified statistic
         * @param {string} param Name of statistic
         * @returns {number} Modified statistic value
         */},{key:"get",value:function get(param){return this[param]+this._clampedMods[param];}/**
         * Get modified dimensions
         * @param {string} param Name of dimension
         * @returns {number} Modified dimension value
         */},{key:"getDim",value:function getDim(param){return this.basedim[param]+this._clampedMods[param];}/**
         * Get modifier
         * @param {string} param Name of modifier
         * @returns {number} Modifier value
         */},{key:"getMod",value:function getMod(param){return this._clampedMods[param];}/**
         * Get statistical description of a dimension
         * @param {string} param Name of dimension
         * @returns {object} Statistical dimension description with low, high, stdev, avg
         */},{key:"getDimDesc",value:function getDimDesc(param){return da.baseDimDesc[this.skeleton][param];}/**
         * Calculate each dimension with 'this' set as the player inside the function
         * This is automatically called when drawing, so it's rarely called manually.
         */},{key:"calcDimensions",value:function calcDimensions(){// clamp mods for use in drawing (can't clamp original since doing so would remove
// information about temporary mods
this._clampedMods={};for(var mod in this.Mods){if(da.modLimits.hasOwnProperty(mod)){this._clampedMods[mod]=da.clamp(this.Mods[mod],da.modLimits[mod].low,da.modLimits[mod].high);}}// reset dimensions
this.dim={};var dimDesc=da.baseDimDesc[this.skeleton];for(var dimension in dimDesc){if(dimDesc.hasOwnProperty(dimension)===false){continue;}if(dimDesc[dimension].hasOwnProperty("calc")){this.dim[dimension]=dimDesc[dimension].calc.call(this);}else{this.dim[dimension]=this.getDim(dimension);}this.dim[dimension]=da.clamp(this.dim[dimension],dimDesc[dimension].low,dimDesc[dimension].high);}this.dim.torsoLength=this.dim.height*0.85-this.dim.legLength;// define hair
this.replaceHair(da.Hair.styles[Math.round(this.dim.hairStyle)]);}// body part interaction
/**
         * Attach a new body part, replacing any conflicting parts if necessary
         * @param {Part} newPart New body part to be added
         * @param {Part[]} parts Part group of the Player to attach to
         * @returns {(Part|null)} Either the part that was removed, or null if nothing was removed
         */},{key:"attachPart",value:function attachPart(newPart){var _this152=this;var parts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.parts;if(newPart instanceof da.ShadingPart){parts=this.shadingParts;// adding associated shading with this part if necessary
}else if(newPart.shadingParts){newPart.shadingParts.forEach(function(shadingPartPrototype){var attachedLocation=da.extractUnmodifiedLocation(shadingPartPrototype.defaultProperties.loc);if(_this152.getPartInLocation(attachedLocation)||_this152.getPartInLocation(attachedLocation,_this152.faceParts)||_this152.getPartInLocation(attachedLocation,_this152.hairParts)){_this152.attachPart(da.Part.create(shadingPartPrototype),_this152.shadingParts);}});}for(var p=0;p<parts.length;++p){if(da.partConflict(newPart,parts[p])){var oldPart=parts[p];parts[p]=newPart;return oldPart;}}// no existing part with this specific location
parts.push(newPart);return null;}/**
         * Either returns a reference to the part in a specific location or null if the part doesn't
         * exist
         * @param {string} location Where the part is located
         * @param {Part[]} parts Part group to search in
         * @param {number} [siblingIndex=0] Index relative to other parts in same location in same group
         * @returns {(Part|null)} Part in this location or null
         */},{key:"getPartInLocation",value:function getPartInLocation(location){var parts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.parts;var siblingIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var testLocation=da.extractUnmodifiedLocation(location);for(var p=0;p<parts.length;++p){if(da.extractUnmodifiedLocation(parts[p].loc)===testLocation){if(siblingIndex>0){--siblingIndex;continue;}return parts[p];}}return null;}},{key:"removeSpecificPart",value:function removeSpecificPart(partPrototype){var parts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.parts;var siblingIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;for(var p=0;p<parts.length;++p){if(parts[p]instanceof partPrototype){if(siblingIndex>0){--siblingIndex;continue;}var oldPart=parts[p];parts.splice(p,1);this.doRemovePart(oldPart,parts);return oldPart;}}return null;}/**
         * Return whether a part is covered by clothing
         * Depends on the part to specify what locations are considered coverable
         * with part.coverConceal
         * @param part
         * @returns {boolean}
         */},{key:"checkPartCoveredByClothing",value:function checkPartCoveredByClothing(part){var _this153=this;var partCovered=false;part.coverConceal.forEach(function(coveringLocation){if(coveringLocation==="this"){coveringLocation=part.loc;}var coveringClothing=_this153.getClothingInLocation(coveringLocation);if(coveringClothing.length){partCovered=true;}});return partCovered;}/**
         * Remove a part at a specific location
         * @param {string} loc Where the part is located
         * @param {Part[]} parts Part group of the Player to remove from
         * @param {number} [siblingIndex=0] Index relative to other parts in same location in same group
         * @returns {(Part|null)} Part removed or null if nothing was removed
         */},{key:"removePart",value:function removePart(loc){var parts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.parts;var siblingIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;for(var p=0;p<parts.length;++p){if(da.extractUnmodifiedLocation(parts[p].loc)===loc){if(siblingIndex>0){--siblingIndex;continue;}var oldPart=parts[p];parts.splice(p,1);this.doRemovePart(oldPart,parts);return oldPart;}}return null;}},{key:"doRemovePart",value:function doRemovePart(oldPart,parts){var _this154=this;// ensure accompanying shadows are also removed
if(oldPart.shadingParts){oldPart.shadingParts.forEach(function(shadingPart){_this154.removeSpecificPart(shadingPart,_this154.shdadingParts);});}// recursively remove any child parts
if(oldPart.hasOwnProperty("childParts")){var childParts=oldPart.childParts;for(var i=0;i<childParts.length;++i){var _da$getChildLocation=da.getChildLocation(oldPart.loc,childParts[i]);var childLoc=_da$getChildLocation.childLoc;this.removePart(childLoc,parts);}}}},{key:"replaceHair",value:function replaceHair(newHair){var _this155=this;// clear hair parts
// remove any shadows manually
this.hairParts.forEach(function(part){if(part.shadingParts){part.shadingParts.forEach(function(shadingPartPrototype){_this155.removeSpecificPart(shadingPartPrototype,_this155.shadingParts);});}});this.hairParts=[];newHair.forEach(function(part){_this155.attachPart(da.Hair.create(part),_this155.hairParts);});}// expression manipulation
/**
         * Apply an expression, replacing the current expression
         * @param {Expression} expression All expression are kept in da.Expression
         */},{key:"applyExpression",value:function applyExpression(expression){if(expression.hasOwnProperty("Mods")===false){throw new Error("Invalid expression object since it has no Mods");}this.removeExpression();// apply modifiers
for(var mod in expression.Mods){if(expression.Mods.hasOwnProperty(mod)){this.Mods[mod]+=expression.Mods[mod];}}// any special modifications
if(expression.hasOwnProperty("specificModification")){if(expression.hasOwnProperty("removeSpecificModification")){throw new Error("Expression has specific modifications but no way of removing them");}// apply specific operations on the Player object
expression.specificModification(this);}this._expression=expression;}},{key:"removeExpression",value:function removeExpression(){// remove modifiers
for(var mod in this._expression.Mods){if(this._expression.Mods.hasOwnProperty(mod)){this.Mods[mod]-=this._expression.Mods[mod];}}if(this._expression.hasOwnProperty("removeSpecificModification")){// apply specific operations on the Player object
this._expression.removeSpecificModification(this);}}// clothing manipulation
/**
         * Find the clothes that occupies a certain body location
         * @param {string} location body location
         * @returns {Clothing[]} list of Clothes objects that cover that body location
         */},{key:"getClothingInLocation",value:function getClothingInLocation(location){var clothes=[];this.clothingParts.forEach(function(part){if(part.loc===location&&clothes.indexOf(part._owner)<0){clothes.push(part._owner);}});return clothes;}/**
         * Wear a Clothing item
         * @param {Clothing} clothing Clothing to be worn
         * @returns {(Clothing[]|null)} null if failed to wear clothing, or the list of removed
         * conflicting clothes
         */},{key:"wearClothing",value:function wearClothing(clothing){var _this156=this;// remove clothing in same location
var removedClothing=[];for(var p=0;p<clothing.parts.length;++p){var conflictingClothes=this.getClothingInLocation(da.extractUnmodifiedLocation(clothing.parts[p].loc));for(var c=0;c<conflictingClothes.length;++c){if(conflictingClothes[c].clothingLayer===clothing.clothingLayer){if(this.removeClothing(conflictingClothes[c])===false){return null;}removedClothing.push(conflictingClothes[c]);}}}// successfully removed clothing
clothing.parts.forEach(function(part){if(_this156.getPartInLocation(da.extractUnmodifiedLocation(part.loc))){_this156.clothingParts.push(part);if(part.shadingParts){part.shadingParts.forEach(function(shadingPartPrototype){_this156.attachPart(da.Part.create(shadingPartPrototype,{_owner:clothing}),_this156.shadingParts);});}}});da.applyMods(this.Mods,clothing.Mods);this.clothes.push(clothing);return removedClothing;}/**
         * Remove an article of clothing
         * @param {Clothing} clothing
         * @returns {boolean} Whether clothing was successfully removed
         */},{key:"removeClothing",value:function removeClothing(clothing){var _this157=this;// copy over non-removed parts to new list
if(clothing.cursed){return false;}var newParts=[];this.clothingParts.forEach(function(part){if(part._owner!==clothing){newParts.push(part);}else{if(part.shadingParts){part.shadingParts.forEach(function(shadingPart){_this157.removeSpecificPart(shadingPart,_this157.shadingParts);});}}});this.clothingParts=newParts;da.removeMods(this.Mods,clothing.Mods);this.clothes.splice(this.clothes.indexOf(clothing),1);return true;}/**
         * Remove any clothing of article that can be removed
         * @returns {Array} Array of clothing that was removed
         */},{key:"removeAllClothing",value:function removeAllClothing(){var removedClothing=[];for(var clothingIndex=this.clothes.length-1;clothingIndex>=0;--clothingIndex){var clothing=this.clothes[clothingIndex];if(this.removeClothing(clothing)){removedClothing.push(clothing);}}return removedClothing;}// item manipulation
},{key:"wieldItem",value:function wieldItem(item){da.Items.loadItem(item);item.modifyPose.call(this);this.items.push(item);}},{key:"removeItem",value:function removeItem(item){item.restorePose.call(this);this.items.splice(this.items.indexOf(item),1);}},{key:"heightAdjust",value:function heightAdjust(){var extraHeight=0;// take the max height of what's being worn in shoes location
this.getClothingInLocation("left feet").forEach(getMaxHeight);this.getClothingInLocation("right feet").forEach(getMaxHeight);return extraHeight;function getMaxHeight(clothing){if(clothing.shoeHeight&&clothing.shoeHeight>extraHeight){extraHeight=clothing.shoeHeight;}}}},{key:"isFemale",value:function isFemale(){return this.fem>5;}},{key:"isMale",value:function isMale(){return!this.isFemale();}}]);return Player;}();/**
     * Default properties that belong to this of each Player object
     * @property {string} skeleton The "type" of the Player
     * @property {module:da.BodyPart[]} parts The list of body parts owned by Player
     * @property {module:da.BodyPart[]} faceParts The list of face parts owned by the Player
     * @property {module:da.DecorativePart[]} decorativeParts The list of decorative parts owned by Player
     * @property {object} Mods Modifiers of the player
     */Player.defaultProperties={skeleton:"human",// default value construction; overriden by properties of data passed in
// mods, physique, worn require dynamic default value construction, so are
// assigned separately
// ordered list of body parts (parts depending on others should be after)
parts:[],// parts that are of the face
faceParts:[],// parts that are for decorative/flavour only
decorativeParts:[],hairParts:[],clothingParts:[],// calculated from stats, base dimensions (1-to-1), and mods
inv:[],Mods:{},vitals:{},// where you would store max_hp, cur_hp, etc...
traits:[],_expression:da.Expression.neutral};/**
     * default Clothing for a Player to wear
     * @type {Clothing[]}
     */Player.defaultClothes=[da.Clothes.create(da.Clothes.Bra),da.Clothes.create(da.Clothes.Panties)];return Player;}(da);"use strict";/*
 global Context2DTracked, da
 *//* Copyright 2016 Johnson Zhong */// draw avatar module (loosely augmented so load order isn't important)
Object.assign(da,function(da){/**
     * Draw an avatar to a canvasGroup
     * @memberof module:da
     * @param {HTMLElement} canvasGroupObj HTML DOM element holding all the canvases, gotten with
     * da.getCanvasGroup
     * @param {Player} avatar Player to be drawn
     * @param {object} userConfig Configuration object that contains
     * @param {boolean} userConfig.passThrough If true, will use existing dimensions to draw rather than calculating them
     * @param {string} userConfig.nameColor Color to render the name in
     * @param {string} userConfig.genderColor Color to render the gender in
     * @param {string} userConfig.heightColor Color to render the height text in
     * @param {string} userConfig.heightBarColor Color to render the height bar in
     * @returns {object} Exports
     */function draw(canvasGroupObj,avatar,userConfig){if(!da.loaded){throw new Error("trying to draw without having loaded first! (call da.load() before)");}// make sure all needed patterns are loaded
if(da.patternLoadingQueue.length){return Promise.all(da.patternLoadingQueue).then(function(){da.patternLoadingQueue.length=0;return draw(canvasGroupObj,avatar,userConfig);});}// canvas name is the string id of the canvas element to draw to
// if it's not a string, we assume it's the actual canvas passed in
var config={nameColor:"#000",genderColor:"#000",heightColor:"#000",heightBarColor:"#000"};if(userConfig){Object.assign(config,userConfig);}// assuming canvas group exists
// not terribly elegant way of doing this (don't want to pass avatar to draw functions)
avatar.Mods.shoeHeight=avatar.heightAdjust();// define stats
if(!config.passThrough){avatar.calcDimensions();}var sk=da.Skeleton[avatar.skeleton];if(!sk){alert("can't find skeleton with name "+avatar.skeleton);return;}// UNIT DEFINITION
// internal model of 400x180 canvas
// assuming max height is 200cm, 1 canvas unit = 0.5cm = 5mm
var ex={};// center x and y
ex.cx=80;ex.cy=200;ex.avatar=avatar;// DRAW POINTS defined (x,y) for specific body points so we have unified calculations
// points are defined in cm
// these are calculated once in a core function and then referenced in other functions
// they are the exported physical parameters and are defined in their respective draw
// functions
ex[da.Part.LEFT]={};ex[da.Part.RIGHT]={};// let each body part calculate and export its own draw points
avatar.parts.forEach(function(part){calcPart(ex,part);});avatar.faceParts.forEach(function(part){calcPart(ex,part);});avatar.decorativeParts.forEach(function(part){// decorative parts require the existence of either a part or facePart in the same location
var decorativeLocation=part.loc;if(avatar.getPartInLocation(decorativeLocation)||avatar.getPartInLocation(decorativeLocation,avatar.faceParts)){calcPart(ex,part);}});// convert to drawable units
da.convertPointsToCanvasUnits(ex[da.Part.LEFT]);da.convertPointsToCanvasUnits(ex[da.Part.RIGHT]);// calculate base body colors
da.configureBaseColors(ex);// add in reverse order
var canvasGroup=[];for(var i=canvasGroupObj.children.length-1;i>=0;--i){canvasGroup.push(canvasGroupObj.children[i]);}ex.canvasGroup=canvasGroup;// actually work with the canvases now
var ctxGroup=[];for(var _i=0;_i<da.Layer.NUM_LAYERS;++_i){var ctx=new Context2DTracked(canvasGroup[_i].getContext("2d"));da.initCanvas(canvasGroup[_i],ctx,config,avatar,ex,_i,true);ctxGroup.push(ctx);}ex.height=canvasGroup[da.Layer.BASE].height;ex.width=canvasGroup[da.Layer.BASE].width;// clipping mask for the body indexed by [layer][side]
// to be defined in renderBase
ex.clip={};// underlying skin
da.renderBase(ctxGroup,ex);// render individual parts
da.renderParts(ctxGroup,ex);ex.ctxGroup=ctxGroup;ex.ctx=new Context2DTracked(canvasGroup[da.Layer.NUM_LAYERS].getContext("2d"));// set up display canvas with same scaling and translation as used for drawing
da.initCanvas(canvasGroup[da.Layer.NUM_LAYERS],ex.ctx,config,avatar,ex,da.Layer.NUM_LAYERS,false);return ex;}function calcPart(ex,part){var avatar=ex.avatar;// wrap the body part's calc function
if(part.hasOwnProperty("Mods")){da.applyMods(avatar.Mods,part.Mods);avatar.calcDimensions();}// inside each call, 'this' should refer to the avatar's dimensions
part.calcDrawPoints.call(avatar.dim,ex[part.side],avatar._clampedMods,true,part);// also define the points for the other side
if(part.reflect){part.calcDrawPoints.call(avatar.dim,ex[1-part.side],avatar._clampedMods,true,part);}if(part.hasOwnProperty("Mods")){da.removeMods(avatar.Mods,part.Mods);avatar.calcDimensions();}}/**
     * guiMenuItem should be an array of part names
     * while drawnParts should have all the draw points associated with that part
     */function synthesizeDrawPoints(partNames,drawnParts){var drawPoints=[];for(var p=0;p<partNames.length;++p){drawPoints.extend(drawnParts[partNames[p]]);}return drawPoints;}function renderBase(ctxGroup,ex){// first pass, fill in base color
for(var layer=da.Layer.BASE;layer<da.Layer.NUM_LAYERS;++layer){ex.clip[layer]={};var ctx=ctxGroup[layer];ctx.save();// left side
ctx.scale(-1,1);ctx.beginPath();ex.clip[layer][da.Part.LEFT]=da.drawPartsLayer(ex,layer,da.Part.LEFT,ctx);ctx.fill();ctx.restore();// right side and center
ex.clip[layer][da.Part.RIGHT]=da.drawPartsLayer(ex,layer,da.Part.RIGHT,ctx);ctx.fill();}}function strokePart(ctx,drawPoints){ctx.beginPath();da.drawPoints.apply(null,[ctx].concat(drawPoints));ctx.stroke();}/**
     * Topologically sort parts so that they're drawn in a preferred order (above whatever they want)
     * @param avatar
     * @returns {*}
     */function orderParts(avatar){var partGroups=["parts","faceParts","decorativeParts","hairParts","clothingParts","shadingParts"];// index -> part object
var partMap=[];// part object -> index
var partMapInverse=new Map();var partTypes=[];var index=0;var partDependency=[];// initialize map data structures
partGroups.forEach(function(group){avatar[group].forEach(function(part){partMap[index]=part;partMapInverse.set(part,index);partTypes.push(group);++index;});});// find part-based dependencies
partGroups.forEach(function(group){avatar[group].forEach(function(part){findDependencies(part);});});findClothingLayerDependencies();findClothingSameLayerOrdering();// find drawing-layer based dependencies
// clothing parts occupying same location need to be ordered with inner layer drawn first
function findClothingLayerDependencies(){var clothingLayers=[];for(var layer=da.Clothes.Layer.BASE;layer<da.Clothes.Layer.NUM_LAYERS;++layer){clothingLayers.push([]);}avatar["clothingParts"].forEach(function(clothingPart){var layer=clothingPart._owner.clothingLayer;clothingLayers[layer].push(clothingPart);});// draw all clothes of a lower layer before outer layer
for(var _layer=0;_layer<clothingLayers.length;++_layer){var _loop=function _loop(outerLayer){clothingLayers[_layer].forEach(function(innerPart){clothingLayers[outerLayer].forEach(function(outerPart){// still have to respect drawing layers
if(innerPart.layer<=outerPart.layer){partDependency.push([partMapInverse.get(outerPart),partMapInverse.get(innerPart)]);}});});};for(var outerLayer=_layer+1;outerLayer<clothingLayers.length;++outerLayer){_loop(outerLayer);}}}function findClothingSameLayerOrdering(){// cache clothing layers of all parts as well
var clothingPartLayers={};avatar["clothingParts"].forEach(function(clothingPart){var layer=clothingPart._owner.clothingLayer;if(clothingPartLayers.hasOwnProperty(layer)){clothingPartLayers[layer].push(clothingPart);}else{clothingPartLayers[layer]=[clothingPart];}});// also determine order inside each clothing layer
var _loop2=function _loop2(layer){if(clothingPartLayers.hasOwnProperty(layer)===false){return"continue";}var partsInLayer=clothingPartLayers[layer];partsInLayer.forEach(function(clothingPart){// if it doesn't have any ordering, skip
if(!clothingPart.aboveSameLayerParts&&!clothingPart.belowSameLayerParts){return;}partsInLayer.forEach(function(otherClothingPart){if(otherClothingPart===clothingPart||otherClothingPart.layer!==clothingPart.layer){return;}var otherPartLoc=da.extractBaseLocation(da.extractUnmodifiedLocation(otherClothingPart.loc));// draw the other clothing part first
if(clothingPart.aboveSameLayerParts&&clothingPart.aboveSameLayerParts.indexOf(otherPartLoc)>-1){partDependency.push([partMapInverse.get(clothingPart),partMapInverse.get(otherClothingPart)]);}// draw self first
if(clothingPart.belowSameLayerParts&&clothingPart.belowSameLayerParts.indexOf(otherPartLoc)>-1){partDependency.push([partMapInverse.get(otherClothingPart),partMapInverse.get(clothingPart)]);}});});};for(var layer in clothingPartLayers){var _ret2=_loop2(layer);if(_ret2==="continue")continue;}}function findDependencies(part){var partIndex=partMapInverse.get(part);if(part.aboveParts){part.aboveParts.forEach(function(belowPartLoc){var groupConstraint=null;// has a constraint on which group the dependency is on
if(belowPartLoc.indexOf(" ")>-1){var words=belowPartLoc.split(" ");// assume there's only 1 space for now
groupConstraint=words[0];belowPartLoc=words[1];}partGroups.forEach(function(group){if(groupConstraint&&groupConstraint!==group){return;}avatar[group].forEach(function(belowPart){if(belowPart===part||belowPart.layer>part.layer){return;}if(belowPartLoc===da.extractBaseLocation(da.extractUnmodifiedLocation(belowPart.loc))){partDependency.push([partIndex,partMapInverse.get(belowPart)]);}});});});}if(part.belowParts){part.belowParts.forEach(function(abovePartLoc){var groupConstraint=null;// has a constraint on which group the dependency is on
if(abovePartLoc.indexOf(" ")>-1){var words=abovePartLoc.split(" ");// assume there's only 1 space for now
groupConstraint=words[0];abovePartLoc=words[1];}partGroups.forEach(function(group){if(groupConstraint&&groupConstraint!==group){return;}avatar[group].forEach(function(abovePart){if(abovePart===part||part.layer>abovePart.layer){return;}if(abovePartLoc===da.extractBaseLocation(da.extractUnmodifiedLocation(abovePart.loc))){// 2nd index should be drawn before first
partDependency.push([partMapInverse.get(abovePart),partIndex]);}});});});}}var indices=[];for(var i=0;i<index;++i){indices.push(i);}// need to draw the ones "above" another one afterwards, so reverse ordering
var partOrder=da.topologicalSort(indices,partDependency).reverse();var orderedParts=[];var orderedPartTypes=[];for(var p=0;p<partOrder.length;++p){var partIndex=partOrder[p];orderedParts.push(partMap[partIndex]);orderedPartTypes.push(partTypes[partIndex]);}return{orderedPartTypes:orderedPartTypes,orderedParts:orderedParts};}function renderParts(ctxGroup,ex){var avatar=ex.avatar;var _orderParts=orderParts(avatar);var orderedPartTypes=_orderParts.orderedPartTypes;var orderedParts=_orderParts.orderedParts;// to be drawn separately
var shoeSideParts=[];var drawnParts={};for(var p=0;p<orderedParts.length;++p){var part=orderedParts[p];if(part.coverConceal&&part.coverConceal.length){var partCovered=avatar.checkPartCoveredByClothing(part);// don't draw if there's any clothing covering this location
if(partCovered){continue;}}// populate drawn part for type if not exist yet
if(drawnParts.hasOwnProperty(orderedPartTypes[p])===false){drawnParts[orderedPartTypes[p]]={};}// depending on the part type, render using different methods
var drawnPartsForType=drawnParts[orderedPartTypes[p]];// force redraw if we've drawn this part already as a child part
// (we want ALL individual parts drawn)
if(drawnPartsForType.hasOwnProperty(part.loc)){drawnPartsForType[part.loc]=null;}switch(orderedPartTypes[p]){// drop down
case"parts":case"faceParts":case"decorativeParts":renderPart(part,p,drawnPartsForType);break;case"shadingParts":renderShading(part,p,drawnPartsForType);break;case"hairParts":renderHairPart(part);break;case"clothingParts":renderClothingPart(part);break;default:break;}}// before the rendering of shading forces us to remove
renderItems();var displayCanvas=ex.canvasGroup[da.Layer.NUM_LAYERS];var displayCtx=displayCanvas.getContext("2d");displayCtx.setTransform(1,0,0,1,0,0);displayCtx.clearRect(0,0,displayCanvas.width,displayCanvas.height);var shadingCanvas=document.createElement("canvas");shadingCanvas.width=ex.canvasGroup[0].width;shadingCanvas.height=ex.canvasGroup[0].height;var shadingCtx=shadingCanvas.getContext("2d");for(var layer=da.Layer.BASE;layer<da.Layer.NUM_LAYERS;++layer){if(da.ShadingLayers.indexOf(layer)<0){displayCtx.globalCompositeOperation="source-over";displayCtx.drawImage(ex.canvasGroup[layer],0,0);}else{shadingCtx.clearRect(0,0,shadingCanvas.width,shadingCanvas.height);shadingCtx.drawImage(ex.canvasGroup[layer],0,0);// clip to layers up to now
shadingCtx.globalCompositeOperation="destination-in";shadingCtx.drawImage(displayCanvas,0,0);displayCtx.globalCompositeOperation="multiply";displayCtx.drawImage(shadingCanvas,0,0);shadingCtx.globalCompositeOperation="source-over";}}renderShoeSideView();function renderItems(){var position={x:-ex.cx-ex.ox+5,y:ex.height*0.15/2.5};avatar.items.forEach(function(item){var image=da.Items.getItemRender(item);var width=image.width;var height=image.height;// overriding with width and we should scale our height similarly
if(item.width){var scale=item.width/width;height*=scale;width=item.width;}var ctx=ctxGroup[item.layer];ctx.scale(1,-1);var renderPosition=item.renderItemLocation(ex,width,height);if(renderPosition){ctx.drawImage(image,renderPosition.x,-renderPosition.y,width,-height);}else{ctx.drawImage(image,position.x,-position.y,width,-height);position.y+=height;}ctx.scale(1,-1);});}// draw side parts of shoes
function renderShoeSideView(){var shoeSideCtx=ctxGroup[da.Layer.BACK];shoeSideCtx.save();shoeSideCtx.translate(ex.ox,ex.height-30);shoeSideCtx.scale(2.5,-2.5);var shoeBoxWidth=220/2.5;var shoeBoxHeight=ex.height*0.2/2.5;// translate to correct location
shoeSideCtx.rect(0,0,shoeBoxWidth,shoeBoxHeight);shoeSideCtx.clip();shoeSideParts.forEach(function(part){var side=part.side;shoeSideCtx.save();part.renderShoeSidePart.call(part._owner,ex[side],shoeSideCtx,avatar._clampedMods);shoeSideCtx.restore();});shoeSideCtx.restore();}function renderShading(part,partIndex,drawnParts){// shading layers should be 1 layer above
var ctx=ctxGroup[part.layer+1];ctx.save();// needs to be drawn twice if need reflection
if(part.side===da.Part.LEFT||part.reflect===true){ctx.scale(-1,1);}// configure strokes and fills
da.setStrokeAndFill(ctx,part,ex);ctx.save();// clip so that fills don't spill outside body
if(part.clipFill){clipPart(ctx,part.clipFill.call(avatar.dim,ex[part.side]));}// get the draw points for this part
da.drawPart(ex,orderedParts,partIndex,part.layer,part.side,drawnParts);// fill
fillPart(ctx,drawnParts[part.loc]);ctx.restore();if(part.reflect===true){ctx.scale(-1,1);if(part.clipFill){clipPart(ctx,part.clipFill.call(avatar.dim,ex[part.side]));}// fill
fillPart(ctx,drawnParts[part.loc]);}ctx.restore();}function renderPart(part,partIndex,drawnParts){if(!part.calcDrawPoints){return;}var ctx=ctxGroup[part.layer];ctx.save();// needs to be drawn twice if need reflection
if(part.side===da.Part.LEFT||part.reflect===true){ctx.scale(-1,1);}// configure strokes, fills, and lineWidth for this part
da.setStrokeAndFill(ctx,part,ex);ctx.lineWidth=part.getLineWidth(avatar);// clip so that fills don't spill outside body
var clipFillPath=part.clipFill?part.clipFill(ex[part.side]):ex.clip[part.layer][part.side];ctx.save();clipPart(ctx,clipFillPath);// get the draw points for this part
da.drawPart(ex,orderedParts,partIndex,part.layer,part.side,drawnParts);// fill
fillPart(ctx,drawnParts[part.loc]);// stroke (need to restore and begin to reset clipping)
ctx.restore();// exceptionally clip stroke (usually we don't clip stroke)
if(part.clipStroke){var clipStrokePath=part.clipStroke(ex[part.side]);ctx.save();clipPart(ctx,clipStrokePath);strokePart(ctx,drawnParts[part.loc]);ctx.restore();}else{strokePart(ctx,drawnParts[part.loc]);}if(part.reflect===true){ctx.scale(-1,1);ctx.save();clipPart(ctx,clipFillPath);// fill
fillPart(ctx,drawnParts[part.loc]);// stroke (need to restore and begin to reset clipping)
ctx.restore();if(part.hasOwnProperty("clipStroke")){var _clipStrokePath=part.clipStroke(ex[part.side]);ctx.save();clipPart(ctx,_clipStrokePath);strokePart(ctx,drawnParts[part.loc]);ctx.restore();}else{strokePart(ctx,drawnParts[part.loc]);}}ctx.restore();}function renderHairPart(part){var ctx=ctxGroup[part.layer];ctx.save();da.setStrokeAndFill(ctx,part,ex);// also pass in extra coloring options
part.renderHairPoints.call(avatar.dim,ctx,ex[part.side],avatar._clampedMods,ex);if(part.reflect){ctx.save();ctx.scale(-1,1);part.renderHairPoints.call(avatar.dim,ctx,ex[1-part.side],avatar._clampedMods,ex);ctx.restore();}ctx.restore();}function renderClothingPart(part){if(part instanceof da.Clothes.ShoeSidePart){shoeSideParts.push(part);return;}var ctx=ctxGroup[part.layer];var side=part.side;ctx.save();if(part.side===da.Part.LEFT){ctx.scale(-1,1);}// we don't set stroke and fill here since we don't know what properties the part
// requires from the clothes
part.renderClothingPoints.call(part._owner,ex[side],ctx,avatar._clampedMods,avatar);ctx.restore();if(part.reflect){ctx.save();ctx.scale(-1,1);part.renderClothingPoints.call(part._owner,ex[1-side],ctx,avatar._clampedMods,avatar);ctx.restore();}}}function drawPart(ex,parts,partIndex,layer,side,drawnParts){var part=parts[partIndex];// error report
if(typeof part.layer!=="number"){console.log(part.loc,"in layer",part.layer,"not found typeof",_typeof(da.Layer[part.layer]));return;}// don't draw if not part of layer, otherwise allow if needs to be reflected
if(!part.calcDrawPoints||part.layer!==layer){return;}if(part.reflect===false&&(part.side!==side||drawnParts[part.loc])){return;}// get actual draw points
var avatar=ex.avatar;if(part.hasOwnProperty("Mods")){da.applyMods(avatar.Mods,part.Mods);avatar.calcDimensions();}var owner=part._owner?part._owner:avatar.dim;// inside each call, 'this' should refer to the avatar's dimensions
var points=part.calcDrawPoints.call(owner,ex[side],avatar._clampedMods,false,part,avatar);if(part.hasOwnProperty("Mods")){da.removeMods(avatar.Mods,part.Mods);avatar.calcDimensions();}// points that will eventually get drawn
var drawnPoints=[];for(var p=0;p<points.length;++p){// means we should draw all points of this part's child here (in between its other
// points)
if(points[p]&&points[p].hasOwnProperty("child")){var _da$getChildLocation2=da.getChildLocation(part.loc,points[p].child);var childLoc=_da$getChildLocation2.childLoc;var childSide=_da$getChildLocation2.childSide;if(drawnParts.hasOwnProperty(childLoc)===false){// haven't drawn child part yet, we'll draw it now
// first find the child part
for(var childIndex=0;childIndex<parts.length;++childIndex){if(parts[childIndex].loc===childLoc&&parts[childIndex]instanceof da.BodyPart){da.drawPart(ex,parts,childIndex,layer,childSide,drawnParts);break;}}// if couldn't find child, just ignore
}// now we know either we've drawn the child before or we've just drawn it
drawnPoints.extend(drawnParts[childLoc]);// clear child drawn points so it doesn't get drawn twice
drawnParts[childLoc]=[];}else{// own point, just push
drawnPoints.push(points[p]);}}// store for later usage (synthesis)
drawnParts[part.loc]=drawnPoints;return drawnPoints;}/**
     * draw all avatar body parts on this layer and side (but not stroke or fill it)
     * returns all drawpoints for this layer and side
     */function drawPartsLayer(ex,layer,side,ctx){// we load points onto here so that they can be drawn in order
// initially we'll load the name of parts we want, then we synthesize the points
// afterwards
var drawPoints=[];// shared storage for all the actually drawn parts
var drawnParts={};for(var i=0;i<ex.avatar.parts.length;++i){da.drawPart(ex,ex.avatar.parts,i,layer,side,drawnParts);var part=ex.avatar.parts[i];if(ex.avatar.checkPartCoveredByClothing(part)===false){drawPoints.push(ex.avatar.parts[i].loc);}}drawPoints=synthesizeDrawPoints(drawPoints,drawnParts);da.drawPoints.apply(null,[ctx].concat(drawPoints));return drawPoints;}function clipPart(ctx,clipPath){if(!clipPath){return;}ctx.beginPath();da.drawPoints.apply(null,[ctx].concat(clipPath));ctx.closePath();ctx.clip();}function fillPart(ctx,points){ctx.beginPath();var fillPoints=[];points.forEach(function(point){if(point&&point.hasOwnProperty("fillOnly")){fillPoints.push.apply(fillPoints,_toConsumableArray(point.fillOnly));}else{fillPoints.push(point);}});// expand any fill only parts
da.drawPoints.apply(null,[ctx].concat(fillPoints));var firstPoint=null;var lastPoint=fillPoints[fillPoints.length-1];// force end point to bypass "smart fill" feature
if(lastPoint===da.endPoint){ctx.fill();return;}// want to make the part seem 3d and the first and last point aren't connected
for(var p=0;p<fillPoints.length;++p){if(fillPoints[p]&&fillPoints[p].hasOwnProperty("x")){firstPoint=fillPoints[p];break;}}for(var _p2=fillPoints.length-1;_p2>=0;--_p2){if(fillPoints[_p2]&&fillPoints[_p2].hasOwnProperty("x")){lastPoint=fillPoints[_p2];break;}}if(firstPoint!==null){var endPoint=connectEndPoints(lastPoint,firstPoint);da.drawPoints(ctx,null,endPoint);ctx.fill();}}function connectEndPoints(firstPoint,lastPoint){var deflection=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.25;var endPoint=da.extractPoint(lastPoint);var diff=da.diff(firstPoint,lastPoint);endPoint.cp1=da.simpleQuadratic(firstPoint,lastPoint,0.5,da.norm(diff.x,diff.y)*deflection);return endPoint;}return{draw:draw,connectEndPoints:connectEndPoints,drawPartsLayer:drawPartsLayer,drawPart:drawPart,renderBase:renderBase,renderParts:renderParts};}(da));/*
 global da
 */"use strict";Object.assign(da,function(da){// export ex.baseStroke, ex.baseFill, and ex.baseLipColor
function configureBaseColors(ex){var avatar=ex.avatar;var skin=avatar.dim.skin;if(isNaN(skin)){ex.baseFill=skin;ex.baseStroke=skin;ex.baseLipColor=skin;ex.nippleColor=skin;return;}else if(skin<11){ex.baseFill=[Math.floor(255-skin*2.8),Math.floor(214-skin*5.3),Math.floor(180-skin*6.5)];ex.baseStroke=[Math.floor(214-skin*5.1),Math.floor(156-skin*4),Math.floor(147-skin*6.4)];ex.baseLipColor=[Math.floor(194-skin*4.1),Math.floor(123-skin*4.1),Math.floor(119-skin*4.1)];ex.nippleColor=[Math.floor(140-skin*4.1),Math.floor(89-skin*4.1),Math.floor(86-skin*4.1)];}else if(skin<100){var a=skin-11;ex.baseFill=[Math.floor(227-a*9.6),Math.floor(161-a*9.1),Math.floor(115-a*6.3)];if(skin>28){a=a-(skin-23)*2.5;}// change colours to lighter so we do not get black on
// near black effects
ex.baseStroke=[Math.floor(163-a*12),Math.floor(116-a*10.8),Math.floor(83-a*7.3)];ex.baseLipColor=[Math.floor(153-a*8.9),Math.floor(82-a*6.2),Math.floor(78-a*6.4)];ex.nippleColor=[Math.floor(99-a*9.9),Math.floor(48-a*7.2),Math.floor(45-a*7.4)];}var lipProminance=0.7+da.clamp(avatar.getDim("faceFem")/(avatar.getDimDesc("faceFem").high*3),0,0.3);ex.baseLipColor.forEach(function(elem,index,arr){arr[index]=ex.baseFill[index]*(1-lipProminance)+elem*lipProminance;});// modify skin coloration by first converting to HSL
ex.baseFill=finalizeColor(ex.baseFill,avatar.Mods,"skin");ex.baseStroke=finalizeColor(ex.baseStroke,avatar.Mods,"skin");ex.baseLipColor=finalizeColor(ex.baseLipColor,avatar.Mods);ex.nippleColor=finalizeColor(ex.nippleColor,avatar.Mods);var eyeHighlight=avatar.getDim("faceFem")/avatar.getDimDesc("faceFem").high*20;ex.eyelidColor=da.adjustColor(ex.baseStroke,{s:-eyeHighlight,l:-eyeHighlight});ex.hairFill="hsl("+Math.round(avatar.dim.hairHue)+","+Math.round(avatar.dim.hairSaturation)+"%,"+Math.round(avatar.dim.hairLightness)+"%)";ex.hairStroke=da.adjustColor(ex.hairFill,{l:-10,s:-10});ex.hairAccessoryColor="hsl("+avatar.getMod("hairAccessoryHue")+","+avatar.getMod("hairAccessorySaturation")+"%,"+avatar.getMod("hairAccessoryLightness")+"%)";}function finalizeColor(rgb,mods,modName){var hsl=da.RGBToHSL({r:da.clamp(rgb[0],0,255),g:da.clamp(rgb[1],0,255),b:da.clamp(rgb[2],0,255)});if(modName){hsl.h+=mods[modName+"Hue"];hsl.s+=mods[modName+"Saturation"];hsl.l+=mods[modName+"Lightness"];}return"hsl("+da.clamp(Math.floor(hsl.h),0,360)+","+da.clamp(Math.floor(hsl.s),0,100)+"%,"+da.clamp(Math.floor(hsl.l),0,100)+"%)";}function initCanvas(canvas,ctx,config,avatar,ex,layer,clear){// clear canvas
if(clear){ctx.clearRect(0,0,canvas.width,canvas.height);}// prevent canvas from shrinking...
// use as much of the space as necessary
// use the minimum scaling from x and y, then take the rest as offset
var sx=canvas.width/180,sy=canvas.height/400;var scaling=ex.scaling=Math.min(sx,sy);ctx.scale(scaling,scaling);ex.ox=config.ox=Math.floor(canvas.width/scaling-canvas.width/sx);ex.oy=config.oy=Math.floor(canvas.height/scaling-canvas.height/sy);if(layer===da.Layer.BASE){printAdditionalInfo(canvas,ctx,config,avatar);}// only display final canvas
if(layer!==da.Layer.NUM_LAYERS){canvas.style.visibility="hidden";}ctx.translate(config.ox,0);if(layer===da.Layer.BASE){printHeight(ctx,config,avatar);}// flip vertically
ctx.scale(1,-1);// elevate by offset and shoe height (we divide by 2 to account for perspective)
// whether this is necessary can be decided at a later time
ctx.translate(0,-400-config.oy+10+da.incu(avatar.heightAdjust())/2);// scale to be in sync with the height bar
// height bar scale is 6 ft = 390-20 = 370 canvas units
ctx.scale(1,da.incu(72)/370);// move so that the center x is 0
// allow draw points to be relative to the center of the body
ctx.translate(ex.cx,0);// initialize to base skin colors
ctx.strokeStyle=ex.baseStroke;ctx.fillStyle=ex.baseFill;ctx.lineCap="round";ctx.lineJoin="round";}function printHeight(ctx,config,avatar){var shoeheight=avatar.heightAdjust();// height is given in centimeters, so have to convert
var heightread=avatar.dim.height/2.54+shoeheight;// in inches
var heightft=""+Math.floor(heightread/12)+"\'";var heightin=""+Math.floor(heightread-Math.floor(heightread/12)*12)+"\"";var oy=config.oy;// print imperial height
heightread=heightft+heightin;ctx.save();ctx.fillStyle=config.heightColor;ctx.font="12px Arial";ctx.fillText(heightread,125,16);if(shoeheight>0){heightread=avatar.dim.height/2.54;// unadjusted
heightft=""+Math.floor(heightread/12)+"\'";heightin=""+Math.floor(heightread-Math.floor(heightread/12)*12)+"\"";heightread=heightft+heightin;ctx.fillText("("+heightread+")",150,16);}// draw height measurement bar on the right
ctx.strokeStyle=config.heightBarColor;ctx.beginPath();var pos=20;ctx.moveTo(130+pos,20);ctx.lineTo(158+pos,20);ctx.lineTo(158+pos,390+oy);var dashes=370/72;var numdashes=Math.floor(72+oy/dashes);var i=1;for(i=1;i<numdashes;i++){var v=390+oy-i*dashes;ctx.moveTo(158+pos,v);if(i%12==0){ctx.lineTo(144+pos,v);}else if(i%6==0){ctx.lineTo(151+pos,v);}else if(i%3==0){ctx.lineTo(153+pos,v);}else{ctx.lineTo(155+pos,v);}}ctx.stroke();ctx.restore();}function printAdditionalInfo(canvas,ctx,config,avatar){// print other info
ctx.save();ctx.font="bold 20px Arial";ctx.fillStyle=config.genderColor;ctx.fillText(avatar.isMale()?String.fromCharCode(0x2642):String.fromCharCode(0x2640),6,24);var fontSize=da.clamp(canvas.width/avatar.name.length/2,10,24);ctx.font=fontSize+"px Arial";ctx.fillStyle=config.nameColor;var nameLengthLimit=24;if(avatar.name.length>nameLengthLimit){ctx.fillText(avatar.name.slice(0,nameLengthLimit)+"...",30,26);}else{ctx.fillText(avatar.name,30,26);}ctx.restore();}return{initCanvas:initCanvas,configureBaseColors:configureBaseColors};}(da));/*
 global da
 */"use strict";Object.assign(da,function(da){/**
     * Load all necessary module components and assets
     * This function should be called AFTER all extensions of the system is done
     * and BEFORE calling any drawing methods
     */function load(){return new Promise(function(resolve){da.loadDimensionDescriptions();da.loadMods();da.loadDefaultParts();da.loadSerialization();da.loaded=true;resolve();});}return{load:load};}(da));
